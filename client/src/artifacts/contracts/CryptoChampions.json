{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "linkToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minigameFactoryRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ElderSpiritMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ElderSpiritsBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "HeroBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "HeroMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_OF_ELDERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "affinities",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnElders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "burnHero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenTicker",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "feedAddress",
          "type": "address"
        }
      ],
      "name": "createAffinity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "declareRoundWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "disburseRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "elderMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "getAffinityFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpawnsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpirit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroGameData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroLore",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getHeroMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroStats",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroTraitsSkills",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVisuals",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVitals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumEldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heroesMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "mintElderSpirit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "heroName",
          "type": "string"
        }
      ],
      "name": "mintHero",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setElderMintPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "name": "setPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startNewPriceGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferInGameTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningAffinitiesByRound",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "10": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "11": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "12": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "2": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "25": "contracts/CryptoChampions.sol",
    "26": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
    "27": "contracts/chainlink_contracts/LinkTokenInterface.sol",
    "28": "contracts/chainlink_contracts/VRFConsumerBase.sol",
    "29": "contracts/chainlink_contracts/VRFRequestIDBase.sol",
    "3": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "31": "contracts/minigames/Minigame.sol",
    "32": "contracts/minigames/games/priceWars/PriceWars.sol",
    "33": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
    "37": "interfaces/ICryptoChampions.sol",
    "38": "interfaces/IMinigameFactoryRegistry.sol",
    "4": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SignedSafeMath.sol",
    "5": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
    "7": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "8": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
    "9": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptoChampions.sol",
    "exportedSymbols": {
      "CryptoChampions": [
        2128
      ]
    },
    "id": 2129,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:25"
      },
      {
        "absolutePath": "interfaces/ICryptoChampions.sol",
        "file": "../interfaces/ICryptoChampions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 5351,
        "src": "64:44:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMinigameFactoryRegistry.sol",
        "file": "../interfaces/IMinigameFactoryRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 5368,
        "src": "109:52:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
        "file": "./chainlink_contracts/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 4779,
        "src": "162:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/VRFConsumerBase.sol",
        "file": "./chainlink_contracts/VRFConsumerBase.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 4902,
        "src": "220:51:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
        "file": "./minigames/games/priceWars/PriceWarsFactory.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 5079,
        "src": "272:58:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWars.sol",
        "file": "./minigames/games/priceWars/PriceWars.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 5041,
        "src": "331:51:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 3370,
        "src": "384:86:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 3725,
        "src": "471:79:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 2129,
        "sourceUnit": 4733,
        "src": "551:87:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ICryptoChampions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5350,
              "src": "771:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICryptoChampions_$5350",
                "typeString": "contract ICryptoChampions"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "771:16:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3369,
              "src": "789:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$3369",
                "typeString": "contract AccessControl"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "789:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4732,
              "src": "804:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$4732",
                "typeString": "contract ERC1155"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "804:7:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "VRFConsumerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4901,
              "src": "813:15:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFConsumerBase_$4901",
                "typeString": "contract VRFConsumerBase"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "813:15:25"
          }
        ],
        "contractDependencies": [
          3369,
          4732,
          4901,
          5350,
          6356,
          6905,
          7027,
          7042,
          7228,
          8264
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11,
          "nodeType": "StructuredDocumentation",
          "src": "640:103:25",
          "text": "@title Crypto Champions Interface\n @author Oozyx\n @notice This is the crypto champions class"
        },
        "fullyImplemented": true,
        "id": 2128,
        "linearizedBaseContracts": [
          2128,
          4901,
          7228,
          4732,
          7042,
          7027,
          6905,
          8264,
          3369,
          6356,
          5350
        ],
        "name": "CryptoChampions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3724,
              "src": "841:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3724",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "835:27:25",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "contractScope": null,
              "id": 23,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3724,
              "src": "873:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3724",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "867:25:25",
            "typeName": {
              "id": 24,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "886:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "canonicalName": "CryptoChampions.Phase",
            "id": 28,
            "members": [
              {
                "id": 26,
                "name": "MINT_ELDER",
                "nodeType": "EnumValue",
                "src": "1043:10:25"
              },
              {
                "id": 27,
                "name": "MINT_HERO",
                "nodeType": "EnumValue",
                "src": "1055:9:25"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1030:36:25"
          },
          {
            "constant": false,
            "functionSelector": "055ad42e",
            "id": 30,
            "mutability": "mutable",
            "name": "currentPhase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1117:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Phase_$28",
              "typeString": "enum CryptoChampions.Phase"
            },
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "Phase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28,
              "src": "1117:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Phase_$28",
                "typeString": "enum CryptoChampions.Phase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 37,
            "mutability": "constant",
            "name": "NUM_TOKENS_MINTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1209:58:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1209:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "353030",
                "id": 32,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1255:3:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 33,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1261:2:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1265:2:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "1261:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "1255:12:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000000000000000_by_1",
                "typeString": "int_const 500000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 42,
            "mutability": "constant",
            "name": "ROLE_OWNER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1336:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 38,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f4f574e4552",
                  "id": 40,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1385:12:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  },
                  "value": "ROLE_OWNER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  }
                ],
                "id": 39,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1375:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1375:23:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 47,
            "mutability": "constant",
            "name": "ROLE_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1485:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f41444d494e",
                  "id": 45,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1534:12:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  },
                  "value": "ROLE_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  }
                ],
                "id": 44,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1524:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1524:23:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 52,
            "mutability": "constant",
            "name": "ROLE_GAME_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1595:72:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1595:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f47414d455f41444d494e",
                  "id": 50,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1649:17:25",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  },
                  "value": "ROLE_GAME_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  }
                ],
                "id": 49,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1639:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1639:28:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 55,
            "mutability": "constant",
            "name": "IN_GAME_CURRENCY_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1718:49:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 53,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1718:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1766:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 58,
            "mutability": "constant",
            "name": "HERO_MINT_ROYALTY_PROPORTION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1868:56:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 56,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1868:5:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "38",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1923:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 61,
            "mutability": "constant",
            "name": "PRICE_WARS_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "1977:53:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 59,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1977:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50524943455f57415253",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2018:12:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b6cec68f785839f995f869881592b008194e95f206e81883d1180a68c36101a2",
                "typeString": "literal_string \"PRICE_WARS\""
              },
              "value": "PRICE_WARS"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "90ded47e",
            "id": 64,
            "mutability": "constant",
            "name": "MAX_NUMBER_OF_ELDERS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2088:48:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2088:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "37",
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2135:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf61211f",
            "id": 67,
            "mutability": "mutable",
            "name": "eldersInGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2241:31:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2241:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2271:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "_elderOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2384:49:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 70,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2392:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2384:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2403:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "_elderSpirits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2491:54:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
              "typeString": "mapping(uint256 => struct ElderSpirit)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2499:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2491:31:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                "typeString": "mapping(uint256 => struct ElderSpirit)"
              },
              "valueType": {
                "contractScope": null,
                "id": 73,
                "name": "ElderSpirit",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5091,
                "src": "2510:11:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage_ptr",
                  "typeString": "struct ElderSpirit"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "caab7ef8",
            "id": 78,
            "mutability": "mutable",
            "name": "heroesMinted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2586:31:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2586:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 77,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2616:1:25",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 82,
            "mutability": "mutable",
            "name": "_heroOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2732:48:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2740:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2732:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2751:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86,
            "mutability": "mutable",
            "name": "_heroes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2829:41:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
              "typeString": "mapping(uint256 => struct Hero)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2837:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2829:24:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                "typeString": "mapping(uint256 => struct Hero)"
              },
              "valueType": {
                "contractScope": null,
                "id": 84,
                "name": "Hero",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5146,
                "src": "2848:4:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hero_$5146_storage_ptr",
                  "typeString": "struct Hero"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 92,
            "mutability": "mutable",
            "name": "_roundElderSpawns",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "2944:74:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2952:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2944:47:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 90,
                "keyType": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2971:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2963:27:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 89,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2982:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "79935fe0",
            "id": 94,
            "mutability": "mutable",
            "name": "elderMintPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3069:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3069:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a19c8bc",
            "id": 96,
            "mutability": "mutable",
            "name": "currentRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3136:27:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 95,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3136:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 100,
            "mutability": "mutable",
            "name": "_affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3240:47:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 99,
              "keyType": {
                "id": 97,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3248:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3240:26:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 98,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3258:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e5b0a993",
            "id": 103,
            "mutability": "mutable",
            "name": "affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3330:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 101,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3330:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 102,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3330:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "_keyHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3396:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3396:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "_fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3459:21:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3459:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 111,
            "mutability": "mutable",
            "name": "_heroRandomRequest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3527:55:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 110,
              "keyType": {
                "id": 108,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3535:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3527:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 109,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3546:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 115,
            "mutability": "mutable",
            "name": "_randomResultsVRF",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3635:54:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 114,
              "keyType": {
                "id": 112,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3643:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3635:27:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3654:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de51353",
            "id": 118,
            "mutability": "mutable",
            "name": "winningAffinitiesByRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3746:40:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 116,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3746:6:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 117,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3746:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "_minigameFactoryRegistry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2128,
            "src": "3835:58:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
              "typeString": "contract IMinigameFactoryRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 119,
              "name": "IMinigameFactoryRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5367,
              "src": "3835:24:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
                "typeString": "contract IMinigameFactoryRegistry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "3900:166:25",
              "text": "@notice Triggered when an elder spirit gets minted\n @param elderId The elder id belonging to the minted elder\n @param owner The address of the owner"
            },
            "id": 127,
            "name": "ElderSpiritMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "4095:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "4112:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4094:32:25"
            },
            "src": "4071:56:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "4133:163:25",
              "text": "@notice Triggered when a hero gets minted\n @param heroId The hero id belonging to the hero that was minted\n @param owner The address of the owner"
            },
            "id": 134,
            "name": "HeroMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "4318:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 134,
                  "src": "4334:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4317:31:25"
            },
            "src": "4301:48:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "4355:61:25",
              "text": "@notice Triggered when the elder spirits have been burned"
            },
            "id": 137,
            "name": "ElderSpiritsBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4445:2:25"
            },
            "src": "4421:27:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "4454:111:25",
              "text": "@notice Triggered when a hero has been burned\n @param heroId The hero id of the hero that was burned"
            },
            "id": 142,
            "name": "HeroBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 142,
                  "src": "4587:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4586:16:25"
            },
            "src": "4570:33:25"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "4911:757:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4974:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4986:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 160,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "4960:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5021:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5033:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 165,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "5007:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5007:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "5068:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5085:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 170,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "5054:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:42:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "5054:42:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5184:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5196:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5196:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 175,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3295,
                      "src": "5173:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5173:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "5173:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5227:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5239:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5239:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 181,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3233,
                      "src": "5217:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5217:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:33:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "5301:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "302e323731",
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5318:11:25",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_271000000000000000_by_1",
                        "typeString": "int_const 271000000000000000"
                      },
                      "value": "0.271"
                    },
                    "src": "5301:28:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:28:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "5378:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5393:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5378:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5378:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5447:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5462:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                          "typeString": "type(enum CryptoChampions.Phase)"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "MINT_ELDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5462:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "5447:31:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "5447:31:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "5515:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "5526:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5515:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "5515:18:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "5543:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "302e31",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5550:3:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5556:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "5556:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "5550:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "5543:19:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:19:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 212,
                      "name": "_minigameFactoryRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "5585:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "minigameFactoryRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "5637:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 213,
                        "name": "IMinigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5367,
                        "src": "5612:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMinigameFactoryRegistry_$5367_$",
                          "typeString": "type(contract IMinigameFactoryRegistry)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5612:49:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "src": "5585:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
                      "typeString": "contract IMinigameFactoryRegistry"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "5585:76:25"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "757269",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4861:5:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_96ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1",
                      "typeString": "literal_string \"uri\""
                    },
                    "value": "uri"
                  }
                ],
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 152,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4732,
                  "src": "4853:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$4732_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4853:14:25"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 156,
                    "name": "vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "4884:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 157,
                    "name": "linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148,
                    "src": "4900:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 155,
                  "name": "VRFConsumerBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4901,
                  "src": "4868:15:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$4901_$",
                    "typeString": "type(contract VRFConsumerBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4868:42:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "keyhash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4724:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "vrfCoordinator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4749:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4749:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "linkToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4781:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4781:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "minigameFactoryRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "4808:31:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4808:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4714:131:25"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4911:0:25"
            },
            "scope": 2128,
            "src": "4703:965:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "5721:132:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5739:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "IN_GAME_CURRENCY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "5749:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5739:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 227,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "5772:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "5783:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5772:31:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5739:64:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:73:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:73:25"
                },
                {
                  "id": 233,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 235,
            "name": "isValidElderSpiritId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 235,
                  "src": "5704:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5703:17:25"
            },
            "src": "5674:179:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "5896:164:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "5914:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "5923:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5914:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5906:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 246,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "5993:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 248,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 247,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "6001:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5993:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5093,
                        "src": "5993:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5985:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5985:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5985:30:25"
                },
                {
                  "id": 252,
                  "nodeType": "PlaceholderStatement",
                  "src": "6052:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 254,
            "name": "isValidHero",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 254,
                  "src": "5880:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5880:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5879:16:25"
            },
            "src": "5859:201:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "6133:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "6152:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 256,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6143:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6143:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "6143:25:25"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "6178:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "name": "onlyGameAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6133:0:25"
            },
            "src": "6110:76:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "6242:48:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "6261:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 264,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6252:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:20:25"
                },
                {
                  "id": 268,
                  "nodeType": "PlaceholderStatement",
                  "src": "6282:1:25"
                }
              ]
            },
            "documentation": null,
            "id": 270,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6242:0:25"
            },
            "src": "6223:67:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "6542:183:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 283,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6583:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2128",
                                    "typeString": "contract CryptoChampions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2128",
                                    "typeString": "contract CryptoChampions"
                                  }
                                ],
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6575:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 281,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6575:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6575:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4854,
                              "src": "6560:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$7178",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7110,
                            "src": "6560:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6560:29:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "6593:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6560:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6552:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6552:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "6552:46:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "6685:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "6695:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "userProvidedSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "6701:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 290,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4852,
                      "src": "6667:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 277,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "6660:58:25"
                }
              ]
            },
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "6296:152:25",
              "text": "@notice Makes a request for a random number\n @param userProvidedSeed The seed for the random request\n @return requestId The request id"
            },
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "userProvidedSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 297,
                  "src": "6479:24:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6478:26:25"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 297,
                  "src": "6523:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6522:19:25"
            },
            "scope": 2128,
            "src": "6453:272:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4797
            ],
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "6958:89:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "_randomResultsVRF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "6968:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 308,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "6986:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6968:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "6999:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6968:41:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "6968:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "7030:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 312,
                      "name": "_trainHero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1269,
                      "src": "7019:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7019:21:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "7019:21:25"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "6731:138:25",
              "text": "@notice Callback function used by the VRF coordinator\n @param requestId The request id\n @param randomness The randomness"
            },
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6949:8:25"
            },
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 317,
                  "src": "6901:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 317,
                  "src": "6920:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6900:39:25"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6958:0:25"
            },
            "scope": 2128,
            "src": "6874:173:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "7206:37:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "7216:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "7231:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$28",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "7216:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "7216:20:25"
                }
              ]
            },
            "documentation": {
              "id": 318,
              "nodeType": "StructuredDocumentation",
              "src": "7053:98:25",
              "text": "@notice Sets the contract's phase\n @param phase The phase the contract should be set to"
            },
            "functionSelector": "c03afb59",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 323,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 322,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "7196:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7196:9:25"
              }
            ],
            "name": "setPhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "phase",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 330,
                  "src": "7174:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$28",
                    "typeString": "enum CryptoChampions.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 319,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "7174:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$28",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7173:13:25"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7206:0:25"
            },
            "scope": 2128,
            "src": "7156:87:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "7383:74:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 338,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "7409:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 339,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7415:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7415:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 337,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "7401:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7401:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7393:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7393:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "7393:34:25"
                }
              ]
            },
            "documentation": {
              "id": 331,
              "nodeType": "StructuredDocumentation",
              "src": "7249:83:25",
              "text": "@notice Check if msg.sender has the role\n @param role The role to verify"
            },
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "role",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 345,
                  "src": "7355:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7355:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7354:14:25"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7383:0:25"
            },
            "scope": 2128,
            "src": "7337:120:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5153
            ],
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "7879:93:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "_affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "7889:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 358,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7901:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7889:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 359,
                      "name": "feedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "7916:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7889:38:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "7889:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "7953:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "7937:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7937:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7937:28:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "7937:28:25"
                }
              ]
            },
            "documentation": {
              "id": 346,
              "nodeType": "StructuredDocumentation",
              "src": "7463:309:25",
              "text": "@notice Creates a new token affinity\n @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n remove affinity function as well.\n @param tokenTicker The token ticker of the affinity\n @param feedAddress The price feed address"
            },
            "functionSelector": "9d5b82c0",
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 354,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 353,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "7869:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7869:9:25"
              }
            ],
            "name": "createAffinity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 352,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7860:8:25"
            },
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "tokenTicker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 369,
                  "src": "7801:27:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7801:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "feedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 369,
                  "src": "7830:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7830:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7800:50:25"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7879:0:25"
            },
            "scope": 2128,
            "src": "7777:195:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5158
            ],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "8188:39:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8198:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "8215:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8198:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "8198:22:25"
                }
              ]
            },
            "documentation": {
              "id": 370,
              "nodeType": "StructuredDocumentation",
              "src": "7978:135:25",
              "text": "@notice Sets the elder mint price\n @dev Can only be called by an admin address\n @param price The new elder mint price"
            },
            "functionSelector": "e3e98382",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 375,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "8178:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8178:9:25"
              }
            ],
            "name": "setElderMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 374,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8169:8:25"
            },
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "8145:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8145:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8144:15:25"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:0:25"
            },
            "scope": 2128,
            "src": "8118:109:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5169
            ],
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "8815:1582:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 397,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "8833:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8849:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_ELDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8849:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "8833:32:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8825:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8825:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "8825:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "8926:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 405,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "8941:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8926:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8918:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8918:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "8918:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9025:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9025:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 412,
                          "name": "elderMintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "9038:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9025:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9017:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9017:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "9017:36:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "_affinities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "9101:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 419,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "affinity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "9113:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9101:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9134:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9126:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 420,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9126:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9126:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9101:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9093:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9093:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:44:25"
                },
                {
                  "assignments": [
                    428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9253:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9253:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9288:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "eldersInGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "9271:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3551,
                      "src": "9271:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9271:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9253:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "9307:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 436,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "9320:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9307:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9340:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9332:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 438,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9332:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9332:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9307:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 434,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9300:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "9401:13:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 448,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "elderId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "9415:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9401:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5082,
                          "src": "9401:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9433:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9401:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 445,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9394:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9394:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "9394:45:25"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "affinityPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9549:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9549:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9549:20:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "affinityPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 455,
                          "src": "9582:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 458,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9579:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
                        "typeString": "tuple(,int256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 460,
                                "name": "_affinities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "9627:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 462,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 461,
                                "name": "affinity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "9639:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9627:21:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 459,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4778,
                            "src": "9605:21:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$4778_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9605:44:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$4778",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "latestRoundData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4777,
                        "src": "9605:60:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                          "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9605:62:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "src": "9579:88:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "9579:88:25"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "elder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 541,
                      "src": "9713:24:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 468,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5091,
                        "src": "9713:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9713:24:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 471,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9747:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5082,
                      "src": "9747:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9761:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9747:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "9747:18:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9775:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5084,
                      "src": "9775:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 480,
                      "name": "raceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "9790:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9775:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "9775:21:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9806:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5086,
                      "src": "9806:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "classId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "9822:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9806:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "9806:23:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9839:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5088,
                      "src": "9839:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "9856:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "9839:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "9839:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "9874:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinityPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5090,
                      "src": "9874:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "affinityPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "9896:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "9874:35:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "9874:35:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 502,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6344,
                          "src": "9950:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9950:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "9964:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9973:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9976:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 501,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4280,
                      "src": "9944:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9944:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "9944:35:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "10073:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 510,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10086:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10073:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 512,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6344,
                        "src": "10097:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10097:12:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10073:36:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "10073:36:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "_elderSpirits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "10119:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                          "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                        }
                      },
                      "id": 518,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10133:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10119:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                        "typeString": "struct ElderSpirit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "elder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "10144:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                        "typeString": "struct ElderSpirit memory"
                      }
                    },
                    "src": "10119:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "10119:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 522,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "10195:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10227:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 523,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "10210:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "10210:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10210:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10195:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "10195:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 530,
                        "name": "elderMintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "10294:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 529,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "10280:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10280:29:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "10280:29:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "10343:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 535,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6344,
                          "src": "10352:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10352:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 533,
                      "name": "ElderSpiritMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "10325:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10325:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "10320:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 539,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 428,
                    "src": "10383:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 540,
                  "nodeType": "Return",
                  "src": "10376:14:25"
                }
              ]
            },
            "documentation": {
              "id": 384,
              "nodeType": "StructuredDocumentation",
              "src": "8233:419:25",
              "text": "@notice Mints an elder spirit\n @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n probably be public constants defined in the crypto champions contract, this is subject to change.\n @param raceId The race id\n @param classId The class id\n @param affinity The affinity of the minted hero\n @return The elder spirit id"
            },
            "functionSelector": "0fbea841",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8788:8:25"
            },
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "raceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8691:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8691:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "classId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8715:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8740:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8681:89:25"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 542,
                  "src": "8806:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8805:9:25"
            },
            "scope": 2128,
            "src": "8657:1740:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5176
            ],
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "10647:144:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "10665:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 557,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 556,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "10678:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10665:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10698:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10690:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 558,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10690:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10690:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10665:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10657:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10657:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "10657:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 565,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "10763:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 567,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 566,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "10776:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10763:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 553,
                  "id": 568,
                  "nodeType": "Return",
                  "src": "10756:28:25"
                }
              ]
            },
            "documentation": {
              "id": 543,
              "nodeType": "StructuredDocumentation",
              "src": "10403:130:25",
              "text": "@notice Gets the elder owner for the given elder id\n @param elderId The elder id\n @return The owner of the elder"
            },
            "functionSelector": "72eda5bb",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 549,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 545,
                    "src": "10620:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 550,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 548,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "10599:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10599:29:25"
              }
            ],
            "name": "getElderOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10590:8:25"
            },
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 570,
                  "src": "10561:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10561:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10560:17:25"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 570,
                  "src": "10638:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10638:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10637:9:25"
            },
            "scope": 2128,
            "src": "10538:253:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5185
            ],
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "11130:2262:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$28",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "11148:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 586,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "11164:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$28_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_HERO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11164:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$28",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "11148:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11140:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11140:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "11140:40:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "11236:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 594,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 593,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "11250:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11236:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5082,
                        "src": "11236:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11228:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11228:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "11228:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 600,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "11348:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 599,
                          "name": "_canMintHero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 875,
                          "src": "11335:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11335:21:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11327:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11327:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "11327:30:25"
                },
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "mintPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "11427:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11427:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "11464:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "11478:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 606,
                      "name": "getHeroMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1550,
                      "src": "11447:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11447:39:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11427:59:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 612,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11504:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11504:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "mintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "11517:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11504:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11496:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11496:31:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "11496:31:25"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "11600:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11600:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 626,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11634:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 620,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "11617:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "11617:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11617:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "11639:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11617:42:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11600:59:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "11676:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 629,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "11688:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11676:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11707:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11699:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11699:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11699:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11676:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 627,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11669:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11669:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "11669:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 639,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "11770:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 641,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 640,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "11778:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11770:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5093,
                          "src": "11770:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11795:5:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11770:30:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 638,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11763:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11763:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "11763:38:25"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hero",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "11888:16:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                        "typeString": "struct Hero"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 647,
                        "name": "Hero",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5146,
                        "src": "11888:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage_ptr",
                          "typeString": "struct Hero"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11888:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11914:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5093,
                      "src": "11914:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11927:4:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11914:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "11914:17:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11941:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5095,
                      "src": "11941:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "heroName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "11953:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "11941:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "11941:20:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "11971:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roundMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5101,
                      "src": "11971:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 665,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "11990:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11971:31:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "11971:31:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 668,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12012:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "elderId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "12012:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 671,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "12027:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12012:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "12012:22:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12044:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5105,
                      "src": "12044:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 677,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12058:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 679,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 678,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12072:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12058:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5084,
                      "src": "12058:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12044:43:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "12044:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12097:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5107,
                      "src": "12097:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 686,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12112:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 688,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 687,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12126:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12112:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5086,
                      "src": "12112:30:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12097:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "12097:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "12152:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5097,
                      "src": "12152:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 695,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "12168:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 697,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 696,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "12182:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12168:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5088,
                      "src": "12168:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "12152:47:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "12152:47:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 701,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "12209:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 702,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12217:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12209:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5146_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 704,
                      "name": "hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "12227:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5146_memory_ptr",
                        "typeString": "struct Hero memory"
                      }
                    },
                    "src": "12209:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hero_$5146_storage",
                      "typeString": "struct Hero storage ref"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "12209:22:25"
                },
                {
                  "assignments": [
                    708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "12303:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12303:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 712,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12340:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "_getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "12323:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) returns (bytes32)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12323:24:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12303:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "_heroRandomRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "12357:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "12376:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12357:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 716,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "12389:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12357:38:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "12357:38:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 720,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6344,
                          "src": "12436:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12436:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12450:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12458:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12461:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 719,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4280,
                      "src": "12430:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12430:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "12430:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 728,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6344,
                          "src": "12543:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12543:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "12557:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "NUM_TOKENS_MINTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "12578:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12597:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4280,
                      "src": "12537:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12537:63:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "12537:63:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "12674:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 737,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "12686:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12674:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 738,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6344,
                        "src": "12696:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12696:12:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12674:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "12674:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 742,
                      "name": "heroesMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "12779:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12811:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 743,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12794:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "12794:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12794:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12779:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "12779:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 749,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "12823:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 752,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 750,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "12841:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12823:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "12855:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12823:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12911:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 754,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "12866:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 756,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 755,
                              "name": "currentRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "12884:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12866:31:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 758,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 757,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "12898:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12866:40:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "12866:44:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12866:47:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12823:90:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "12823:90:25"
                },
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "12954:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12954:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 773,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13023:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 768,
                            "name": "HERO_MINT_ROYALTY_PROPORTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "12989:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 766,
                            "name": "mintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "12975:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3607,
                          "src": "12975:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12975:43:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3629,
                      "src": "12975:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12975:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12954:72:25"
                },
                {
                  "assignments": [
                    775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "seedOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "13036:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 774,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13036:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 779,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 776,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "13056:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 778,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "13069:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13056:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13036:41:25"
                },
                {
                  "assignments": [
                    781,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 806,
                      "src": "13088:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13088:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 788,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13142:2:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "seedOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "13106:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13106:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 784,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "13129:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "13106:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13106:39:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13087:58:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "13163:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796d656e74206661696c6564",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13172:16:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        },
                        "value": "Payment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        }
                      ],
                      "id": 789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13155:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13155:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "13155:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "mintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "13303:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 794,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "13289:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13289:24:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "13289:24:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "13340:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 800,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6344,
                          "src": "13348:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13348:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 798,
                      "name": "HeroMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "13329:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13329:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "EmitStatement",
                  "src": "13324:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 804,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "13379:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 805,
                  "nodeType": "Return",
                  "src": "13372:13:25"
                }
              ]
            },
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "10797:149:25",
              "text": "@notice Mints a hero based on an elder spirit\n @param elderId The id of the elder spirit this hero is based on\n @return The hero id"
            },
            "functionSelector": "498e8219",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 579,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 573,
                    "src": "11091:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "11070:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11070:29:25"
              }
            ],
            "name": "mintHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 577,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11053:8:25"
            },
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 807,
                  "src": "10969:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10969:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "heroName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 807,
                  "src": "10986:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10986:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10968:43:25"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 807,
                  "src": "11117:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11117:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11116:9:25"
            },
            "scope": 2128,
            "src": "10951:2441:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "13826:598:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 815,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "13874:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 817,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 816,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "13892:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13874:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 819,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "13906:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13874:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13917:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "13874:44:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "13870:86:25",
                  "trueBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "13920:36:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13941:4:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 814,
                        "id": 823,
                        "nodeType": "Return",
                        "src": "13934:11:25"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "smallestElderAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 874,
                      "src": "14031:27:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14031:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 828,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "14061:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 830,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 829,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "14079:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14061:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 832,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 831,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "14093:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14061:40:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14031:70:25"
                },
                {
                  "body": {
                    "id": 861,
                    "nodeType": "Block",
                    "src": "14155:175:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 844,
                                "name": "_roundElderSpawns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "14173:17:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 846,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 845,
                                "name": "currentRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "14191:12:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14173:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 848,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 847,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 835,
                              "src": "14205:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14173:34:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 849,
                            "name": "smallestElderAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "14210:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14173:56:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 860,
                        "nodeType": "IfStatement",
                        "src": "14169:151:25",
                        "trueBody": {
                          "id": 859,
                          "nodeType": "Block",
                          "src": "14231:89:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 851,
                                  "name": "smallestElderAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 827,
                                  "src": "14249:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 852,
                                      "name": "_roundElderSpawns",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 92,
                                      "src": "14271:17:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 854,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 853,
                                      "name": "currentRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 96,
                                      "src": "14289:12:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14271:31:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 856,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 855,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 835,
                                    "src": "14303:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14271:34:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14249:56:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 858,
                              "nodeType": "ExpressionStatement",
                              "src": "14249:56:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 838,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "14131:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 839,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "14136:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14131:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 862,
                  "initializationExpression": {
                    "assignments": [
                      835
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 862,
                        "src": "14116:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14116:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 837,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14128:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14116:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "14150:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "14152:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 843,
                    "nodeType": "ExpressionStatement",
                    "src": "14150:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "14111:219:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 863,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "14347:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 864,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "14365:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14347:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 867,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 866,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "14379:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14347:40:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14415:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "smallestElderAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 827,
                          "src": "14391:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3607,
                        "src": "14391:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14391:26:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14347:70:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 814,
                  "id": 873,
                  "nodeType": "Return",
                  "src": "14340:77:25"
                }
              ]
            },
            "documentation": {
              "id": 808,
              "nodeType": "StructuredDocumentation",
              "src": "13398:355:25",
              "text": "@notice Checks to see if a hero can be minted for a given elder\n @dev (n < 4) || (n <= 2 * m)\n     n is number of champions already minted for elder\n     m is number of champions already minted for elder with least amount of champions\n @param elderId The elder id\n @return True if hero can be minted, false otherwise"
            },
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMintHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 875,
                  "src": "13780:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13780:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13779:17:25"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 875,
                  "src": "13820:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13820:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13819:6:25"
            },
            "scope": 2128,
            "src": "13758:666:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1268,
              "nodeType": "Block",
              "src": "14627:2658:25",
              "statements": [
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1268,
                      "src": "14637:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14637:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 891,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 888,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "14654:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 890,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 889,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "14673:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14654:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14637:46:25"
                },
                {
                  "assignments": [
                    893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 893,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1268,
                      "src": "14693:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 892,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14693:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 897,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 894,
                      "name": "_randomResultsVRF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "14716:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 896,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 895,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "14734:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14716:28:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14693:51:25"
                },
                {
                  "assignments": [
                    899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 899,
                      "mutability": "mutable",
                      "name": "newRandomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1268,
                      "src": "14754:23:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14754:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 900,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14754:23:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 901,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "14788:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 903,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "14796:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14788:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5127,
                      "src": "14788:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14812:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14788:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "14788:25:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 908,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "14840:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 910,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "14848:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14840:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "appearance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5109,
                          "src": "14840:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 912,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "14868:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 913,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14839:45:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14897:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "argumentTypes": null,
                          "id": 916,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 893,
                          "src": "14900:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 914,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "14887:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14887:26:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "14839:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "14839:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 920,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "14939:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 922,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 921,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "14947:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14939:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5111,
                          "src": "14939:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "14963:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 925,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14938:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14992:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "14995:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 926,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "14982:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14982:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "14938:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "14938:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 932,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15036:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 934,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15044:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15036:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5113,
                          "src": "15036:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 936,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15060:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 937,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15035:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15089:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15092:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 938,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15079:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15079:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15035:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "15035:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 944,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15133:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 946,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 945,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15141:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15133:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5115,
                          "src": "15133:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 948,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15157:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15132:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15186:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 952,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15189:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 950,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15176:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15176:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15132:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "15132:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 956,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15230:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 958,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 957,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15238:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15230:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5117,
                          "src": "15230:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 960,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15254:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 961,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15229:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15283:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 964,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15286:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 962,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15273:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15273:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15229:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "15229:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 968,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15328:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 970,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 969,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15336:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15328:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "alignment",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5119,
                          "src": "15328:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 972,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15355:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 973,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15327:44:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15384:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "argumentTypes": null,
                          "id": 976,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15387:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 974,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15374:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15374:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15327:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "15327:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 980,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15428:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 982,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 981,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15436:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15428:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "background",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5121,
                          "src": "15428:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 984,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15456:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 985,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15427:45:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15485:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        {
                          "argumentTypes": null,
                          "id": 988,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15489:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 986,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15475:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15475:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15427:78:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "15427:78:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 992,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15531:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 994,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 993,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15539:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15531:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hometown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5123,
                          "src": "15531:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 996,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15557:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 997,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15530:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3234",
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15586:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1000,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15590:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 998,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15576:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15576:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15530:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "15530:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1004,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15632:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1006,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1005,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15640:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15632:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "weather",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5125,
                          "src": "15632:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1008,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15657:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1009,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15631:42:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15686:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1012,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15689:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1010,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15676:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15676:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15631:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "15631:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1016,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15731:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1018,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1017,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15739:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15731:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5129,
                          "src": "15731:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1020,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15751:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1021,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15730:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15780:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1024,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15784:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1022,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15770:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15770:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15730:70:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "15730:70:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1028,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "15824:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1030,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1029,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "15832:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15824:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5129,
                      "src": "15824:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15874:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1034,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "15851:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1036,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1035,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "15859:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15851:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5129,
                              "src": "15851:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "15851:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15851:25:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15845:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "15845:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15845:32:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15824:53:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "15824:53:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1044,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "15888:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1046,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1045,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "15896:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15888:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "mana",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5131,
                          "src": "15888:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1048,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15910:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1049,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15887:39:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15939:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1052,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "15943:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1050,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "15929:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15929:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "15887:72:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "15887:72:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "15983:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1058,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1057,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "15991:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15983:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mana",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5131,
                      "src": "15983:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16037:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1062,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16012:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1064,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1063,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16020:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16012:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mana",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5131,
                              "src": "16012:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16012:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16012:27:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16006:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16006:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16006:34:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15983:57:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "15983:57:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1072,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16051:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1074,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1073,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16059:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16051:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5133,
                          "src": "16051:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1076,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16076:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1077,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16050:42:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3331",
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16105:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1080,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16109:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1078,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16095:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16095:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16050:75:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "16050:75:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1084,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16149:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1085,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "16157:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16149:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stamina",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5133,
                      "src": "16149:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16209:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1090,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16181:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1092,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1091,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16189:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16181:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stamina",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5133,
                              "src": "16181:23:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16181:27:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16181:30:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16175:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16175:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16175:37:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16149:63:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "16149:63:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1100,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16224:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1102,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1101,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16232:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16224:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "strength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5135,
                          "src": "16224:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1104,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16250:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1105,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16223:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16279:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1108,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16283:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1106,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16269:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16269:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16223:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "16223:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16322:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "16330:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16322:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "strength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5135,
                      "src": "16322:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16384:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1118,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16355:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1120,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1119,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16363:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16355:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5135,
                              "src": "16355:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16355:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16355:31:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16349:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16349:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16349:38:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16322:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "16322:65:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1128,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16398:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1130,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1129,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16406:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16398:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "dexterity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5137,
                          "src": "16398:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1132,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16425:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1133,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16397:44:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16454:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1136,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16458:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1134,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16444:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16444:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16397:77:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "16397:77:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1140,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16497:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1141,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "16505:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16497:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dexterity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5137,
                      "src": "16497:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16561:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1146,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16531:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1148,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1147,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16539:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16531:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dexterity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5137,
                              "src": "16531:25:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16531:29:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16531:32:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16525:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16525:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16525:39:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16497:67:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "16497:67:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1156,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16575:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1157,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16583:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16575:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "constitution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5139,
                          "src": "16575:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1160,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16605:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1161,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16574:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16634:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1164,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16638:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1162,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16624:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16624:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16574:80:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "16574:80:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16677:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1170,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1169,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "16685:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16677:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constitution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5139,
                      "src": "16677:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16747:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1174,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16714:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1176,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1175,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16722:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16714:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "constitution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5139,
                              "src": "16714:28:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16714:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16714:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16708:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1172,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16708:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16708:42:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16677:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "16677:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1184,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16761:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1186,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1185,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16769:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16761:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "intelligence",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5141,
                          "src": "16761:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1188,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16791:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1189,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16760:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16820:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16824:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1190,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16810:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16810:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16760:80:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "16760:80:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1196,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "16863:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1198,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1197,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "16871:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16863:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "intelligence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5141,
                      "src": "16863:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16933:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1202,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "16900:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1204,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1203,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "16908:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16900:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "intelligence",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5141,
                              "src": "16900:28:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "16900:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16900:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16894:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "16894:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16894:42:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16863:73:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "16863:73:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1212,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "16947:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1214,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1213,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "16955:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16947:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "wisdom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5143,
                          "src": "16947:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1216,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "16971:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1217,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16946:41:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17000:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "17004:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1218,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "16990:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16990:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "16946:74:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "16946:74:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1224,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "17043:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1225,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "17051:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17043:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wisdom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5143,
                      "src": "17043:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17101:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1230,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "17074:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1232,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1231,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "17082:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17074:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wisdom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5143,
                              "src": "17074:22:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "17074:26:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17074:29:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17068:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1228,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17068:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17068:36:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17043:61:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "17043:61:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1240,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "17115:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1242,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1241,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "17123:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17115:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$5146_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "charisma",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5145,
                          "src": "17115:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1244,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "17141:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1245,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "17114:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17170:2:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1248,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 899,
                          "src": "17174:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1246,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "17160:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint256_$returns$_t_uint8_$_t_uint256_$",
                          "typeString": "function (uint8,uint256) pure returns (uint8,uint256)"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17160:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                        "typeString": "tuple(uint8,uint256)"
                      }
                    },
                    "src": "17114:76:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "17114:76:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1252,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "17213:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1254,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1253,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "17221:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17213:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "charisma",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5145,
                      "src": "17213:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17275:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1258,
                                  "name": "_heroes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "17246:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                                    "typeString": "mapping(uint256 => struct Hero storage ref)"
                                  }
                                },
                                "id": 1260,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1259,
                                  "name": "heroId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "17254:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17246:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Hero_$5146_storage",
                                  "typeString": "struct Hero storage ref"
                                }
                              },
                              "id": 1261,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "charisma",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5145,
                              "src": "17246:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3551,
                            "src": "17246:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17246:31:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17240:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1256,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17240:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17240:38:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17213:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "17213:65:25"
                }
              ]
            },
            "documentation": {
              "id": 876,
              "nodeType": "StructuredDocumentation",
              "src": "14430:101:25",
              "text": "@notice Sets the hero attributes\n @param requestId The request id that is mapped to a hero"
            },
            "id": 1269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 881,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "14596:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 883,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 882,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "14615:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14596:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 884,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 880,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "14584:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14584:42:25"
              }
            ],
            "name": "_trainHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1269,
                  "src": "14556:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14556:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14555:19:25"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14627:0:25"
            },
            "scope": 2128,
            "src": "14536:2749:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "17646:89:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17702:1:25",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1285,
                                    "name": "maxNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1272,
                                    "src": "17687:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1283,
                                    "name": "randomNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1274,
                                    "src": "17670:12:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3651,
                                  "src": "17670:16:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17670:27:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3551,
                              "src": "17670:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17670:34:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17664:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1281,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "17664:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17664:41:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17724:2:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1291,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1274,
                            "src": "17707:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3629,
                          "src": "17707:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17707:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1295,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17663:65:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256)"
                    }
                  },
                  "functionReturnParameters": 1280,
                  "id": 1296,
                  "nodeType": "Return",
                  "src": "17656:72:25"
                }
              ]
            },
            "documentation": {
              "id": 1270,
              "nodeType": "StructuredDocumentation",
              "src": "17291:253:25",
              "text": "@notice Simulates rolling dice\n @param maxNumber The max number of the dice (e.g. regular die is 6)\n @param randomNumber The random number\n @return The result of the dice roll and a new random number to use for another dice roll"
            },
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rollDice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "maxNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1298,
                  "src": "17568:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17568:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1298,
                  "src": "17585:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17585:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17567:39:25"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1298,
                  "src": "17630:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17630:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1298,
                  "src": "17637:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17637:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17629:16:25"
            },
            "scope": 2128,
            "src": "17549:186:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5192
            ],
            "body": {
              "id": 1325,
              "nodeType": "Block",
              "src": "17963:139:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1311,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "17981:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1313,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1312,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "17993:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17981:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18012:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18004:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18004:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18004:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "17981:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17973:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17973:42:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "17973:42:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "_heroOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "18076:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1323,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1322,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "18088:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18076:19:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1309,
                  "id": 1324,
                  "nodeType": "Return",
                  "src": "18069:26:25"
                }
              ]
            },
            "documentation": {
              "id": 1299,
              "nodeType": "StructuredDocumentation",
              "src": "17741:120:25",
              "text": "@notice Get the hero owner for the given hero id\n @param heroId The hero id\n @return The owner address"
            },
            "functionSelector": "56b4d760",
            "id": 1326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1305,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1301,
                    "src": "17937:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1304,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "17925:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17925:19:25"
              }
            ],
            "name": "getHeroOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1303,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17916:8:25"
            },
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1326,
                  "src": "17888:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17888:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17887:16:25"
            },
            "returnParameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1326,
                  "src": "17954:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17954:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17953:9:25"
            },
            "scope": 2128,
            "src": "17866:236:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5197
            ],
            "body": {
              "id": 1335,
              "nodeType": "Block",
              "src": "18405:2:25",
              "statements": []
            },
            "documentation": {
              "id": 1327,
              "nodeType": "StructuredDocumentation",
              "src": "18108:206:25",
              "text": "@notice Disburses the rewards evenly among the heroes of the winning affinity\n @dev This will be called from a priviledged address\n @param winningAffinity The winning affinity token ticker"
            },
            "functionSelector": "2efb8874",
            "id": 1336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1333,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1332,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "18395:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18395:9:25"
              }
            ],
            "name": "disburseRewards",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1331,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18386:8:25"
            },
            "parameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1336,
                  "src": "18344:31:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18344:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18343:33:25"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18405:0:25"
            },
            "scope": 2128,
            "src": "18319:88:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5200
            ],
            "body": {
              "id": 1381,
              "nodeType": "Block",
              "src": "18515:349:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1344,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "18533:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18548:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18533:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18525:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18525:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "18525:25:25"
                },
                {
                  "body": {
                    "id": 1369,
                    "nodeType": "Block",
                    "src": "18648:98:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1359,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "18666:13:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 1361,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1360,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "18680:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18666:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5082,
                          "src": "18666:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1368,
                        "nodeType": "IfStatement",
                        "src": "18662:74:25",
                        "trueBody": {
                          "id": 1367,
                          "nodeType": "Block",
                          "src": "18690:46:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1364,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1350,
                                    "src": "18719:1:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1363,
                                  "name": "_burnElder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "18708:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18708:13:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1366,
                              "nodeType": "ExpressionStatement",
                              "src": "18708:13:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1353,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "18616:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1354,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "18621:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18616:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1370,
                  "initializationExpression": {
                    "assignments": [
                      1350
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1370,
                        "src": "18601:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18601:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1352,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18613:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18601:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "18643:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1356,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "18645:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1358,
                    "nodeType": "ExpressionStatement",
                    "src": "18643:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "18596:150:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1371,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "18787:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18819:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "18802:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "18802:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18802:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18787:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "18787:34:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1378,
                      "name": "ElderSpiritsBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "18837:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18837:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1380,
                  "nodeType": "EmitStatement",
                  "src": "18832:25:25"
                }
              ]
            },
            "documentation": {
              "id": 1337,
              "nodeType": "StructuredDocumentation",
              "src": "18413:47:25",
              "text": "@notice Burns all the elder spirits in game"
            },
            "functionSelector": "a4aeec53",
            "id": 1382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1340,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "18505:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18505:9:25"
              }
            ],
            "name": "burnElders",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1339,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18496:8:25"
            },
            "parameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18484:2:25"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18515:0:25"
            },
            "scope": 2128,
            "src": "18465:399:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1429,
              "nodeType": "Block",
              "src": "19086:504:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1392,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "19104:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 1394,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1393,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "19118:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19104:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5082,
                        "src": "19104:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19096:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19096:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "19096:37:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1399,
                          "name": "_elderOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "19371:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1401,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1400,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "19384:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19371:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1402,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "19394:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19403:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1398,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "19365:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19365:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
                  "src": "19365:40:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1406,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "19459:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19491:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1407,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "19474:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3573,
                        "src": "19474:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19474:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19459:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "19459:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1413,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "19503:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1414,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "19516:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19503:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19535:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19527:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19527:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19527:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "19503:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "19503:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1422,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "19547:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 1424,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1423,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "19561:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19547:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 1425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5082,
                      "src": "19547:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19578:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "19547:36:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1428,
                  "nodeType": "ExpressionStatement",
                  "src": "19547:36:25"
                }
              ]
            },
            "documentation": {
              "id": 1383,
              "nodeType": "StructuredDocumentation",
              "src": "18870:135:25",
              "text": "@notice Burns the elder spirit\n @dev This will only be able to be called by the contract\n @param elderId The elder id"
            },
            "id": 1430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1388,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1385,
                    "src": "19077:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1387,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "19056:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19056:29:25"
              }
            ],
            "name": "_burnElder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1430,
                  "src": "19030:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19030:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19029:17:25"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19086:0:25"
            },
            "scope": 2128,
            "src": "19010:580:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5205
            ],
            "body": {
              "id": 1513,
              "nodeType": "Block",
              "src": "19830:662:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1441,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "19848:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1442,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "19856:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19848:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5093,
                        "src": "19848:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19840:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19840:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "19840:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1448,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "19934:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1450,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1449,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "19946:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19934:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1451,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6344,
                            "src": "19957:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19957:12:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "19934:35:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19926:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19926:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1455,
                  "nodeType": "ExpressionStatement",
                  "src": "19926:44:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1457,
                          "name": "_heroOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "20031:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1459,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1458,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "20043:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20031:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1460,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "20052:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20060:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1456,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "20025:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20025:37:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "20025:37:25"
                },
                {
                  "assignments": [
                    1465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1465,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1513,
                      "src": "20136:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20136:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1470,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "20154:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1468,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1467,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "20162:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "20154:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5146_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "elderId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5103,
                    "src": "20154:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20136:41:25"
                },
                {
                  "assignments": [
                    1472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1472,
                      "mutability": "mutable",
                      "name": "heroRound",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1513,
                      "src": "20187:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20187:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1477,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "20207:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1475,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1474,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "20215:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "20207:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$5146_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "roundMinted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5101,
                    "src": "20207:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20187:47:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1478,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "20244:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1481,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1479,
                          "name": "heroRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1472,
                          "src": "20262:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20244:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1482,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1480,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "20273:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20244:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20326:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1483,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "20284:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1485,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1484,
                              "name": "heroRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1472,
                              "src": "20302:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20284:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1487,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1486,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "20313:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20284:37:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3573,
                        "src": "20284:41:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20284:44:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20244:84:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "20244:84:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "20380:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "20392:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20380:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20410:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20402:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20402:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20402:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "20380:32:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "20380:32:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1502,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "20422:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1504,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1503,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "20430:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20422:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$5146_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1505,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5093,
                      "src": "20422:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20446:5:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "20422:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "20422:29:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "20478:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1509,
                      "name": "HeroBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "20467:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20467:18:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "EmitStatement",
                  "src": "20462:23:25"
                }
              ]
            },
            "documentation": {
              "id": 1431,
              "nodeType": "StructuredDocumentation",
              "src": "19596:157:25",
              "text": "@notice Burns the hero for a refund\n @dev This will only be able to be called from the owner of the hero\n @param heroId The hero id to burn"
            },
            "functionSelector": "27e50b18",
            "id": 1514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1437,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1433,
                    "src": "19822:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1438,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1436,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "19810:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19810:19:25"
              }
            ],
            "name": "burnHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1435,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19801:8:25"
            },
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1514,
                  "src": "19776:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19776:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19775:16:25"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19830:0:25"
            },
            "scope": 2128,
            "src": "19758:734:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5313
            ],
            "body": {
              "id": 1549,
              "nodeType": "Block",
              "src": "20914:209:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1517,
                          "src": "20932:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1530,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "20941:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20932:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20924:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20924:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "20924:30:25"
                },
                {
                  "assignments": [
                    1535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1535,
                      "mutability": "mutable",
                      "name": "heroAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1549,
                      "src": "21012:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1534,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21012:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1544,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21071:1:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1536,
                            "name": "_roundElderSpawns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "21033:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1538,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1537,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1517,
                            "src": "21051:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21033:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1540,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1519,
                          "src": "21058:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21033:33:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3551,
                      "src": "21033:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21033:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21012:61:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1546,
                        "name": "heroAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1535,
                        "src": "21105:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1545,
                      "name": "_priceFormula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "21091:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21091:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1527,
                  "id": 1548,
                  "nodeType": "Return",
                  "src": "21084:32:25"
                }
              ]
            },
            "documentation": {
              "id": 1515,
              "nodeType": "StructuredDocumentation",
              "src": "20498:240:25",
              "text": "@notice Gets the minting price of a hero based on specified elder spirit\n @param round The round of the hero to be minted\n @param elderId The elder id for which the hero will be based on\n @return The hero mint price"
            },
            "functionSelector": "f32c4974",
            "id": 1550,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1523,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1519,
                    "src": "20875:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1522,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "20854:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20854:29:25"
              }
            ],
            "name": "getHeroMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1521,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20837:8:25"
            },
            "parameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1550,
                  "src": "20769:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20769:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1519,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1550,
                  "src": "20784:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20784:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20768:32:25"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1550,
                  "src": "20901:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20901:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20900:9:25"
            },
            "scope": 2128,
            "src": "20743:380:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "21434:187:25",
              "statements": [
                {
                  "assignments": [
                    1559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1559,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1597,
                      "src": "21444:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21444:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1560,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21444:13:25"
                },
                {
                  "assignments": [
                    1562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1562,
                      "mutability": "mutable",
                      "name": "base",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1597,
                      "src": "21467:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21467:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1564,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21482:1:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21467:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1565,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "21493:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21534:3:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21527:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21515:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21519:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21515:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1566,
                                  "name": "newSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1553,
                                  "src": "21501:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3607,
                                "src": "21501:13:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21501:21:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3607,
                            "src": "21501:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21501:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3629,
                        "src": "21501:32:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21501:37:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21493:45:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "21493:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1580,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "21548:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21587:2:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21575:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21579:2:25",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21575:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1583,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1562,
                                  "src": "21566:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3607,
                                "src": "21566:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21566:16:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3629,
                            "src": "21566:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21566:24:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1581,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1559,
                          "src": "21556:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3551,
                        "src": "21556:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21556:35:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21548:43:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "21548:43:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1595,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1559,
                    "src": "21609:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1557,
                  "id": 1596,
                  "nodeType": "Return",
                  "src": "21602:12:25"
                }
              ]
            },
            "documentation": {
              "id": 1551,
              "nodeType": "StructuredDocumentation",
              "src": "21129:226:25",
              "text": "@notice The bounding curve function that calculates price for the new supply\n @dev price = 0.02*(heroes minted) + 0.1\n @param newSupply The new supply after a burn or mint\n @return The calculated price"
            },
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_priceFormula",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1598,
                  "src": "21383:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21383:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21382:19:25"
            },
            "returnParameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1598,
                  "src": "21425:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21425:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21424:9:25"
            },
            "scope": 2128,
            "src": "21360:261:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4571
            ],
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "21910:483:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1620,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "21947:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1603,
                        "src": "21957:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "21963:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "21967:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "21972:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1613,
                        "src": "21981:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1617,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "21920:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoChampions_$2128",
                          "typeString": "contract super CryptoChampions"
                        }
                      },
                      "id": 1619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4571,
                      "src": "21920:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21920:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "21920:66:25"
                },
                {
                  "body": {
                    "id": 1678,
                    "nodeType": "Block",
                    "src": "22038:349:25",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1639,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1608,
                                "src": "22141:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1641,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1640,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "22145:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22141:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1642,
                              "name": "IN_GAME_CURRENCY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "22150:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22141:28:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1644,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1608,
                                "src": "22173:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1646,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1645,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "22177:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22173:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1647,
                              "name": "MAX_NUMBER_OF_ELDERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "22183:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22173:30:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22141:62:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1662,
                        "nodeType": "IfStatement",
                        "src": "22137:135:25",
                        "trueBody": {
                          "id": 1661,
                          "nodeType": "Block",
                          "src": "22205:67:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1650,
                                    "name": "_elderOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71,
                                    "src": "22223:12:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1654,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1651,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1608,
                                      "src": "22236:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1653,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1652,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1629,
                                      "src": "22240:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22236:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22223:20:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1657,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1605,
                                      "src": "22254:2:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1656,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22246:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 1655,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22246:8:25",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22246:11:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "22223:34:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1660,
                              "nodeType": "ExpressionStatement",
                              "src": "22223:34:25"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1663,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "22289:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1665,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1664,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "22293:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22289:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1666,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "22298:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22289:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1677,
                        "nodeType": "IfStatement",
                        "src": "22285:92:25",
                        "trueBody": {
                          "id": 1676,
                          "nodeType": "Block",
                          "src": "22320:57:25",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1668,
                                    "name": "_heroOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "22338:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1672,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1669,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1608,
                                      "src": "22350:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1671,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1670,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1629,
                                      "src": "22354:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22350:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22338:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1673,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1605,
                                  "src": "22360:2:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22338:24:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1675,
                              "nodeType": "ExpressionStatement",
                              "src": "22338:24:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1632,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1629,
                      "src": "22017:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1633,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "22021:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22021:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22017:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1679,
                  "initializationExpression": {
                    "assignments": [
                      1629
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1679,
                        "src": "22002:9:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22002:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1631,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22014:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22002:13:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "22033:3:25",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1636,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "22033:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1638,
                    "nodeType": "ExpressionStatement",
                    "src": "22033:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "21997:390:25"
                }
              ]
            },
            "documentation": {
              "id": 1599,
              "nodeType": "StructuredDocumentation",
              "src": "21627:57:25",
              "text": "@dev Hook function called before every token transfer"
            },
            "id": 1681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21901:8:25"
            },
            "parameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21728:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21728:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21754:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21754:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21776:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21776:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "ids",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21796:20:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1606,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21796:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1607,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21796:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21826:24:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1609,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21826:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1610,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21826:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1681,
                  "src": "21860:17:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21860:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21718:165:25"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21910:0:25"
            },
            "scope": 2128,
            "src": "21689:704:25",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5322
            ],
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "22835:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1696,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1684,
                          "src": "22853:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1697,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "22862:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22853:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22845:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22845:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "22845:30:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1701,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "22915:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 1703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1702,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "22933:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "22915:24:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1705,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1704,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "22940:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22915:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1694,
                  "id": 1706,
                  "nodeType": "Return",
                  "src": "22908:40:25"
                }
              ]
            },
            "documentation": {
              "id": 1682,
              "nodeType": "StructuredDocumentation",
              "src": "22399:256:25",
              "text": "@notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n @param round The round the elder was created\n @param elderId The elder id\n @return The amount of heroes spawned from the elder"
            },
            "functionSelector": "59ca19d3",
            "id": 1708,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1690,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1686,
                    "src": "22796:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1691,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1689,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "22775:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22775:29:25"
              }
            ],
            "name": "getElderSpawnsAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1688,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22758:8:25"
            },
            "parameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1708,
                  "src": "22690:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22690:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1686,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1708,
                  "src": "22705:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22705:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22689:32:25"
            },
            "returnParameters": {
              "id": 1694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1708,
                  "src": "22822:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22822:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22821:9:25"
            },
            "scope": 2128,
            "src": "22660:295:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1741,
              "nodeType": "Block",
              "src": "23093:191:25",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1717,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "23121:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1714,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23107:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "23107:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3573,
                        "src": "23107:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23107:19:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23129:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23107:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1740,
                  "nodeType": "IfStatement",
                  "src": "23103:175:25",
                  "trueBody": {
                    "id": 1739,
                    "nodeType": "Block",
                    "src": "23132:146:25",
                    "statements": [
                      {
                        "assignments": [
                          1722,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1722,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1739,
                            "src": "23147:12:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1721,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23147:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1734,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23211:2:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1723,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "23165:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "23165:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23165:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1729,
                                    "name": "cost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1711,
                                    "src": "23203:4:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1726,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "23189:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "23189:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3573,
                                  "src": "23189:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23189:19:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "23165:45:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23165:49:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23146:68:25"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1736,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "23236:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1735,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23228:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23228:16:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1738,
                        "nodeType": "ExpressionStatement",
                        "src": "23228:16:25"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "22961:81:25",
              "text": "@notice Refunds the sender if they sent too much\n @param cost The cost"
            },
            "id": 1742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1742,
                  "src": "23070:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23070:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23069:14:25"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23093:0:25"
            },
            "scope": 2128,
            "src": "23047:237:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5220
            ],
            "body": {
              "id": 1780,
              "nodeType": "Block",
              "src": "23771:268:25",
              "statements": [
                {
                  "assignments": [
                    1763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1763,
                      "mutability": "mutable",
                      "name": "elderSpirit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1780,
                      "src": "23781:30:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1762,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5091,
                        "src": "23781:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1767,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1764,
                      "name": "_elderSpirits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "23814:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$5091_storage_$",
                        "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                      }
                    },
                    "id": 1766,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1765,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1745,
                      "src": "23828:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23814:22:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$5091_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23781:55:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1768,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "23867:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5082,
                        "src": "23867:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1770,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "23898:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5084,
                        "src": "23898:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1772,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "23930:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5086,
                        "src": "23930:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1774,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "23963:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5088,
                        "src": "23963:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1776,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "23997:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$5091_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5090,
                        "src": "23997:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 1778,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "23853:179:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_int256_$",
                      "typeString": "tuple(bool,uint256,uint256,string memory,int256)"
                    }
                  },
                  "functionReturnParameters": 1761,
                  "id": 1779,
                  "nodeType": "Return",
                  "src": "23846:186:25"
                }
              ]
            },
            "documentation": {
              "id": 1743,
              "nodeType": "StructuredDocumentation",
              "src": "23290:212:25",
              "text": "@notice Fetches the data of a single elder spirit\n @param elderId The id of the elder being searched for\n @return The elder's attributes in the following order (valid, raceId, classId, affinity)"
            },
            "functionSelector": "21c2f72a",
            "id": 1781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1749,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1745,
                    "src": "23624:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1750,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1748,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 235,
                  "src": "23603:20:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "23603:29:25"
              }
            ],
            "name": "getElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1747,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23586:8:25"
            },
            "parameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23531:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23531:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23530:17:25"
            },
            "returnParameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1752,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23663:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23663:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1754,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23681:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23681:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23702:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23702:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23723:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23723:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1781,
                  "src": "23750:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23750:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23649:117:25"
            },
            "scope": 2128,
            "src": "23507:532:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5235
            ],
            "body": {
              "id": 1823,
              "nodeType": "Block",
              "src": "24509:228:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1801,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24540:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1803,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1802,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24548:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24540:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5093,
                        "src": "24540:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1805,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24575:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1807,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1806,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24583:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24575:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5097,
                        "src": "24575:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1809,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24613:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1811,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1810,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24621:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24613:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5099,
                        "src": "24613:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1813,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24656:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1815,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1814,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24664:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24656:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "roundMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5101,
                        "src": "24656:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1817,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "24697:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1819,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1818,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "24705:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24697:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "elderId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5103,
                        "src": "24697:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1821,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24526:204:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_storage_$_t_int256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,string storage ref,int256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1800,
                  "id": 1822,
                  "nodeType": "Return",
                  "src": "24519:211:25"
                }
              ]
            },
            "documentation": {
              "id": 1782,
              "nodeType": "StructuredDocumentation",
              "src": "24045:138:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return valid, affinity, affinity price, round minted, elder id"
            },
            "functionSelector": "2ee1f0a0",
            "id": 1824,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1788,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1784,
                    "src": "24296:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1789,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1787,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "24284:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24284:19:25"
              }
            ],
            "name": "getHeroGameData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1786,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24267:8:25"
            },
            "parameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24213:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24213:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24212:16:25"
            },
            "returnParameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1791,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24334:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1790,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24334:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1793,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24361:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1792,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24361:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1795,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24400:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24400:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24438:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24438:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1799,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "24475:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24475:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24320:184:25"
            },
            "scope": 2128,
            "src": "24188:549:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5248
            ],
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "25145:123:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1842,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25163:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1844,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1843,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "25171:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25163:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5095,
                        "src": "25163:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1846,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25185:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1848,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1847,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "25193:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25185:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5105,
                        "src": "25185:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1850,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25209:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1852,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1851,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "25217:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25209:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5107,
                        "src": "25209:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1854,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25234:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1856,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1855,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "25242:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25234:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appearance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5109,
                        "src": "25234:26:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1858,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25162:99:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 1841,
                  "id": 1859,
                  "nodeType": "Return",
                  "src": "25155:106:25"
                }
              ]
            },
            "documentation": {
              "id": 1825,
              "nodeType": "StructuredDocumentation",
              "src": "24743:118:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return name, race id, class id, appearance"
            },
            "functionSelector": "46e6f13d",
            "id": 1861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1831,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1827,
                    "src": "24973:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1832,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1830,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "24961:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24961:19:25"
              }
            ],
            "name": "getHeroVisuals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1829,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24944:8:25"
            },
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1827,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1861,
                  "src": "24890:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24890:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24889:16:25"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1861,
                  "src": "25011:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25011:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1861,
                  "src": "25046:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25046:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1861,
                  "src": "25078:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25078:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1861,
                  "src": "25111:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25111:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24997:143:25"
            },
            "scope": 2128,
            "src": "24866:402:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5261
            ],
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "25667:120:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1879,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25685:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1881,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1880,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "25693:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25685:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5111,
                        "src": "25685:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1883,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25709:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1885,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1884,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "25717:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25709:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5113,
                        "src": "25709:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1887,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25733:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1889,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1888,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "25741:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25733:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5115,
                        "src": "25733:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1891,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "25757:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1893,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1892,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "25765:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25757:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5117,
                        "src": "25757:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1895,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25684:96:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1878,
                  "id": 1896,
                  "nodeType": "Return",
                  "src": "25677:103:25"
                }
              ]
            },
            "documentation": {
              "id": 1862,
              "nodeType": "StructuredDocumentation",
              "src": "25274:117:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return trait 1, trait 2, skill 1, skill 2"
            },
            "functionSelector": "8423b077",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1868,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1864,
                    "src": "25508:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1869,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1867,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "25496:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25496:19:25"
              }
            ],
            "name": "getHeroTraitsSkills",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1866,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25479:8:25"
            },
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "25425:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25425:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25424:16:25"
            },
            "returnParameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "25546:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25546:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "25576:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25576:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "25606:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25606:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1898,
                  "src": "25636:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "25636:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25532:130:25"
            },
            "scope": 2128,
            "src": "25396:391:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5274
            ],
            "body": {
              "id": 1934,
              "nodeType": "Block",
              "src": "26190:188:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1916,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26221:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1918,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1917,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "26229:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26221:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alignment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5119,
                        "src": "26221:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1920,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26260:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1922,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "26268:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26260:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "background",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5121,
                        "src": "26260:26:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1924,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26300:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1926,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1925,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "26308:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26300:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hometown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5123,
                        "src": "26300:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1928,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26338:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1930,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1929,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "26346:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26338:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weather",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5125,
                        "src": "26338:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1932,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26207:164:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1915,
                  "id": 1933,
                  "nodeType": "Return",
                  "src": "26200:171:25"
                }
              ]
            },
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "25793:123:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return alignment, background, hometown, weather"
            },
            "functionSelector": "4c2ed018",
            "id": 1935,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1905,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1901,
                    "src": "26025:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1906,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1904,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "26013:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26013:19:25"
              }
            ],
            "name": "getHeroLore",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25996:8:25"
            },
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1935,
                  "src": "25942:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25942:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25941:16:25"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1935,
                  "src": "26063:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26063:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1935,
                  "src": "26095:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26095:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1935,
                  "src": "26128:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26128:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1935,
                  "src": "26159:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26159:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26049:136:25"
            },
            "scope": 2128,
            "src": "25921:457:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5287
            ],
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "26742:114:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1953,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26760:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1955,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1954,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "26768:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26760:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "level",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5127,
                        "src": "26760:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1957,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26783:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1959,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1958,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "26791:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26783:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5129,
                        "src": "26783:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1961,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26803:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1963,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1962,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "26811:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26803:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mana",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5131,
                        "src": "26803:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1965,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "26825:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1967,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1966,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "26833:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26825:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stamina",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5133,
                        "src": "26825:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1969,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26759:90:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1952,
                  "id": 1970,
                  "nodeType": "Return",
                  "src": "26752:97:25"
                }
              ]
            },
            "documentation": {
              "id": 1936,
              "nodeType": "StructuredDocumentation",
              "src": "26384:98:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return level, hp, mana"
            },
            "functionSelector": "48772d79",
            "id": 1972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1942,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1938,
                    "src": "26593:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1943,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1941,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "26581:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26581:19:25"
              }
            ],
            "name": "getHeroVitals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1940,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26564:8:25"
            },
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "26510:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26510:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26509:16:25"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "26631:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26631:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "26659:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26659:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1949,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "26684:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1948,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26684:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "26711:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26711:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26617:120:25"
            },
            "scope": 2128,
            "src": "26487:369:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5304
            ],
            "body": {
              "id": 2020,
              "nodeType": "Block",
              "src": "27361:269:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1994,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27392:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1996,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1995,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27400:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27392:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1997,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5135,
                        "src": "27392:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1998,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27430:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2000,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1999,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27438:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27430:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexterity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5137,
                        "src": "27430:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2002,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27469:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2004,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2003,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27477:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27469:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "constitution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5139,
                        "src": "27469:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2006,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27511:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2008,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2007,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27519:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27511:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "intelligence",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5141,
                        "src": "27511:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2010,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27553:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2012,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2011,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27561:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27553:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wisdom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5143,
                        "src": "27553:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2014,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "27589:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$5146_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 2016,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2015,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "27597:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27589:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$5146_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "charisma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5145,
                        "src": "27589:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2018,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27378:245:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1993,
                  "id": 2019,
                  "nodeType": "Return",
                  "src": "27371:252:25"
                }
              ]
            },
            "documentation": {
              "id": 1973,
              "nodeType": "StructuredDocumentation",
              "src": "26862:157:25",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
            },
            "functionSelector": "835a4398",
            "id": 2021,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1979,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1975,
                    "src": "27129:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1980,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1978,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 254,
                  "src": "27117:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27117:19:25"
              }
            ],
            "name": "getHeroStats",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1977,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27100:8:25"
            },
            "parameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27046:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27046:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27045:16:25"
            },
            "returnParameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27167:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27167:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27198:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27198:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27230:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27230:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1988,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27265:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1987,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27265:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27300:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27300:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2021,
                  "src": "27329:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27329:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27153:203:25"
            },
            "scope": 2128,
            "src": "27024:606:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5329
            ],
            "body": {
              "id": 2034,
              "nodeType": "Block",
              "src": "27912:45:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2030,
                      "name": "_affinities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "27929:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 2032,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2031,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "27941:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27929:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2029,
                  "id": 2033,
                  "nodeType": "Return",
                  "src": "27922:28:25"
                }
              ]
            },
            "documentation": {
              "id": 2022,
              "nodeType": "StructuredDocumentation",
              "src": "27636:172:25",
              "text": "@notice Fetches the feed address for a given affinity\n @param affinity The affinity being searched for\n @return The address of the affinity's feed address"
            },
            "functionSelector": "26d4d15a",
            "id": 2035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAffinityFeedAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2026,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27885:8:25"
            },
            "parameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2024,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2035,
                  "src": "27845:24:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27845:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27844:26:25"
            },
            "returnParameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2035,
                  "src": "27903:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27903:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27902:9:25"
            },
            "scope": 2128,
            "src": "27813:144:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5339
            ],
            "body": {
              "id": 2044,
              "nodeType": "Block",
              "src": "28158:36:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2042,
                    "name": "eldersInGame",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "28175:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2041,
                  "id": 2043,
                  "nodeType": "Return",
                  "src": "28168:19:25"
                }
              ]
            },
            "documentation": {
              "id": 2036,
              "nodeType": "StructuredDocumentation",
              "src": "27963:119:25",
              "text": "@notice Fetches the number of elders currently in the game\n @return The current number of elders in the game"
            },
            "functionSelector": "4c52b2a9",
            "id": 2045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumEldersInGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2038,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28131:8:25"
            },
            "parameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28114:2:25"
            },
            "returnParameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2045,
                  "src": "28149:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28149:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28148:9:25"
            },
            "scope": 2128,
            "src": "28087:107:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5334
            ],
            "body": {
              "id": 2060,
              "nodeType": "Block",
              "src": "28473:63:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "winningAffinity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "28513:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2054,
                        "name": "winningAffinitiesByRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "28483:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28483:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28483:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "28483:46:25"
                }
              ]
            },
            "documentation": {
              "id": 2046,
              "nodeType": "StructuredDocumentation",
              "src": "28200:175:25",
              "text": "@notice Declares a winning affinity for a round\n @dev This can only be called by a game admin contract\n @param winningAffinity The affinity that won the game"
            },
            "functionSelector": "9e315008",
            "id": 2061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2051,
                  "name": "onlyGameAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 262,
                  "src": "28459:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28459:13:25"
              }
            ],
            "name": "declareRoundWinner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2050,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28450:8:25"
            },
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2061,
                  "src": "28408:31:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28408:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28407:33:25"
            },
            "returnParameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28473:0:25"
            },
            "scope": 2128,
            "src": "28380:156:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5342
            ],
            "body": {
              "id": 2104,
              "nodeType": "Block",
              "src": "28705:350:25",
              "statements": [
                {
                  "assignments": [
                    2069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2069,
                      "mutability": "mutable",
                      "name": "priceWarsFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2104,
                      "src": "28715:31:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28715:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2074,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2072,
                        "name": "PRICE_WARS_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "28785:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2070,
                        "name": "_minigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "28749:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$5367",
                          "typeString": "contract IMinigameFactoryRegistry"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5366,
                      "src": "28749:35:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) external returns (address)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28749:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28715:84:25"
                },
                {
                  "assignments": [
                    2076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2076,
                      "mutability": "mutable",
                      "name": "priceWarsFactory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2104,
                      "src": "28809:33:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWarsFactory_$5078",
                        "typeString": "contract PriceWarsFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2075,
                        "name": "PriceWarsFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5078,
                        "src": "28809:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$5078",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2080,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "priceWarsFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "28862:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2077,
                      "name": "PriceWarsFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5078,
                      "src": "28845:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceWarsFactory_$5078_$",
                        "typeString": "type(contract PriceWarsFactory)"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28845:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWarsFactory_$5078",
                      "typeString": "contract PriceWarsFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28809:77:25"
                },
                {
                  "assignments": [
                    2082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2082,
                      "mutability": "mutable",
                      "name": "priceWar",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2104,
                      "src": "28896:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWars_$5040",
                        "typeString": "contract PriceWars"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2081,
                        "name": "PriceWars",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5040,
                        "src": "28896:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$5040",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2090,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2087,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "28957:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2128",
                              "typeString": "contract CryptoChampions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2128",
                              "typeString": "contract CryptoChampions"
                            }
                          ],
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28949:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28949:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28949:13:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2083,
                        "name": "priceWarsFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2076,
                        "src": "28917:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$5078",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "id": 2084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPriceWar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5077,
                      "src": "28917:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_contract$_PriceWars_$5040_$",
                        "typeString": "function (address) external returns (contract PriceWars)"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28917:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWars_$5040",
                      "typeString": "contract PriceWars"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28896:67:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2092,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "28983:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2095,
                            "name": "priceWar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2082,
                            "src": "29008:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceWars_$5040",
                              "typeString": "contract PriceWars"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceWars_$5040",
                              "typeString": "contract PriceWars"
                            }
                          ],
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29000:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2093,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29000:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29000:17:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2091,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3233,
                      "src": "28973:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28973:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "28973:45:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2099,
                        "name": "priceWar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "29028:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$5040",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startGame",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7553,
                      "src": "29028:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29028:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "29028:20:25"
                }
              ]
            },
            "documentation": {
              "id": 2062,
              "nodeType": "StructuredDocumentation",
              "src": "28542:101:25",
              "text": "@notice Starts a new price game\n @dev This can only be called by the admin of the contract"
            },
            "functionSelector": "fbc120f9",
            "id": 2105,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2066,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2065,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 270,
                  "src": "28695:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28695:9:25"
              }
            ],
            "name": "startNewPriceGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2064,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28686:8:25"
            },
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28674:2:25"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28705:0:25"
            },
            "scope": 2128,
            "src": "28648:407:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5349
            ],
            "body": {
              "id": 2126,
              "nodeType": "Block",
              "src": "29215:111:25",
              "statements": [
                {
                  "assignments": [
                    2115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2115,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2126,
                      "src": "29225:17:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2114,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "29225:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2116,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29225:17:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29269:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29269:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2120,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2108,
                        "src": "29281:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2121,
                        "name": "IN_GAME_CURRENCY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "29285:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "29306:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2123,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "29314:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2117,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "29252:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29252:67:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "29252:67:25"
                }
              ]
            },
            "documentation": {
              "id": 2106,
              "nodeType": "StructuredDocumentation",
              "src": "29061:73:25",
              "text": "@notice Transfers in game currenct tokens from one address to another"
            },
            "functionSelector": "26f7af4f",
            "id": 2127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInGameTokens",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2112,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29206:8:25"
            },
            "parameters": {
              "id": 2111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2127,
                  "src": "29169:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29169:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2127,
                  "src": "29181:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29181:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29168:28:25"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29215:0:25"
            },
            "scope": 2128,
            "src": "29139:187:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2129,
        "src": "743:28585:25"
      }
    ],
    "src": "39:29290:25"
  },
  "bytecode": "60c060405260006007556000600a553480156200001b57600080fd5b50604051620058d8380380620058d8833981810160405260808110156200004157600080fd5b5080516020808301516040808501516060909501518151808301909252600382526275726960e81b9382019390935292939092909190839083906200008d6301ffc9a760e01b620001e0565b620000988162000268565b620000aa636cdb3d1360e11b620001e0565b620000bc6303a24d0760e21b620001e0565b506001600160601b0319606092831b811660a052911b16608052620000f1600080516020620058b88339815191528062000281565b6200011b60008051602062005898833981519152600080516020620058b883398151915262000281565b620001567fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3600080516020620058b883398151915262000281565b62000171600080516020620058b883398151915233620002d3565b6200018c6000805160206200589883398151915233620002df565b6703c2c9106e218000600e556000600f556006805460ff19169055601293909355505067016345785d8a0000601355601780546001600160a01b0319166001600160a01b039092169190911790556200051e565b6001600160e01b0319808216141562000240576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b80516200027d90600490602084019062000482565b5050565b600082815260208190526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526020829052604090912060020155565b6200027d828262000343565b600082815260208190526040902060020154620003069062000300620003bc565b620003c0565b620002d35760405162461bcd60e51b815260040180806020018281038252602f81526020018062005869602f913960400191505060405180910390fd5b6000828152602081815260409091206200036891839062003436620003ed821b17901c565b156200027d5762000378620003bc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b6000828152602081815260408220620003e49184906200344b62000404821b17901c565b90505b92915050565b6000620003e4836001600160a01b0384166200041b565b6000620003e4836001600160a01b0384166200046a565b60006200042983836200046a565b6200046157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003e7565b506000620003e7565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004c557805160ff1916838001178555620004f5565b82800160010185558215620004f5579182015b82811115620004f5578251825591602001919060010190620004d8565b506200050392915062000507565b5090565b5b8082111562000503576000815560010162000508565b60805160601c60a05160601c6153176200055260003980612be1528061429c525080613da7528061426d52506153176000f3fe6080604052600436106102ad5760003560e01c806372eda5bb11610175578063a22cb465116100dc578063d547741f11610095578063e985e9c51161006f578063e985e9c514611184578063f242432a146111bf578063f32c497414611295578063fbc120f9146112c5576102ad565b8063d547741f146110f7578063e3e9838214611130578063e5b0a9931461115a576102ad565b8063a22cb46514611026578063a4aeec5314611061578063bf61211f14611076578063c03afb591461108b578063ca15c873146110b8578063caab7ef8146110e2576102ad565b806390ded47e1161012e57806390ded47e14610e9457806391d1485414610ea957806394985ddd14610ee25780639d5b82c014610f125780639e31500814610f96578063a217fddf14611011576102ad565b806372eda5bb14610d7f57806379935fe014610da9578063835a439814610dbe5780638423b07714610e255780638a19c8bc14610e4f5780639010d07c14610e64576102ad565b80632efb8874116102195780634c2ed018116101d25780634c2ed01814610b3c5780634c52b2a914610b665780634e1273f414610b7b57806356b4d76014610cfb57806359ca19d314610d255780636de5135314610d55576102ad565b80632efb8874146108c85780632f2ff15d1461094357806336568abe1461097c57806346e6f13d146109b557806348772d7914610a6f578063498e821914610ac7576102ad565b8063248a9ca31161026b578063248a9ca31461055457806326d4d15a1461057e57806326f7af4f1461061557806327e50b18146106505780632eb2c2d61461067a5780632ee1f0a014610848576102ad565b8062fdd58e146102b257806301ffc9a7146102fd578063055ad42e146103455780630e89341c1461037b5780630fbea8411461041a57806321c2f72a14610494575b600080fd5b3480156102be57600080fd5b506102eb600480360360408110156102d557600080fd5b506001600160a01b0381351690602001356112da565b60408051918252519081900360200190f35b34801561030957600080fd5b506103316004803603602081101561032057600080fd5b50356001600160e01b03191661134c565b604080519115158252519081900360200190f35b34801561035157600080fd5b5061035a61136f565b6040518082600181111561036a57fe5b815260200191505060405180910390f35b34801561038757600080fd5b506103a56004803603602081101561039e57600080fd5b5035611378565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103df5781810151838201526020016103c7565b50505050905090810190601f16801561040c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102eb6004803603606081101561043057600080fd5b813591602081013591810190606081016040820135600160201b81111561045657600080fd5b82018360208201111561046857600080fd5b803590602001918460018302840111600160201b8311171561048957600080fd5b509092509050611410565b3480156104a057600080fd5b506104be600480360360208110156104b757600080fd5b50356116ef565b60405180861515815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156105155781810151838201526020016104fd565b50505050905090810190601f1680156105425780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561056057600080fd5b506102eb6004803603602081101561057757600080fd5b503561181d565b34801561058a57600080fd5b506105f9600480360360208110156105a157600080fd5b810190602081018135600160201b8111156105bb57600080fd5b8201836020820111156105cd57600080fd5b803590602001918460018302840111600160201b831117156105ee57600080fd5b509092509050611832565b604080516001600160a01b039092168252519081900360200190f35b34801561062157600080fd5b5061064e6004803603604081101561063857600080fd5b506001600160a01b03813516906020013561186c565b005b34801561065c57600080fd5b5061064e6004803603602081101561067357600080fd5b5035611881565b34801561068657600080fd5b5061064e600480360360a081101561069d57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156106d057600080fd5b8201836020820111156106e257600080fd5b803590602001918460208302840111600160201b8311171561070357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561075257600080fd5b82018360208201111561076457600080fd5b803590602001918460208302840111600160201b8311171561078557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156107d457600080fd5b8201836020820111156107e657600080fd5b803590602001918460018302840111600160201b8311171561080757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506119cd945050505050565b34801561085457600080fd5b506108726004803603602081101561086b57600080fd5b5035611cd0565b6040518086151581526020018060200185815260200184815260200183815260200182810382528681815181526020019150805190602001908083836000838110156105155781810151838201526020016104fd565b3480156108d457600080fd5b5061064e600480360360208110156108eb57600080fd5b810190602081018135600160201b81111561090557600080fd5b82018360208201111561091757600080fd5b803590602001918460018302840111600160201b8311171561093857600080fd5b509092509050611dd2565b34801561094f57600080fd5b5061064e6004803603604081101561096657600080fd5b50803590602001356001600160a01b0316611ded565b34801561098857600080fd5b5061064e6004803603604081101561099f57600080fd5b50803590602001356001600160a01b0316611e55565b3480156109c157600080fd5b506109df600480360360208110156109d857600080fd5b5035611eb6565b60405180806020018581526020018481526020018360ff168152602001828103825286818151815260200191508051906020019080838360005b83811015610a31578181015183820152602001610a19565b50505050905090810190601f168015610a5e5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610a7b57600080fd5b50610a9960048036036020811015610a9257600080fd5b5035611fb3565b6040805160ff9586168152938516602085015291841683830152909216606082015290519081900360800190f35b6102eb60048036036040811015610add57600080fd5b81359190810190604081016020820135600160201b811115610afe57600080fd5b820183602082011115610b1057600080fd5b803590602001918460018302840111600160201b83111715610b3157600080fd5b509092509050612025565b348015610b4857600080fd5b50610a9960048036036020811015610b5f57600080fd5b5035612774565b348015610b7257600080fd5b506102eb6127eb565b348015610b8757600080fd5b50610cab60048036036040811015610b9e57600080fd5b810190602081018135600160201b811115610bb857600080fd5b820183602082011115610bca57600080fd5b803590602001918460208302840111600160201b83111715610beb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610c3a57600080fd5b820183602082011115610c4c57600080fd5b803590602001918460208302840111600160201b83111715610c6d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506127f2945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610ce7578181015183820152602001610ccf565b505050509050019250505060405180910390f35b348015610d0757600080fd5b506105f960048036036020811015610d1e57600080fd5b50356128de565b348015610d3157600080fd5b506102eb60048036036040811015610d4857600080fd5b5080359060200135612947565b348015610d6157600080fd5b506103a560048036036020811015610d7857600080fd5b5035612992565b348015610d8b57600080fd5b506105f960048036036020811015610da257600080fd5b5035612a38565b348015610db557600080fd5b506102eb612a93565b348015610dca57600080fd5b50610de860048036036020811015610de157600080fd5b5035612a99565b6040805160ff978816815295871660208701529386168585015291851660608501528416608084015290921660a082015290519081900360c00190f35b348015610e3157600080fd5b50610a9960048036036020811015610e4857600080fd5b5035612b25565b348015610e5b57600080fd5b506102eb612b94565b348015610e7057600080fd5b506105f960048036036040811015610e8757600080fd5b5080359060200135612b9a565b348015610ea057600080fd5b506102eb612bb9565b348015610eb557600080fd5b5061033160048036036040811015610ecc57600080fd5b50803590602001356001600160a01b0316612bbe565b348015610eee57600080fd5b5061064e60048036036040811015610f0557600080fd5b5080359060200135612bd6565b348015610f1e57600080fd5b5061064e60048036036040811015610f3557600080fd5b810190602081018135600160201b811115610f4f57600080fd5b820183602082011115610f6157600080fd5b803590602001918460018302840111600160201b83111715610f8257600080fd5b9193509150356001600160a01b0316612c5d565b348015610fa257600080fd5b5061064e60048036036020811015610fb957600080fd5b810190602081018135600160201b811115610fd357600080fd5b820183602082011115610fe557600080fd5b803590602001918460018302840111600160201b8311171561100657600080fd5b509092509050612cff565b34801561101d57600080fd5b506102eb612d65565b34801561103257600080fd5b5061064e6004803603604081101561104957600080fd5b506001600160a01b0381351690602001351515612d6a565b34801561106d57600080fd5b5061064e612e59565b34801561108257600080fd5b506102eb612eef565b34801561109757600080fd5b5061064e600480360360208110156110ae57600080fd5b503560ff16612ef5565b3480156110c457600080fd5b506102eb600480360360208110156110db57600080fd5b5035612f2c565b3480156110ee57600080fd5b506102eb612f43565b34801561110357600080fd5b5061064e6004803603604081101561111a57600080fd5b50803590602001356001600160a01b0316612f49565b34801561113c57600080fd5b5061064e6004803603602081101561115357600080fd5b5035612fa2565b34801561116657600080fd5b506103a56004803603602081101561117d57600080fd5b5035612fbe565b34801561119057600080fd5b50610331600480360360408110156111a757600080fd5b506001600160a01b0381358116916020013516612fcb565b3480156111cb57600080fd5b5061064e600480360360a08110156111e257600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561122157600080fd5b82018360208201111561123357600080fd5b803590602001918460018302840111600160201b8311171561125457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612ff9945050505050565b3480156112a157600080fd5b506102eb600480360360408110156112b857600080fd5b50803590602001356131c4565b3480156112d157600080fd5b5061064e613229565b60006001600160a01b0383166113215760405162461bcd60e51b815260040180806020018281038252602b81526020018061508b602b913960400191505060405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60065460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156114045780601f106113d957610100808354040283529160200191611404565b820191906000526020600020905b8154815290600101906020018083116113e757829003601f168201915b50505050509050919050565b60008060065460ff16600181111561142457fe5b1461142e57600080fd5b600780541061143c57600080fd5b600e5434101561144b57600080fd5b60006001600160a01b0316601084846040518083838082843791909101948552505060405192839003602001909220546001600160a01b031692909214159150611496905057600080fd5b6007546000906114a7906001613460565b6000818152600860205260409020549091506001600160a01b0316156114c957fe5b60008181526009602052604090205460ff16156114e257fe5b600060108585604051808383808284379190910194855250506040805193849003602001842054633fabe5a360e21b855290516001600160a01b039091169363feaf968c93506004808201935060a09291829003018186803b15801561154757600080fd5b505afa15801561155b573d6000803e3d6000fd5b505050506040513d60a081101561157157600080fd5b50602001519050611580614d23565b60018152602080820189905260408083018990528051601f88018390048302810183019091528681529087908790819084018382808284376000920191909152505050506060820152608081018290526115f36115db6134ba565b846001604051806020016040528060008152506134be565b6115fb6134ba565b600084815260086020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935560098152908290208351815460ff19169015151781558382015160018201559183015160028301556060830151805184939261166e926003850192910190614d54565b506080919091015160049091015560075461168a906001613460565b600755600e54611699906135c6565b7f3560f0337e62819199860ba21b425b8bde9a01fa6e514dd58ab6edf7daf1d1f1836116c36134ba565b604080519283526001600160a01b0390911660208301528051918290030190a150909695505050505050565b6000806000606060008560008111801561170a575060078111155b61171357600080fd5b61171b614d23565b600088815260096020908152604091829020825160a081018452815460ff1615158152600180830154828501526002808401548387015260038401805487516101009482161594909402600019011691909104601f8101869004860283018601909652858252919492936060860193919291908301828280156117df5780601f106117b4576101008083540402835291602001916117df565b820191906000526020600020905b8154815290600101906020018083116117c257829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929c919b50995091975095509350505050565b60009081526020819052604090206002015490565b6000601083836040518083838082843791909101948552505060405192839003602001909220546001600160a01b03169250505092915050565b606061187c338460008585612ff9565b505050565b806007811161188f57600080fd5b6000818152600c602052604090205460ff166118aa57600080fd5b6000828152600c602052604090205460ff166118c557600080fd5b6118cd6134ba565b6000838152600b60205260409020546001600160a01b039081169116146118f357600080fd5b6000828152600b6020526040902054611917906001600160a01b0316836001613637565b6000828152600c602090815260408083206005810154600490910154808552600d845282852082865290935292205461195190600161376a565b6000828152600d60209081526040808320868452825280832093909355868252600b815282822080546001600160a01b0319169055600c815290829020805460ff19169055815186815291517f76126f33d318abe88f8b82c5136b7e5a52091ab897679a40f612d7590adfc9979281900390910190a150505050565b8151835114611a0d5760405162461bcd60e51b815260040180806020018281038252602881526020018061526a6028913960400191505060405180910390fd5b6001600160a01b038416611a525760405162461bcd60e51b81526004018080602001828103825260258152602001806151336025913960400191505060405180910390fd5b611a5a6134ba565b6001600160a01b0316856001600160a01b03161480611a855750611a8585611a806134ba565b612fcb565b611ac05760405162461bcd60e51b81526004018080602001828103825260328152602001806151586032913960400191505060405180910390fd5b6000611aca6134ba565b9050611ada8187878787876137c7565b60005b8451811015611be0576000858281518110611af457fe5b602002602001015190506000858381518110611b0c57fe5b60200260200101519050611b79816040518060600160405280602a81526020016151cd602a91396002600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546138d99092919063ffffffff16565b60008381526002602090815260408083206001600160a01b038e811685529252808320939093558a1681522054611bb09082613460565b60009283526002602090815260408085206001600160a01b038c1686529091529092209190915550600101611add565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611c66578181015183820152602001611c4e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611ca5578181015183820152602001611c8d565b5050505090500194505050505060405180910390a4611cc8818787878787613970565b505050505050565b6000606060008060008560078111611ce757600080fd5b6000818152600c602052604090205460ff16611d0257600080fd5b6000878152600c602090815260409182902080546003820154600483015460058401546002948501805488516101006001831615026000190190911696909604601f810188900488028701880190985287865260ff909416969395929491939092869190830182828015611db75780601f10611d8c57610100808354040283529160200191611db7565b820191906000526020600020905b815481529060010190602001808311611d9a57829003601f168201915b50505050509350955095509550955095505091939590929450565b611de960008051602061518a833981519152613be6565b5050565b600082815260208190526040902060020154611e1090611e0b6134ba565b612bbe565b611e4b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061505c602f913960400191505060405180910390fd5b611de98282613bf9565b611e5d6134ba565b6001600160a01b0316816001600160a01b031614611eac5760405162461bcd60e51b815260040180806020018281038252602f8152602001806152b3602f913960400191505060405180910390fd5b611de98282613c62565b606060008060008460078111611ecb57600080fd5b6000818152600c602052604090205460ff16611ee657600080fd5b6000868152600c6020908152604091829020600681015460078201546008830154600193840180548751600261010097831615979097026000190190911695909504601f8101879004870286018701909752868552959294919360ff909116929091869190830182828015611f9c5780601f10611f7157610100808354040283529160200191611f9c565b820191906000526020600020905b815481529060010190602001808311611f7f57829003601f168201915b505050505093509450945094509450509193509193565b6000806000808460078111611fc757600080fd5b6000818152600c602052604090205460ff16611fe257600080fd5b50505060009283525050600c602052604090206008015460ff600160481b8204811692600160501b8304821692600160581b8104831692600160601b9091041690565b600083600081118015612039575060078111155b61204257600080fd5b600160065460ff16600181111561205557fe5b1461205f57600080fd5b60008581526009602052604090205460ff1661207a57600080fd5b61208385613ccb565b61208c57600080fd5b600061209a600f54876131c4565b9050803410156120a957600080fd5b600060076120c36001600a5461346090919063ffffffff16565b016000818152600b60205260409020549091506001600160a01b0316156120e657fe5b6000818152600c602052604090205460ff16156120ff57fe5b612107614dd2565b60018152604080516020601f8901819004810282018101909252878152908890889081908401838280828437600081840152601f19601f820116905080830192505050505050508160200181905250600f54816080018181525050878160a001818152505060096000898152602001908152602001600020600101548160c001818152505060096000898152602001908152602001600020600201548160e0018181525050600960008981526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122565780601f1061222b57610100808354040283529160200191612256565b820191906000526020600020905b81548152906001019060200180831161223957829003601f168201915b50505050506040828101919091526000838152600c60209081529190208251815460ff1916901515178155818301518051849361229a926001850192910190614d54565b50604082015180516122b6916002840191602090910190614d54565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360ff1602179055506101208201518160080160016101000a81548160ff021916908360ff1602179055506101408201518160080160026101000a81548160ff021916908360ff1602179055506101608201518160080160036101000a81548160ff021916908360ff1602179055506101808201518160080160046101000a81548160ff021916908360ff1602179055506101a08201518160080160056101000a81548160ff021916908360ff1602179055506101c08201518160080160066101000a81548160ff021916908360ff1602179055506101e08201518160080160076101000a81548160ff021916908360ff1602179055506102008201518160080160086101000a81548160ff021916908360ff1602179055506102208201518160080160096101000a81548160ff021916908360ff16021790555061024082015181600801600a6101000a81548160ff021916908360ff16021790555061026082015181600801600b6101000a81548160ff021916908360ff16021790555061028082015181600801600c6101000a81548160ff021916908360ff1602179055506102a082015181600801600d6101000a81548160ff021916908360ff1602179055506102c082015181600801600e6101000a81548160ff021916908360ff1602179055506102e082015181600801600f6101000a81548160ff021916908360ff1602179055506103008201518160080160106101000a81548160ff021916908360ff1602179055506103208201518160080160116101000a81548160ff021916908360ff1602179055506103408201518160080160126101000a81548160ff021916908360ff160217905550905050600061257d83613da0565b6000818152601460205260409020849055905061259b6115db6134ba565b6125c76125a66134ba565b6000681b1ae4d6e2ef500000604051806020016040528060008152506134be565b6125cf6134ba565b6000848152600b6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055600a54612609906001613460565b600a55600f546000908152600d602090815260408083208c8452909152902054612634906001613460565b600f546000908152600d602090815260408083208d845290915281209190915561266a600a612664876008613e58565b90613eb1565b60008b8152600860205260408082205490519293506001600160a01b031691829084908381818185875af1925050503d80600081146126c5576040519150601f19603f3d011682016040523d82523d6000602084013e6126ca565b606091505b5050905080612711576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b61271a876135c6565b7ff34a510082f5a02e39555458564800fc1fe73bfd8d3aa07cbf063fe662e7657e866127446134ba565b604080519283526001600160a01b0390911660208301528051918290030190a150939a9950505050505050505050565b600080600080846007811161278857600080fd5b6000818152600c602052604090205460ff166127a357600080fd5b50505060009283525050600c602052604090206008015460ff65010000000000820481169266010000000000008304821692600160381b8104831692600160401b9091041690565b6007545b90565b606081518351146128345760405162461bcd60e51b81526004018080602001828103825260298152602001806152416029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561284e57600080fd5b50604051908082528060200260200182016040528015612878578160200160208202803683370190505b50905060005b84518110156128d6576128b785828151811061289657fe5b60200260200101518583815181106128aa57fe5b60200260200101516112da565b8282815181106128c357fe5b602090810291909101015260010161287e565b509392505050565b600081600781116128ee57600080fd5b6000818152600c602052604090205460ff1661290957600080fd5b6000838152600b60205260409020546001600160a01b031661292a57600080fd5b50506000908152600b60205260409020546001600160a01b031690565b60008160008111801561295b575060078111155b61296457600080fd5b600f5484111561297357600080fd5b50506000918252600d6020908152604080842092845291905290205490565b6016818154811061299f57fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015612a305780601f10612a0557610100808354040283529160200191612a30565b820191906000526020600020905b815481529060010190602001808311612a1357829003601f168201915b505050505081565b600081600081118015612a4c575060078111155b612a5557600080fd5b6000838152600860205260409020546001600160a01b0316612a7657600080fd5b50506000908152600860205260409020546001600160a01b031690565b600e5481565b6000806000806000808660078111612ab057600080fd5b6000818152600c602052604090205460ff16612acb57600080fd5b50505060009485525050600c6020525050604090206008015460ff600160681b8204811692600160701b8304821692600160781b8104831692600160801b8204811692600160881b8304821692600160901b900490911690565b6000806000808460078111612b3957600080fd5b6000818152600c602052604090205460ff16612b5457600080fd5b50505060009283525050600c602052604090206008015460ff610100820481169262010000830482169263010000008104831692600160201b9091041690565b600f5481565b6000828152602081905260408120612bb29083613f18565b9392505050565b600781565b6000828152602081905260408120612bb2908361344b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612c53576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b611de98282613f24565b612c7460008051602061518a833981519152613be6565b8060108484604051808383808284379190910194855250506040519283900360200190922080546001600160a01b03949094166001600160a01b031990941693909317909255505060118054600181018255600091909152612cf9907f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68018484614eaf565b50505050565b612d287fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3613be6565b6016805460018101825560009190915261187c907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289018383614eaf565b600081565b816001600160a01b0316612d7c6134ba565b6001600160a01b03161415612dc25760405162461bcd60e51b81526004018080602001828103825260298152602001806152186029913960400191505060405180910390fd5b8060036000612dcf6134ba565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612e136134ba565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612e7060008051602061518a833981519152613be6565b600060075411612e7f57600080fd5b60015b60078111612eb25760008181526009602052604090205460ff1615612eaa57612eaa81613f3e565b600101612e82565b50600f54612ec1906001613460565b600f556040517f0143b2c36fac98f86168603d28d499bde9ce0367d41e111cef9f2ecbc9eeabfc90600090a1565b60075481565b612f0c60008051602061518a833981519152613be6565b6006805482919060ff191660018381811115612f2457fe5b021790555050565b600081815260208190526040812061134690613fda565b600a5481565b600082815260208190526040902060020154612f6790611e0b6134ba565b611eac5760405162461bcd60e51b81526004018080602001828103825260308152602001806151036030913960400191505060405180910390fd5b612fb960008051602061518a833981519152613be6565b600e55565b6011818154811061299f57fe5b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b03841661303e5760405162461bcd60e51b81526004018080602001828103825260258152602001806151336025913960400191505060405180910390fd5b6130466134ba565b6001600160a01b0316856001600160a01b0316148061306c575061306c85611a806134ba565b6130a75760405162461bcd60e51b81526004018080602001828103825260298152602001806150da6029913960400191505060405180910390fd5b60006130b16134ba565b90506130d18187876130c288613fe5565b6130cb88613fe5565b876137c7565b613118836040518060600160405280602a81526020016151cd602a913960008781526002602090815260408083206001600160a01b038d16845290915290205491906138d9565b60008581526002602090815260408083206001600160a01b038b8116855292528083209390935587168152205461314f9084613460565b60008581526002602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4611cc8818787878787614029565b6000816000811180156131d8575060078111155b6131e157600080fd5b600f548411156131f057600080fd5b6000848152600d60209081526040808320868452909152812054613215906001613460565b90506132208161419a565b95945050505050565b61324060008051602061518a833981519152613be6565b601754604080518082018252600a81526950524943455f5741525360b01b60208083019182529251636cadcd7960e11b8152600481019384528251602482015282516000956001600160a01b03169463d95b9af2949390928392604490910191908083838b5b838110156132be5781810151838201526020016132a6565b50505050905090810190601f1680156132eb5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561330a57600080fd5b505af115801561331e573d6000803e3d6000fd5b505050506040513d602081101561333457600080fd5b5051604080516372d7f66560e11b8152306004820152905191925082916000916001600160a01b0384169163e5afecca9160248082019260209290919082900301818787803b15801561338657600080fd5b505af115801561339a573d6000803e3d6000fd5b505050506040513d60208110156133b057600080fd5b505190506133de7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db382611ded565b806001600160a01b031663d65ab5f26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561341957600080fd5b505af115801561342d573d6000803e3d6000fd5b50505050505050565b6000612bb2836001600160a01b0384166141ec565b6000612bb2836001600160a01b038416614236565b600082820183811015612bb2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0384166135035760405162461bcd60e51b81526004018080602001828103825260218152602001806152926021913960400191505060405180910390fd5b600061350d6134ba565b905061351f816000876130c288613fe5565b60008481526002602090815260408083206001600160a01b038916845290915290205461354c9084613460565b60008581526002602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46135bf81600087878787614029565b5050505050565b60006135d2348361376a565b1115613634576000336135e5348461376a565b604051600081818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b5050905080611de957600080fd5b50565b6001600160a01b03831661367c5760405162461bcd60e51b81526004018080602001828103825260238152602001806151aa6023913960400191505060405180910390fd5b60006136866134ba565b90506136b68185600061369887613fe5565b6136a187613fe5565b604051806020016040528060008152506137c7565b6136fd826040518060600160405280602481526020016150b66024913960008681526002602090815260408083206001600160a01b038b16845290915290205491906138d9565b60008481526002602090815260408083206001600160a01b03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b6000828211156137c1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6137d5868686868686611cc8565b60005b835181101561342d5760008482815181106137ef57fe5b60200260200101511180156138185750600784828151811061380d57fe5b602002602001015111155b1561386957846008600086848151811061382e57fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600784828151811061387757fe5b602002602001015111156138d15784600b600086848151811061389657fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6001016137d8565b600081848411156139685760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561392d578181015183820152602001613915565b50505050905090810190601f16801561395a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b613982846001600160a01b031661424e565b15611cc857836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613a105781810151838201526020016139f8565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613a4f578181015183820152602001613a37565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015613a8b578181015183820152602001613a73565b50505050905090810190601f168015613ab85780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015613add57600080fd5b505af1925050508015613b0257506040513d6020811015613afd57600080fd5b505160015b613b9757613b0e614f38565b80613b195750613b60565b60405162461bcd60e51b815260206004820181815283516024840152835184939192839260440191908501908083836000831561392d578181015183820152602001613915565b60405162461bcd60e51b8152600401808060200182810382526034815260200180614fde6034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b1461342d5760405162461bcd60e51b81526004018080602001828103825260288152602001806150346028913960400191505060405180910390fd5b613bf08133612bbe565b61363457600080fd5b6000828152602081905260409020613c119082613436565b15611de957613c1e6134ba565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020613c7a9082614254565b15611de957613c876134ba565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600f546000908152600d6020908152604080832084845290915281205460041115613cf85750600161136a565b600f546000908152600d6020908152604080832085845290915290205460015b6007548111613d6d57600f546000908152600d60209081526040808320848452909152902054821115613d6557600f546000908152600d6020908152604080832084845290915290205491505b600101613d18565b50613d79816002613e58565b600f546000908152600d602090815260408083208784529091529020541115915050919050565b60006013547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613e1257600080fd5b505afa158015613e26573d6000803e3d6000fd5b505050506040513d6020811015613e3c57600080fd5b50511015613e4957600080fd5b61134660125460135484614269565b600082613e6757506000611346565b82820282848281613e7457fe5b0414612bb25760405162461bcd60e51b81526004018080602001828103825260218152602001806151f76021913960400191505060405180910390fd5b6000808211613f07576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381613f1057fe5b049392505050565b6000612bb28383614413565b6000828152601560205260409020819055611de982614477565b80600081118015613f50575060078111155b613f5957600080fd5b60008281526009602052604090205460ff16613f7457600080fd5b600082815260086020526040902054613f98906001600160a01b0316836001613637565b600754613fa690600161376a565b60075550600090815260086020908152604080832080546001600160a01b031916905560099091529020805460ff19169055565b600061134682614b4e565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061401857fe5b602090810291909101015292915050565b61403b846001600160a01b031661424e565b15611cc857836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156140ca5781810151838201526020016140b2565b50505050905090810190601f1680156140f75780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561411a57600080fd5b505af192505050801561413f57506040513d602081101561413a57600080fd5b505160015b61414b57613b0e614f38565b6001600160e01b0319811663f23a6e6160e01b1461342d5760405162461bcd60e51b81526004018080602001828103825260288152602001806150346028913960400191505060405180910390fd5b60008060016141c1606461266460026141bb88670de0b6b3a7640000613e58565b90613e58565b91506141e46141dd600a61266484670de0b6b3a7640000613e58565b8390613460565b949350505050565b60006141f88383614236565b61422e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611346565b506000611346565b60009081526001919091016020526040902054151590565b3b151590565b6000612bb2836001600160a01b038416614b52565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561434557818101518382015260200161432d565b50505050905090810190601f1680156143725780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561439357600080fd5b505af11580156143a7573d6000803e3d6000fd5b505050506040513d60208110156143bd57600080fd5b50506000848152600560205260408120546143dd90869085903090614c18565b6000868152600560205260409020549091506143fa906001613460565b6000868152600560205260409020556132208582614c5f565b815460009082106144555760405162461bcd60e51b81526004018080602001828103825260228152602001806150126022913960400191505060405180910390fd5b82600001828154811061446457fe5b9060005260206000200154905092915050565b6000818152601460205260409020546007811161449357600080fd5b6000818152600c602052604090205460ff166144ae57600080fd5b6000828152601460209081526040808320546015835281842054818552600c909352908320600801805469ff0000000000000000001916600160481b179055916144f9600283614c8b565b6000858152600c60205260409020600801805460ff191660ff9390931692909217909155905061452a600482614c8b565b6000858152600c60205260409020600801805460ff9093166101000261ff0019909316929092179091559050614561600482614c8b565b6000858152600c60205260409020600801805460ff909316620100000262ff00001990931692909217909155905061459a600482614c8b565b6000858152600c60205260409020600801805460ff90931663010000000263ff000000199093169290921790915590506145d5600482614c8b565b6000858152600c60205260409020600801805460ff909316600160201b0264ff0000000019909316929092179091559050614611600982614c8b565b6000858152600c60205260409020600801805460ff909316650100000000000265ff000000000019909316929092179091559050614650601e82614c8b565b6000858152600c60205260409020600801805460ff90931666010000000000000266ff00000000000019909316929092179091559050614691601882614c8b565b6000858152600c60205260409020600801805460ff909316600160381b0267ff00000000000000199093169290921790915590506146d0600782614c8b565b6000858152600c60205260409020600801805460ff909316600160401b0268ff000000000000000019909316929092179091559050614710601582614c8b565b6000858152600c60205260409020600801805460ff60501b1916600160501b60ff9485168102919091179182905591935061475092919004166009613460565b6000848152600c60205260409020600801805460ff92909216600160501b0260ff60501b19909216919091179055614789601582614c8b565b6000858152600c60205260409020600801805460ff60581b1916600160581b60ff948516810291909117918290559193506147c992919004166009613460565b6000848152600c60205260409020600801805460ff92909216600160581b0260ff60581b19909216919091179055614802601f82614c8b565b6000858152600c60205260409020600801805460ff60601b1916600160601b60ff9485168102919091179182905591935061484292919004166009613460565b6000848152600c60205260409020600801805460ff92909216600160601b0260ff60601b1990921691909117905561487b601082614c8b565b6000858152600c60205260409020600801805460ff60681b1916600160681b60ff948516810291909117918290559193506148bb92919004166002613460565b6000848152600c60205260409020600801805460ff92909216600160681b0260ff60681b199092169190911790556148f4601082614c8b565b6000858152600c60205260409020600801805460ff60701b1916600160701b60ff9485168102919091179182905591935061493492919004166002613460565b6000848152600c60205260409020600801805460ff92909216600160701b0260ff60701b1990921691909117905561496d601082614c8b565b6000858152600c60205260409020600801805460ff60781b1916600160781b60ff948516810291909117918290559193506149ad92919004166002613460565b6000848152600c60205260409020600801805460ff92909216600160781b0260ff60781b199092169190911790556149e6601082614c8b565b6000858152600c60205260409020600801805460ff60801b1916600160801b60ff94851681029190911791829055919350614a2692919004166002613460565b6000848152600c60205260409020600801805460ff92909216600160801b0260ff60801b19909216919091179055614a5f601082614c8b565b6000858152600c60205260409020600801805460ff60881b1916600160881b60ff94851681029190911791829055919350614a9f92919004166002613460565b6000848152600c60205260409020600801805460ff92909216600160881b0260ff60881b19909216919091179055614ad8601082614c8b565b6000858152600c60205260409020600801805460ff60901b1916600160901b60ff94851681029190911791829055919350614b1892919004166002613460565b6000938452600c6020526040909320600801805460ff94909416600160901b0260ff60901b199094169390931790925550505050565b5490565b60008181526001830160205260408120548015614c0e5783546000198083019190810190600090879083908110614b8557fe5b9060005260206000200154905080876000018481548110614ba257fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614bd257fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611346565b6000915050611346565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080614ca66001614ca08560ff8816614cbc565b90613460565b614cb184600a613eb1565b915091509250929050565b6000808211614d12576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b818381614d1b57fe5b069392505050565b6040518060a00160405280600015158152602001600081526020016000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614d9557805160ff1916838001178555614dc2565b82800160010185558215614dc2579182015b82811115614dc2578251825591602001919060010190614da7565b50614dce929150614f1d565b5090565b604080516103608101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e081018290526103008101829052610320810182905261034081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614ef05782800160ff19823516178555614dc2565b82800160010185558215614dc2579182015b82811115614dc2578235825591602001919060010190614f02565b5b80821115614dce5760008155600101614f1e565b60e01c90565b600060443d1015614f48576127ef565b600481823e6308c379a0614f5c8251614f32565b14614f66576127ef565b6040513d600319016004823e80513d67ffffffffffffffff8160248401118184111715614f9657505050506127ef565b82840192508251915080821115614fb057505050506127ef565b503d83016020828401011115614fc8575050506127ef565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212203aaaa61ae4a362ae3aff9b872ea69f1871188c4f8709968d72836480912e325864736f6c634300060c0033416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e742172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca0250969f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CryptoChampions",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "253": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "254": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "250": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "251": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "252": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "EnumerableSet._add": {
          "271": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "272": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "273": [
            2449,
            2464,
            false
          ]
        }
      },
      "2": {},
      "25": {
        "CryptoChampions._beforeTokenTransfer": {
          "240": [
            22141,
            22169,
            false
          ],
          "241": [
            22173,
            22203,
            false
          ],
          "242": [
            22289,
            22318,
            false
          ]
        },
        "CryptoChampions._burnElder": {
          "246": [
            5772,
            5803,
            true
          ],
          "247": [
            19104,
            19132,
            true
          ]
        },
        "CryptoChampions._canMintHero": {
          "244": [
            14173,
            14229,
            false
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "245": [
            6560,
            6597,
            true
          ]
        },
        "CryptoChampions._hasRole": {
          "243": [
            7401,
            7426,
            true
          ]
        },
        "CryptoChampions._refundSender": {
          "238": [
            23107,
            23130,
            false
          ],
          "239": [
            23236,
            23243,
            true
          ]
        },
        "CryptoChampions._trainHero": {
          "248": [
            5914,
            5943,
            true
          ],
          "249": [
            5993,
            6014,
            true
          ]
        },
        "CryptoChampions.burnElders": {
          "235": [
            18533,
            18549,
            true
          ],
          "236": [
            18666,
            18688,
            false
          ]
        },
        "CryptoChampions.burnHero": {
          "227": [
            19848,
            19869,
            true
          ],
          "228": [
            19934,
            19969,
            true
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "234": [
            22853,
            22874,
            true
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "237": [
            20932,
            20953,
            true
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "223": [
            8833,
            8865,
            true
          ],
          "224": [
            8926,
            8961,
            true
          ],
          "225": [
            9025,
            9052,
            true
          ],
          "226": [
            9101,
            9136,
            true
          ]
        },
        "CryptoChampions.mintHero": {
          "229": [
            11148,
            11179,
            true
          ],
          "230": [
            11236,
            11264,
            true
          ],
          "231": [
            11335,
            11356,
            true
          ],
          "232": [
            11504,
            11526,
            true
          ],
          "233": [
            13163,
            13170,
            true
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "281": [
            9592,
            9620,
            true
          ]
        }
      },
      "29": {},
      "3": {
        "SafeMath.add": {
          "274": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "279": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mod": {
          "280": [
            4905,
            4910,
            true
          ]
        },
        "SafeMath.mul": {
          "277": [
            3619,
            3625,
            false
          ],
          "278": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "275": [
            3221,
            3227,
            true
          ],
          "276": [
            5545,
            5551,
            true
          ]
        }
      },
      "31": {},
      "32": {},
      "33": {},
      "37": {},
      "38": {},
      "4": {},
      "5": {
        "ERC1155._burn": {
          "266": [
            9976,
            9997,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "267": [
            13484,
            13499,
            false
          ],
          "268": [
            13647,
            13711,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "269": [
            12712,
            12727,
            false
          ],
          "270": [
            12868,
            12927,
            false
          ]
        },
        "ERC1155._mint": {
          "265": [
            8129,
            8150,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "255": [
            3089,
            3110,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "260": [
            3574,
            3603,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "256": [
            5774,
            5802,
            true
          ],
          "257": [
            5865,
            5881,
            true
          ],
          "258": [
            5954,
            5974,
            true
          ],
          "259": [
            5978,
            6014,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "262": [
            4780,
            4796,
            true
          ],
          "263": [
            4869,
            4889,
            true
          ],
          "264": [
            4893,
            4929,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "261": [
            4061,
            4085,
            true
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "145": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "146": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "24": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "88": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "104": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "44": [
            4719,
            4824
          ],
          "45": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "89": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "46": [
            5896,
            5979
          ],
          "47": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "105": [
            5177,
            5283
          ]
        }
      },
      "1": {
        "ERC165.supportsInterface": {
          "2": [
            1066,
            1106
          ]
        }
      },
      "10": {
        "Address.isContract": {
          "176": [
            1117,
            1132
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "122": [
            678,
            695
          ]
        }
      },
      "12": {
        "EnumerableSet._add": {
          "171": [
            1761,
            1784
          ],
          "172": [
            1919,
            1959
          ],
          "173": [
            1973,
            1984
          ],
          "174": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "181": [
            4538,
            4611
          ],
          "182": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "175": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "211": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "212": [
            3274,
            3312
          ],
          "213": [
            3378,
            3421
          ],
          "214": [
            3527,
            3544
          ],
          "215": [
            3612,
            3638
          ],
          "216": [
            3653,
            3664
          ],
          "217": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "119": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "157": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "120": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "165": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "177": [
            6836,
            6896
          ]
        }
      },
      "2": {},
      "25": {
        "CryptoChampions._beforeTokenTransfer": {
          "135": [
            21920,
            21986
          ],
          "136": [
            22223,
            22257
          ],
          "137": [
            22338,
            22362
          ],
          "138": [
            22033,
            22036
          ]
        },
        "CryptoChampions._burnElder": {
          "160": [
            19096,
            19133
          ],
          "161": [
            19365,
            19405
          ],
          "162": [
            19459,
            19493
          ],
          "163": [
            19503,
            19537
          ],
          "164": [
            19547,
            19583
          ]
        },
        "CryptoChampions._canMintHero": {
          "147": [
            13934,
            13945
          ],
          "148": [
            14249,
            14305
          ],
          "149": [
            14150,
            14153
          ],
          "150": [
            14340,
            14417
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "151": [
            6552,
            6598
          ],
          "152": [
            6660,
            6718
          ]
        },
        "CryptoChampions._hasRole": {
          "144": [
            7393,
            7427
          ]
        },
        "CryptoChampions._priceFormula": {
          "169": [
            21493,
            21538
          ],
          "170": [
            21548,
            21591
          ]
        },
        "CryptoChampions._refundSender": {
          "128": [
            23228,
            23244
          ]
        },
        "CryptoChampions._rollDice": {
          "220": [
            17656,
            17728
          ]
        },
        "CryptoChampions._trainHero": {
          "183": [
            14788,
            14813
          ],
          "184": [
            14839,
            14913
          ],
          "185": [
            14938,
            15011
          ],
          "186": [
            15035,
            15108
          ],
          "187": [
            15132,
            15205
          ],
          "188": [
            15229,
            15302
          ],
          "189": [
            15327,
            15403
          ],
          "190": [
            15427,
            15505
          ],
          "191": [
            15530,
            15606
          ],
          "192": [
            15631,
            15705
          ],
          "193": [
            15730,
            15800
          ],
          "194": [
            15824,
            15877
          ],
          "195": [
            15887,
            15959
          ],
          "196": [
            15983,
            16040
          ],
          "197": [
            16050,
            16125
          ],
          "198": [
            16149,
            16212
          ],
          "199": [
            16223,
            16299
          ],
          "200": [
            16322,
            16387
          ],
          "201": [
            16397,
            16474
          ],
          "202": [
            16497,
            16564
          ],
          "203": [
            16574,
            16654
          ],
          "204": [
            16677,
            16750
          ],
          "205": [
            16760,
            16840
          ],
          "206": [
            16863,
            16936
          ],
          "207": [
            16946,
            17020
          ],
          "208": [
            17043,
            17104
          ],
          "209": [
            17114,
            17190
          ],
          "210": [
            17213,
            17278
          ]
        },
        "CryptoChampions.burnElders": {
          "98": [
            18525,
            18550
          ],
          "99": [
            18708,
            18721
          ],
          "100": [
            18643,
            18646
          ],
          "101": [
            18787,
            18821
          ],
          "102": [
            18832,
            18857
          ]
        },
        "CryptoChampions.burnHero": {
          "27": [
            19840,
            19870
          ],
          "28": [
            19926,
            19970
          ],
          "29": [
            20025,
            20062
          ],
          "30": [
            20244,
            20328
          ],
          "31": [
            20380,
            20412
          ],
          "32": [
            20422,
            20451
          ],
          "33": [
            20462,
            20485
          ]
        },
        "CryptoChampions.createAffinity": {
          "92": [
            7889,
            7927
          ],
          "93": [
            7937,
            7965
          ]
        },
        "CryptoChampions.declareRoundWinner": {
          "94": [
            28483,
            28529
          ]
        },
        "CryptoChampions.fulfillRandomness": {
          "158": [
            6968,
            7009
          ],
          "159": [
            7019,
            7040
          ]
        },
        "CryptoChampions.getAffinityFeedAddress": {
          "25": [
            27922,
            27950
          ]
        },
        "CryptoChampions.getElderOwner": {
          "84": [
            10657,
            10701
          ],
          "85": [
            10756,
            10784
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "82": [
            22845,
            22875
          ],
          "83": [
            22908,
            22948
          ]
        },
        "CryptoChampions.getElderSpirit": {
          "23": [
            23846,
            24032
          ]
        },
        "CryptoChampions.getHeroGameData": {
          "43": [
            24519,
            24730
          ]
        },
        "CryptoChampions.getHeroLore": {
          "74": [
            26200,
            26371
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "115": [
            20924,
            20954
          ],
          "116": [
            21084,
            21116
          ]
        },
        "CryptoChampions.getHeroOwner": {
          "80": [
            17973,
            18015
          ],
          "81": [
            18069,
            18095
          ]
        },
        "CryptoChampions.getHeroStats": {
          "86": [
            27371,
            27623
          ]
        },
        "CryptoChampions.getHeroTraitsSkills": {
          "87": [
            25677,
            25780
          ]
        },
        "CryptoChampions.getHeroVisuals": {
          "48": [
            25155,
            25261
          ]
        },
        "CryptoChampions.getHeroVitals": {
          "49": [
            26752,
            26849
          ]
        },
        "CryptoChampions.getNumEldersInGame": {
          "75": [
            28168,
            28187
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "4": [
            8825,
            8866
          ],
          "5": [
            8918,
            8962
          ],
          "6": [
            9017,
            9053
          ],
          "7": [
            9093,
            9137
          ],
          "8": [
            9300,
            9343
          ],
          "9": [
            9394,
            9439
          ],
          "10": [
            9579,
            9667
          ],
          "11": [
            9747,
            9765
          ],
          "12": [
            9775,
            9796
          ],
          "13": [
            9806,
            9829
          ],
          "14": [
            9839,
            9864
          ],
          "15": [
            9874,
            9909
          ],
          "16": [
            9944,
            9979
          ],
          "17": [
            10073,
            10109
          ],
          "18": [
            10119,
            10149
          ],
          "19": [
            10195,
            10229
          ],
          "20": [
            10280,
            10309
          ],
          "21": [
            10320,
            10365
          ],
          "22": [
            10376,
            10390
          ]
        },
        "CryptoChampions.mintHero": {
          "50": [
            11140,
            11180
          ],
          "51": [
            11228,
            11265
          ],
          "52": [
            11327,
            11357
          ],
          "53": [
            11496,
            11527
          ],
          "54": [
            11669,
            11710
          ],
          "55": [
            11763,
            11801
          ],
          "56": [
            11914,
            11931
          ],
          "57": [
            11941,
            11961
          ],
          "58": [
            11971,
            12002
          ],
          "59": [
            12012,
            12034
          ],
          "60": [
            12044,
            12087
          ],
          "61": [
            12097,
            12142
          ],
          "62": [
            12152,
            12199
          ],
          "63": [
            12209,
            12231
          ],
          "64": [
            12357,
            12395
          ],
          "65": [
            12430,
            12464
          ],
          "66": [
            12537,
            12600
          ],
          "67": [
            12674,
            12708
          ],
          "68": [
            12779,
            12813
          ],
          "69": [
            12823,
            12913
          ],
          "70": [
            13155,
            13189
          ],
          "71": [
            13289,
            13313
          ],
          "72": [
            13324,
            13361
          ],
          "73": [
            13372,
            13385
          ]
        },
        "CryptoChampions.setElderMintPrice": {
          "106": [
            8198,
            8220
          ]
        },
        "CryptoChampions.setPhase": {
          "103": [
            7216,
            7236
          ]
        },
        "CryptoChampions.startNewPriceGame": {
          "117": [
            28973,
            29018
          ],
          "118": [
            29028,
            29048
          ]
        },
        "CryptoChampions.transferInGameTokens": {
          "26": [
            29252,
            29319
          ]
        }
      },
      "26": {},
      "27": {},
      "28": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "90": [
            9584,
            9656
          ],
          "91": [
            9666,
            9706
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "178": [
            7678,
            7749
          ],
          "179": [
            8519,
            8561
          ],
          "180": [
            8571,
            8610
          ]
        }
      },
      "29": {
        "VRFRequestIDBase.makeRequestId": {
          "219": [
            1596,
            1655
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "218": [
            1005,
            1083
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "121": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "155": [
            4294,
            4338
          ],
          "156": [
            4348,
            4360
          ]
        },
        "SafeMath.mod": {
          "221": [
            4897,
            4939
          ],
          "222": [
            4949,
            4961
          ]
        },
        "SafeMath.mul": {
          "153": [
            3627,
            3635
          ],
          "154": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "133": [
            3213,
            3262
          ],
          "134": [
            3272,
            3284
          ],
          "139": [
            5537,
            5566
          ],
          "140": [
            5576,
            5588
          ]
        }
      },
      "31": {},
      "32": {},
      "33": {},
      "37": {},
      "38": {},
      "4": {},
      "5": {
        "ERC1155._asSingletonArray": {
          "166": [
            14169,
            14187
          ],
          "167": [
            14198,
            14210
          ]
        },
        "ERC1155._burn": {
          "129": [
            9968,
            10037
          ],
          "130": [
            10090,
            10195
          ],
          "131": [
            10206,
            10339
          ],
          "132": [
            10350,
            10412
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "141": [
            13871,
            13885
          ],
          "142": [
            13925,
            13987
          ],
          "143": [
            13735,
            13785
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "168": [
            12951,
            13001
          ]
        },
        "ERC1155._mint": {
          "123": [
            8121,
            8188
          ],
          "124": [
            8241,
            8348
          ],
          "125": [
            8359,
            8418
          ],
          "126": [
            8428,
            8490
          ],
          "127": [
            8501,
            8580
          ]
        },
        "ERC1155.balanceOf": {
          "0": [
            3081,
            3158
          ],
          "1": [
            3168,
            3197
          ]
        },
        "ERC1155.balanceOfBatch": {
          "76": [
            3566,
            3649
          ],
          "77": [
            3794,
            3843
          ],
          "78": [
            3775,
            3778
          ],
          "79": [
            3864,
            3884
          ]
        },
        "ERC1155.isApprovedForAll": {
          "107": [
            4447,
            4491
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "34": [
            5766,
            5847
          ],
          "35": [
            5857,
            5923
          ],
          "36": [
            5933,
            6090
          ],
          "37": [
            6143,
            6203
          ],
          "38": [
            6344,
            6489
          ],
          "39": [
            6503,
            6552
          ],
          "40": [
            6250,
            6253
          ],
          "41": [
            6573,
            6625
          ],
          "42": [
            6636,
            6711
          ]
        },
        "ERC1155.safeTransferFrom": {
          "108": [
            4772,
            4838
          ],
          "109": [
            4848,
            4996
          ],
          "110": [
            5049,
            5145
          ],
          "111": [
            5156,
            5255
          ],
          "112": [
            5265,
            5314
          ],
          "113": [
            5325,
            5376
          ],
          "114": [
            5387,
            5455
          ]
        },
        "ERC1155.setApprovalForAll": {
          "95": [
            4053,
            4131
          ],
          "96": [
            4142,
            4195
          ],
          "97": [
            4205,
            4258
          ]
        },
        "ERC1155.uri": {
          "3": [
            2816,
            2827
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "ICryptoChampions",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "IMinigameFactoryRegistry",
    "LinkTokenInterface",
    "Minigame",
    "PriceWars",
    "PriceWarsFactory",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SignedSafeMath",
    "VRFConsumerBase",
    "VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "743:28585:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2976:228:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;965:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;965:148:1;-1:-1:-1;;;;;;965:148:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1117:25:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2729:105:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8657:1740:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8657:1740:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8657:1740:25;;;;;;;;;;-1:-1:-1;8657:1740:25;;-1:-1:-1;8657:1740:25;-1:-1:-1;8657:1740:25;:::i;23507:532::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23507:532:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4282:112:0;;:::i;27813:144:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27813:144:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27813:144:25;;;;;;;;;;-1:-1:-1;27813:144:25;;-1:-1:-1;27813:144:25;-1:-1:-1;27813:144:25;:::i;:::-;;;;-1:-1:-1;;;;;27813:144:25;;;;;;;;;;;;;;29139:187;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;29139:187:25;;;;;;;;:::i;:::-;;19758:734;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19758:734:25;;:::i;5534:1184:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5:i;24188:549:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24188:549:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18319:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18319:88:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18319:88:25;;;;;;;;;;-1:-1:-1;18319:88:25;;-1:-1:-1;18319:88:25;-1:-1:-1;18319:88:25;:::i;4644:223:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;;-1:-1:-1;;;;;4644:223:0;;:::i;5818:205::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;;-1:-1:-1;;;;;5818:205:0;;:::i;24866:402:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24866:402:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26487:369;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26487:369:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:2441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10951:2441:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10951:2441:25;;;;;;;;;;-1:-1:-1;10951:2441:25;;-1:-1:-1;10951:2441:25;-1:-1:-1;10951:2441:25;:::i;25921:457::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25921:457:25;;:::i;28087:107::-;;;;;;;;;;;;;:::i;3361:530:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17866:236:25;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17866:236:25;;:::i;22660:295::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22660:295:25;;;;;;;:::i;3746:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3746:40:25;;:::i;10538:253::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10538:253:25;;:::i;3069:29::-;;;;;;;;;;;;;:::i;27024:606::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27024:606:25;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25396:391;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25396:391:25;;:::i;3136:27::-;;;;;;;;;;;;;:::i;3965:136:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;;;:::i;2088:48:25:-;;;;;;;;;;;;;:::i;2950:137:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;;-1:-1:-1;;;;;2950:137:0;;:::i;9496:217:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9496:217:28;;;;;;;:::i;7777:195:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7777:195:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7777:195:25;;;;;;;;;;;;-1:-1:-1;7777:195:25;-1:-1:-1;7777:195:25;-1:-1:-1;;;;;7777:195:25;;:::i;28380:156::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28380:156:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28380:156:25;;;;;;;;;;-1:-1:-1;28380:156:25;;-1:-1:-1;28380:156:25;-1:-1:-1;28380:156:25;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;3959:306:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3959:306:5;;;;;;;;;;:::i;18465:399:25:-;;;;;;;;;;;;;:::i;2241:31::-;;;;;;;;;;;;;:::i;7156:87::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7156:87:25;;;;:::i;3255:125:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3255:125:0;;:::i;2586:31:25:-;;;;;;;;;;;;;:::i;5101:226:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;;-1:-1:-1;;;;;5101:226:0;;:::i;8118:109:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8118:109:25;;:::i;3330:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3330:26:25;;:::i;4332:166:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4332:166:5;;;;;;;;;;:::i;4565:897::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4565:897:5;;-1:-1:-1;4565:897:5;;-1:-1:-1;;;;;4565:897:5:i;20743:380:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20743:380:25;;;;;;;:::i;28648:407::-;;;;;;;;;;;;;:::i;2976:228:5:-;3062:7;-1:-1:-1;;;;;3089:21:5;;3081:77;;;;-1:-1:-1;;;3081:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:13:5;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3175:22:5;;;;;;;;;;2976:228;;;;;:::o;965:148:1:-;-1:-1:-1;;;;;;1073:33:1;;1050:4;1073:33;;;:20;:33;;;;;;;;965:148;;;;:::o;1117:25:25:-;;;;;;:::o;2729:105:5:-;2823:4;2816:11;;;;;;;;-1:-1:-1;;2816:11:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:13;;2816:11;;2823:4;;2816:11;;2823:4;2816:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105;;;:::o;8657:1740:25:-;8806:7;;8833:12;;;;;:32;;;;;;;;8825:41;;;;;;2135:1;8926:12;;:35;8918:44;;;;;;9038:14;;9025:9;:27;;9017:36;;;;;;9134:1;-1:-1:-1;;;;;9101:35:25;:11;9113:8;;9101:21;;;;;;;;;;;;;;;;-1:-1:-1;;9101:21:25;;;;;;;;;;;;-1:-1:-1;;;;;9101:21:25;:35;;;;;;-1:-1:-1;9093:44:25;;-1:-1:-1;9093:44:25;;;;;9271:12;;9253:15;;9271:19;;9288:1;9271:16;:19::i;:::-;9340:1;9307:21;;;:12;:21;;;;;;9253:37;;-1:-1:-1;;;;;;9307:21:25;:35;9300:43;;;;9401:22;;;;:13;:22;;;;;:28;;;:37;9394:45;;;;9549:20;9627:11;9639:8;;9627:21;;;;;;;;;;;;;;;;-1:-1:-1;;9627:21:25;;;;;;;;;;;;-1:-1:-1;;;9605:62:25;;;;-1:-1:-1;;;;;9627:21:25;;;;9605:60;;-1:-1:-1;9605:62:25;;;;;-1:-1:-1;9605:62:25;;;;;;;;9627:21;9605:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9605:62:25;;;;-1:-1:-1;9713:24:25;;:::i;:::-;9761:4;9747:18;;9775:12;;;;:21;;;9806:13;;;;:23;;;9839:25;;;;;;;;;;;;;;;;;;;;;9856:8;;;;;;9839:25;;9856:8;;;;9839:25;;;;;;;;;-1:-1:-1;;;;9839:14:25;;;:25;9874:19;;;:35;;;9944;9950:12;:10;:12::i;:::-;9964:7;9973:1;9944:35;;;;;;;;;;;;:5;:35::i;:::-;10097:12;:10;:12::i;:::-;10073:21;;;;:12;:21;;;;;;;;:36;;-1:-1:-1;;;;;;10073:36:25;-1:-1:-1;;;;;10073:36:25;;;;;;;;;;;10119:13;:22;;;;;;:30;;;;-1:-1:-1;;10119:30:25;;;;;;;;;;;-1:-1:-1;10119:30:25;;;;;;;;;;;;;;;;;;;:22;:30;;;;;;;;;;:::i;:::-;-1:-1:-1;10119:30:25;;;;;;;;;;;10210:12;;:19;;10227:1;10210:16;:19::i;:::-;10195:12;:34;10294:14;;10280:29;;:13;:29::i;:::-;10325:40;10343:7;10352:12;:10;:12::i;:::-;10325:40;;;;;;-1:-1:-1;;;;;10325:40:25;;;;;;;;;;;;;;;;-1:-1:-1;10383:7:25;;8657:1740;-1:-1:-1;;;;;;8657:1740:25:o;23507:532::-;23663:4;23681:7;23702;23723:13;23750:6;23624:7;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;23781:30:::1;;:::i;:::-;23814:22;::::0;;;:13:::1;:22;::::0;;;;;;;;23781:55;;::::1;::::0;::::1;::::0;;;;::::1;;;;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;23781:55:25;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;23814:22;;23781:55;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;23781:55:25;;;-1:-1:-1;;23781:55:25::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;23867:17;;23898:18;;::::1;::::0;23930:19:::1;::::0;::::1;::::0;23963:20:::1;::::0;::::1;::::0;23997:25:::1;::::0;;::::1;::::0;23867:17;;23898:18;;-1:-1:-1;23930:19:25;-1:-1:-1;23963:20:25;;-1:-1:-1;23997:25:25;-1:-1:-1;23507:532:25;-1:-1:-1;;;;23507:532:25:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;27813:144:25:-;27903:7;27929:11;27941:8;;27929:21;;;;;;;;;;;;;;;;-1:-1:-1;;27929:21:25;;;;;;;;;;;;-1:-1:-1;;;;;27929:21:25;;-1:-1:-1;;;27813:144:25;;;;:::o;29139:187::-;29225:17;29252:67;29269:10;29281:2;1766:1;29306:6;29314:4;29252:16;:67::i;:::-;29139:187;;;:::o;19758:734::-;19822:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;19848:15:::1;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;19840:30;;;::::0;::::1;;19957:12;:10;:12::i;:::-;19934:19;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;19934:19:25;;::::1;:35:::0;::::1;;19926:44;;;::::0;::::1;;20031:19;::::0;;;:11:::1;:19;::::0;;;;;20025:37:::1;::::0;-1:-1:-1;;;;;20031:19:25::1;20043:6:::0;20031:19;20025:5:::1;:37::i;:::-;20136:15;20154::::0;;;:7:::1;:15;::::0;;;;;;;:23:::1;::::0;::::1;::::0;20207:27:::1;::::0;;::::1;::::0;20284:28;;;:17:::1;:28:::0;;;;;:37;;;;;;;;;:44:::1;::::0;20326:1:::1;20284:41;:44::i;:::-;20244:28;::::0;;;:17:::1;:28;::::0;;;;;;;:37;;;;;;;;:84;;;;20380:19;;;:11:::1;:19:::0;;;;;:32;;-1:-1:-1;;;;;;20380:32:25::1;::::0;;20422:7:::1;:15:::0;;;;;;:29;;-1:-1:-1;;20422:29:25::1;::::0;;20467:18;;;;;;;::::1;::::0;;;;;;;;::::1;6052:1;;19758:734:::0;;:::o;5534:1184:5:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;-1:-1:-1;;;5766:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5865:16:5;;5857:66;;;;-1:-1:-1;;;5857:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;-1:-1:-1;;;;;5954:20:5;:4;-1:-1:-1;;;;;5954:20:5;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5933:157;;;;-1:-1:-1;;;5933:157:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;-1:-1:-1;;;;;6366:19:5;-1:-1:-1;;;;;6366:19:5;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6344:19:5;;;;;;;;;;:145;;;;6523:17;;;;;;:29;;6545:6;6523:21;:29::i;:::-;6503:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6503:17:5;;;;;;;;;;:49;;;;-1:-1:-1;6250:3:5;;6214:349;;;;6608:2;-1:-1:-1;;;;;6578:47:5;6602:4;-1:-1:-1;;;;;6578:47:5;6592:8;-1:-1:-1;;;;;6578:47:5;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;24188:549:25:-;24334:4;24361:13;24400:6;24438:7;24475;24296:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;24540:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;24613:29:::1;::::0;::::1;::::0;24656:27:::1;::::0;::::1;::::0;24697:23:::1;::::0;::::1;::::0;24575:24:::1;::::0;;::::1;24519:211:::0;;;;24540:21:::1;::::0;24519:211;::::1;;;-1:-1:-1::0;;24519:211:25;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;24540:21:::1;::::0;;::::1;::::0;24575:24;;24613:29;;24656:27;;24697:23;;24575:24;;24519:211;;::::1;24575:24:::0;24519:211;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24188:549:::0;;;;;;;;:::o;18319:88::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;18319:88;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;5818:205::-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;24866:402:25:-;25011:13;25046:7;25078;25111:5;24973:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;25163:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;25185:22:::1;::::0;::::1;::::0;25209:23:::1;::::0;::::1;::::0;25234:26:::1;::::0;::::1;::::0;25163:20:::1;::::0;;::::1;25155:106:::0;;;;::::1;25234:26;25155:106:::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;25155:106:25;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;25163:20;25185:22;;25209:23;;25234:26:::1;::::0;;::::1;::::0;25155:106;;25163:20;;25155:106;;::::1;25163:20:::0;25155:106;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24866:402:::0;;;;;;:::o;26487:369::-;26631:5;26659;26684;26711;26593:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;26760:15:25::1;::::0;;;-1:-1:-1;;26760:7:25::1;:15;::::0;;;;:21:::1;;::::0;::::1;-1:-1:-1::0;;;26760:21:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26783:18:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26803:20:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26825:23:25;;::::1;;::::0;26487:369::o;10951:2441::-;11117:7;11091;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;11164:15:::1;11148:12;::::0;::::1;;::::0;:31;::::1;;;;;;;11140:40;;;::::0;::::1;;11236:22;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;11228:37;;;::::0;::::1;;11335:21;11348:7;11335:12;:21::i;:::-;11327:30;;;::::0;::::1;;11427:17;11447:39;11464:12;;11478:7;11447:16;:39::i;:::-;11427:59;;11517:9;11504;:22;;11496:31;;;::::0;::::1;;11600:14;2135:1;11617:19;11634:1;11617:12;;:16;;:19;;;;:::i;:::-;:42;11707:1;11676:19:::0;;;:11:::1;:19;::::0;;;;;11617:42;;-1:-1:-1;;;;;;11676:19:25::1;:33:::0;11669:41:::1;;;;11770:15;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;:30;11763:38;;;;11888:16;;:::i;:::-;11927:4;11914:17:::0;;11941:20:::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;11953:8;;;;;;11941:20;::::1;11953:8:::0;;;;11941:20;::::1;;;;;;;;;;;;;;;;;;;;;;;;;:4;:9;;:20;;;;11990:12;;11971:4;:16;;:31;;;::::0;::::1;12027:7;12012:4;:12;;:22;;;::::0;::::1;12058:13;:22;12072:7;12058:22;;;;;;;;;;;:29;;;12044:4;:11;;:43;;;::::0;::::1;12112:13;:22;12126:7;12112:22;;;;;;;;;;;:30;;;12097:4;:12;;:45;;;::::0;::::1;12168:13;:22;12182:7;12168:22;;;;;;;;;;;:31;;12152:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;12152:13:25::1;::::0;;::::1;:47:::0;;;;12209:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;:22;;;;-1:-1:-1;;12209:22:25::1;::::0;::::1;;;::::0;;;;::::1;::::0;;;12152:13;;12209:22:::1;::::0;-1:-1:-1;12209:22:25;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12209:22:25::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12303:17;12323:24;12340:6;12323:16;:24::i;:::-;12357:29;::::0;;;:18:::1;:29;::::0;;;;:38;;;12303:44;-1:-1:-1;12430:34:25::1;12436:12;:10;:12::i;12430:34::-;12537:63;12543:12;:10;:12::i;:::-;1766:1;1255:12;12537:63;;;;;;;;;;;::::0;:5:::1;:63::i;:::-;12696:12;:10;:12::i;:::-;12674:19;::::0;;;:11:::1;:19;::::0;;;;:34;;-1:-1:-1;;;;;;12674:34:25::1;-1:-1:-1::0;;;;;12674:34:25;;;::::1;::::0;;;::::1;::::0;;12794:12:::1;::::0;:19:::1;::::0;-1:-1:-1;12794:16:25::1;:19::i;:::-;12779:12;:34:::0;12884:12:::1;::::0;12866:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;;:47:::1;::::0;12911:1:::1;12866:44;:47::i;:::-;12841:12;::::0;12823:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;:90;;;;12975:51:::1;13023:2;12975:43;:9:::0;1923:1:::1;12975:13;:43::i;:::-;:47:::0;::::1;:51::i;:::-;13036:17;13056:21:::0;;;:12:::1;:21;::::0;;;;;;13106:39;;12954:72;;-1:-1:-1;;;;;;13056:21:25::1;::::0;;;12954:72;;13036:17;13106:39;13036:17;13106:39;12954:72;13056:21;13106:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13087:58;;;13163:7;13155:34;;;::::0;;-1:-1:-1;;;13155:34:25;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;13155:34:25;;;;;;;;;;;;;::::1;;13289:24;13303:9;13289:13;:24::i;:::-;13329:32;13340:6;13348:12;:10;:12::i;:::-;13329:32;::::0;;;;;-1:-1:-1;;;;;13329:32:25;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;13379:6:25;;10951:2441;-1:-1:-1;;;;;;;;;;10951:2441:25:o;25921:457::-;26063:5;26095;26128;26159;26025:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;26221:15:25::1;::::0;;;-1:-1:-1;;26221:7:25::1;:15;::::0;;;;:25:::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;26260:26;;::::1;::::0;::::1;::::0;-1:-1:-1;;;26300:24:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;26338:23:25;;::::1;;::::0;25921:457::o;28087:107::-;28175:12;;28087:107;;:::o;3361:530:5:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;-1:-1:-1;;;3566:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3693:30:5;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;;;;;:49;3775:3;;3734:120;;;-1:-1:-1;3871:13:5;3361:530;-1:-1:-1;;;3361:530:5:o;17866:236:25:-;17954:7;17937:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;18012:1:::1;17981:19:::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;17981:19:25::1;17973:42;;;::::0;::::1;;-1:-1:-1::0;;18076:19:25::1;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;18076:19:25::1;::::0;17866:236::o;22660:295::-;22822:7;22796;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;22862:12:::1;;22853:5;:21;;22845:30;;;::::0;::::1;;-1:-1:-1::0;;22915:24:25::1;::::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;;22660:295::o;3746:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3746:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3746:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10538:253::-;10638:7;10620;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;10698:1:::1;10665:21:::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10665:21:25::1;10657:44;;;::::0;::::1;;-1:-1:-1::0;;10763:21:25::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10763:21:25::1;::::0;10538:253::o;3069:29::-;;;;:::o;27024:606::-;27167:5;27198;27230;27265;27300;27329;27129:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;27392:15:25::1;::::0;;;-1:-1:-1;;27392:7:25::1;:15;::::0;-1:-1:-1;;27392:15:25;;;:24:::1;;::::0;::::1;-1:-1:-1::0;;;27392:24:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27430:25:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27469:28:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27511:28:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27553:22:25;::::1;::::0;::::1;::::0;-1:-1:-1;;;27589:24:25;::::1;::::0;;::::1;::::0;27024:606::o;25396:391::-;25546:5;25576;25606;25636;25508:6;2135:1;5914:6;:29;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;-1:-1:-1;;;25685:15:25::1;::::0;;;-1:-1:-1;;25685:7:25::1;:15;::::0;;;;:22:::1;;::::0;::::1;;::::0;::::1;::::0;::::1;::::0;25709;;::::1;::::0;::::1;::::0;25733;;::::1;::::0;::::1;::::0;-1:-1:-1;;;25757:22:25;;::::1;;::::0;25396:391::o;3136:27::-;;;;:::o;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;3965:136;-1:-1:-1;;;3965:136:0:o;2088:48:25:-;2135:1;2088:48;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;9496:217:28:-;9592:10;-1:-1:-1;;;;;9606:14:28;9592:28;;9584:72;;;;;-1:-1:-1;;;9584:72:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;9666:40;9684:9;9695:10;9666:17;:40::i;7777:195:25:-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;7916:11:::1;7889;7901;;7889:24;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;7889:24:25::1;::::0;;;;;::::1;::::0;;;;:38;;-1:-1:-1;;;;;7889:38:25;;;::::1;-1:-1:-1::0;;;;;;7889:38:25;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;7937:10:25::1;:28:::0;;7889:38;7937:28;::::1;::::0;;7889:24:::1;7937:28:::0;;;;::::1;::::0;;::::1;7953:11:::0;;7937:28:::1;:::i;:::-;;7777:195:::0;;;:::o;28380:156::-;6143:25;1639:28;6143:8;:25::i;:::-;28483:24:::1;:46:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;28483:46:25;;;;::::1;::::0;;::::1;28513:15:::0;;28483:46:::1;:::i;1727:49:0:-:0;1772:4;1727:49;:::o;3959:306:5:-;4077:8;-1:-1:-1;;;;;4061:24:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4061:24:5;;;4053:78;;;;-1:-1:-1;;;4053:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;-1:-1:-1;;;;;4142:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;4142:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4142:53:5;;;;;;;;;;;4225:12;:10;:12::i;:::-;-1:-1:-1;;;;;4210:48:5;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;18465:399:25:-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;18548:1:::1;18533:12;;:16;18525:25;;;::::0;::::1;;18613:1;18596:150;2135:1;18616;:25;18596:150;;18666:16;::::0;;;:13:::1;:16;::::0;;;;:22;::::1;;18662:74;;;18708:13;18719:1;18708:10;:13::i;:::-;18643:3;;18596:150;;;-1:-1:-1::0;18802:12:25::1;::::0;:19:::1;::::0;18819:1:::1;18802:16;:19::i;:::-;18787:12;:34:::0;18837:20:::1;::::0;::::1;::::0;;;::::1;18465:399::o:0;2241:31::-;;;;:::o;7156:87::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;7216:12:::1;:20:::0;;7231:5;;7216:12;-1:-1:-1;;7216:20:25::1;::::0;7231:5;7216:20;;::::1;;;;;;;;;;;7156:87:::0;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;2586:31:25:-;;;;:::o;5101:226:0:-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8118:109:25;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;8198:14:::1;:22:::0;8118:109::o;3330:26::-;;;;;;;;;;4332:166:5;-1:-1:-1;;;;;4454:27:5;;;4431:4;4454:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4332:166::o;4565:897::-;-1:-1:-1;;;;;4780:16:5;;4772:66;;;;-1:-1:-1;;;4772:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;-1:-1:-1;;;;;4869:20:5;:4;-1:-1:-1;;;;;4869:20:5;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;4893:36::-;4848:148;;;;-1:-1:-1;;;4848:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5178:19:5;;;;;;;;;;;:77;:23;:77::i;:::-;5156:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5156:19:5;;;;;;;;;;:99;;;;5285:17;;;;;;:29;;5307:6;5285:21;:29::i;:::-;5265:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5265:17:5;;;;;;;;;;;;;:49;;;;5330:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;20743:380:25:-;20901:7;20875;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;20941:12:::1;;20932:5;:21;;20924:30;;;::::0;::::1;;21012:18;21033:24:::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;:40:::1;::::0;21071:1:::1;21033:37;:40::i;:::-;21012:61;;21091:25;21105:10;21091:13;:25::i;:::-;21084:32:::0;20743:380;-1:-1:-1;;;;;20743:380:25:o;28648:407::-;6252:20;-1:-1:-1;;;;;;;;;;;6252:8:25;:20::i;:::-;28749:24:::1;::::0;28785:13:::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;28785:13:25::1;::::0;;::::1;::::0;;;28749:50;;-1:-1:-1;;;28749:50:25;;::::1;::::0;::::1;::::0;;;;;;;;;;;28715:31:::1;::::0;-1:-1:-1;;;;;28749:24:25::1;::::0;:35:::1;::::0;28785:13;28749:50;;;;;;;;;28785:13;28749:50;;28785:13;28715:31;28749:50:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28749:50:25;28917:46:::1;::::0;;-1:-1:-1;;;28917:46:25;;28957:4:::1;28917:46;::::0;::::1;::::0;;;28749:50;;-1:-1:-1;28749:50:25;;28809:33:::1;::::0;-1:-1:-1;;;;;28917:31:25;::::1;::::0;::::1;::::0;:46;;;;;28749:50:::1;::::0;28917:46;;;;;;;;28809:33;28917:31;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28917:46:25;;-1:-1:-1;28973:45:25::1;1639:28;28917:46:::0;28973:9:::1;:45::i;:::-;29028:8;-1:-1:-1::0;;;;;29028:18:25::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6282:1;;;28648:407::o:0;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;2690:175:3:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:11;685:10;598:104;:::o;8015:572:5:-;-1:-1:-1;;;;;8129:21:5;;8121:67;;;;-1:-1:-1;;;8121:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;8241:107::-;8384:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8384:22:5;;;;;;;;;;:34;;8411:6;8384:26;:34::i;:::-;8359:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8359:22:5;;;;;;;;;;;;:59;;;;8433:57;;;;;;;;;;;;;8359:22;;8433:57;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;23047:237:25:-;23129:1;23107:19;:9;23121:4;23107:13;:19::i;:::-;:23;23103:175;;;23147:12;23165:10;23189:19;:9;23203:4;23189:13;:19::i;:::-;23165:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23146:68;;;23236:7;23228:16;;;;;23103:175;23047:237;:::o;9881:538:5:-;-1:-1:-1;;;;;9976:21:5;;9968:69;;;;-1:-1:-1;;;9968:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:16;10067:12;:10;:12::i;:::-;10048:31;;10090:105;10111:8;10121:7;10138:1;10142:21;10160:2;10142:17;:21::i;:::-;10165:25;10183:6;10165:17;:25::i;:::-;10090:105;;;;;;;;;;;;:20;:105::i;:::-;10231:108;10271:6;10231:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10231:22:5;;;;;;;;;;;:108;:26;:108::i;:::-;10206:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10206:22:5;;;;;;;;;;;;:133;;;;10355:57;;;;;;;;;;;;;10206:13;;:22;;10355:57;;;;;;;;;;;;;9881:538;;;;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:3;;;3136:155::o;21689:704:25:-;21920:66;21947:8;21957:4;21963:2;21967:3;21972:7;21981:4;21920:26;:66::i;:::-;22002:9;21997:390;22021:3;:10;22017:1;:14;21997:390;;;1766:1;22141:3;22145:1;22141:6;;;;;;;;;;;;;;:28;:62;;;;;2135:1;22173:3;22177:1;22173:6;;;;;;;;;;;;;;:30;;22141:62;22137:135;;;22254:2;22223:12;:20;22236:3;22240:1;22236:6;;;;;;;;;;;;;;22223:20;;;;;;;;;;;;:34;;;;;-1:-1:-1;;;;;22223:34:25;;;;;-1:-1:-1;;;;;22223:34:25;;;;;;22137:135;2135:1;22289:3;22293:1;22289:6;;;;;;;;;;;;;;:29;22285:92;;;22360:2;22338:11;:19;22350:3;22354:1;22350:6;;;;;;;;;;;;;;22338:19;;;;;;;;;;;;:24;;;;;-1:-1:-1;;;;;22338:24:25;;;;;-1:-1:-1;;;;;22338:24:25;;;;;;22285:92;22033:3;;21997:390;;5432:163:3;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:3;;;5432:163::o;13240:778:5:-;13484:15;:2;-1:-1:-1;;;;;13484:13:5;;:15::i;:::-;13480:532;;;13536:2;-1:-1:-1;;;;;13519:43:5;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13519:79:5;;;13515:487;;;;:::i;:::-;;;;;;;;13871:14;;-1:-1:-1;;;13871:14:5;;;;;;;;;;;;;;;;;13878:6;;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;-1:-1:-1;;;13925:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;-1:-1:-1;;;;;;13647:64:5;;-1:-1:-1;;;13647:64:5;13643:161;;13735:50;;-1:-1:-1;;;13735:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7337:120:25;7401:25;7409:4;7415:10;7401:7;:25::i;:::-;7393:34;;;;;7025:184:0;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;13758:666:25:-;13892:12;;13820:4;13874:31;;;:17;:31;;;;;;;;:40;;;;;;;;;13917:1;-1:-1:-1;13870:86:25;;;-1:-1:-1;13941:4:25;13934:11;;13870:86;14079:12;;14031:27;14061:31;;;:17;:31;;;;;;;;:40;;;;;;;;;14128:1;14111:219;14136:12;;14131:1;:17;14111:219;;14191:12;;14173:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;:56;-1:-1:-1;14169:151:25;;;14289:12;;14271:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;;-1:-1:-1;14169:151:25;14150:3;;14111:219;;;-1:-1:-1;14391:26:25;:19;14415:1;14391:23;:26::i;:::-;14365:12;;14347:31;;;;:17;:31;;;;;;;;:40;;;;;;;;;:70;;;-1:-1:-1;;13758:666:25;;;:::o;6453:272::-;6523:17;6593:4;;6560;-1:-1:-1;;;;;6560:14:25;;6583:4;6560:29;;;;;;;;;;;;;-1:-1:-1;;;;;6560:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6560:29:25;:37;;6552:46;;;;;;6667:51;6685:8;;6695:4;;6701:16;6667:17;:51::i;3538:215:3:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:3;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;7677:156:12:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6874:173:25:-;6968:28;;;;:17;:28;;;;;:41;;;7019:21;6986:9;7019:10;:21::i;19010:580::-;19077:7;1766:1;5739:7;:29;:64;;;;;2135:1;5772:7;:31;;5739:64;5731:73;;;;;;19104:22:::1;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;19096:37;;;::::0;::::1;;19371:21;::::0;;;:12:::1;:21;::::0;;;;;19365:40:::1;::::0;-1:-1:-1;;;;;19371:21:25::1;19384:7:::0;19371:21;19365:5:::1;:40::i;:::-;19474:12;::::0;:19:::1;::::0;19491:1:::1;19474:16;:19::i;:::-;19459:12;:34:::0;-1:-1:-1;19535:1:25::1;19503:21:::0;;;:12:::1;:21;::::0;;;;;;;:34;;-1:-1:-1;;;;;;19503:34:25::1;::::0;;19547:13:::1;:22:::0;;;;;:36;;-1:-1:-1;;19547:36:25::1;::::0;;19010:580::o;7230:115:12:-;7293:7;7319:19;7327:3;7319:7;:19::i;14024:193:5:-;14143:16;;;14157:1;14143:16;;;;;;;;;14090;;;;14143;;;;;;;;;;;;-1:-1:-1;14143:16:5;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;;;;;:18;14205:5;14024:193;-1:-1:-1;;14024:193:5:o;12493:741::-;12712:15;:2;-1:-1:-1;;;;;12712:13:5;;:15::i;:::-;12708:520;;;12764:2;-1:-1:-1;;;;;12747:38:5;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12747:72:5;;;12743:475;;;;:::i;:::-;-1:-1:-1;;;;;;12868:59:5;;-1:-1:-1;;;12868:59:5;12864:156;;12951:50;;-1:-1:-1;;;12951:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21360:261:25;21425:7;;21482:1;21501:37;21534:3;21501:28;21527:1;21501:21;:9;21515:6;21501:13;:21::i;:::-;:25;;:28::i;:37::-;21493:45;-1:-1:-1;21556:35:25;21566:24;21587:2;21566:16;:4;21575:6;21566:8;:16::i;:24::-;21556:5;;:9;:35::i;:::-;21548:43;21360:261;-1:-1:-1;;;;21360:261:25:o;1640:404:12:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;726:413:10:-;1086:20;1124:8;;;726:413::o;6747:156:12:-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:12;;6843:7;:53::i;7527:1090:28:-;7649:17;7678:4;-1:-1:-1;;;;;7678:20:28;;7699:14;7715:4;7732:8;7742:5;7721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:71;;;;;;;;;;;;;-1:-1:-1;;;;;7678:71:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7996:15:28;8063:16;;;:6;7678:71;8063:16;;;;;8014:66;;8031:8;;8041:5;;8056:4;;8014:16;:66::i;:::-;8538:16;;;;:6;:16;;;;;;7996:84;;-1:-1:-1;8538:23:28;;8559:1;8538:20;:23::i;:::-;8519:16;;;;:6;:16;;;;;:42;8578:32;8526:8;8602:7;8578:13;:32::i;4452:201:12:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:12;;;;-1:-1:-1;;;4538:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;14536:2749:25:-;14596:29;;;;:18;:29;;;;;;2135:1;5914:29;;5906:38;;;;;;5993:15;;;;:7;:15;;;;;:21;;;5985:30;;;;;;14637:14:::1;14654:29:::0;;;:18:::1;:29;::::0;;;;;;;;14716:17:::1;:28:::0;;;;;;14788:15;;;:7:::1;:15:::0;;;;;;:21:::1;;:25:::0;;-1:-1:-1;;14788:25:25::1;-1:-1:-1::0;;;14788:25:25::1;::::0;;14654:29;14887:26:::1;14897:1;14716:28:::0;14887:9:::1;:26::i;:::-;14840:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;14839:74:::0;;-1:-1:-1;;14839:74:25::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;14982:29:25::1;14992:1;14839:74:::0;14982:9:::1;:29::i;:::-;14939:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;14938:73:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;14938:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15079:29:25::1;15089:1;14938:73:::0;15079:9:::1;:29::i;:::-;15036:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15035:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15035:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15176:29:25::1;15186:1;15035:73:::0;15176:9:::1;:29::i;:::-;15133:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15132:73:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15132:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15273:29:25::1;15283:1;15132:73:::0;15273:9:::1;:29::i;:::-;15230:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;15229:73:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15229:73:25::1;-1:-1:-1::0;;15229:73:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15374:29:25::1;15384:1;15229:73:::0;15374:9:::1;:29::i;:::-;15328:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;15327:76:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15327:76:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15475:30:25::1;15485:2;15327:76:::0;15475:9:::1;:30::i;:::-;15428:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;15427:78:::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15427:78:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15576:30:25::1;15586:2;15427:78:::0;15576:9:::1;:30::i;:::-;15531:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;15530:76:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15530:76:25::1;-1:-1:-1::0;;15530:76:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15676:29:25::1;15531:24;15530:76:::0;15676:9:::1;:29::i;:::-;15632:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;15631:74:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15631:74:25::1;-1:-1:-1::0;;15631:74:25;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;15770:30:25::1;15780:2;15631:74:::0;15770:9:::1;:30::i;:::-;15731:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;15730:70:::0;;-1:-1:-1;;;;15730:70:25::1;-1:-1:-1::0;;;15730:70:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;15851:25:25::1;::::0;:18;;::::1;;15874:1;15851:22;:25::i;:::-;15824:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;:53:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;15824:53:25::1;-1:-1:-1::0;;;;15824:53:25;;::::1;::::0;;;::::1;::::0;;15929:30:::1;15939:2;15943:15:::0;15929:9:::1;:30::i;:::-;15888:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;15887:72:::0;;-1:-1:-1;;;;15887:72:25::1;-1:-1:-1::0;;;15887:72:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16012:27:25::1;::::0;:20;;::::1;;16037:1;16012:24;:27::i;:::-;15983:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;:57:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;15983:57:25::1;-1:-1:-1::0;;;;15983:57:25;;::::1;::::0;;;::::1;::::0;;16095:30:::1;16105:2;16109:15:::0;16095:9:::1;:30::i;:::-;16051:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;16050:75:::0;;-1:-1:-1;;;;16050:75:25::1;-1:-1:-1::0;;;16050:75:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16181:30:25::1;::::0;:23;;::::1;;16209:1;16181:27;:30::i;:::-;16149:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;:63:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16149:63:25::1;-1:-1:-1::0;;;;16149:63:25;;::::1;::::0;;;::::1;::::0;;16269:30:::1;16279:2;16283:15:::0;16269:9:::1;:30::i;:::-;16224:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;16223:76:::0;;-1:-1:-1;;;;16223:76:25::1;-1:-1:-1::0;;;16223:76:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16355:31:25::1;::::0;:24;;::::1;;16384:1;16355:28;:31::i;:::-;16322:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16322:65:25::1;-1:-1:-1::0;;;;16322:65:25;;::::1;::::0;;;::::1;::::0;;16444:30:::1;16454:2;16458:15:::0;16444:9:::1;:30::i;:::-;16398:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;16397:77:::0;;-1:-1:-1;;;;16397:77:25::1;-1:-1:-1::0;;;16397:77:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16531:32:25::1;::::0;:25;;::::1;;16561:1;16531:29;:32::i;:::-;16497:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;:67:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16497:67:25::1;-1:-1:-1::0;;;;16497:67:25;;::::1;::::0;;;::::1;::::0;;16624:30:::1;16634:2;16638:15:::0;16624:9:::1;:30::i;:::-;16575:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16574:80:::0;;-1:-1:-1;;;;16574:80:25::1;-1:-1:-1::0;;;16574:80:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16714:35:25::1;::::0;:28;;::::1;;16747:1;16714:32;:35::i;:::-;16677:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16677:73:25::1;-1:-1:-1::0;;;;16677:73:25;;::::1;::::0;;;::::1;::::0;;16810:30:::1;16820:2;16824:15:::0;16810:9:::1;:30::i;:::-;16761:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16760:80:::0;;-1:-1:-1;;;;16760:80:25::1;-1:-1:-1::0;;;16760:80:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;16900:35:25::1;::::0;:28;;::::1;;16933:1;16900:32;:35::i;:::-;16863:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:73:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;16863:73:25::1;-1:-1:-1::0;;;;16863:73:25;;::::1;::::0;;;::::1;::::0;;16990:30:::1;16863:28;17004:15:::0;16990:9:::1;:30::i;:::-;16947:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;16946:74:::0;;-1:-1:-1;;;;16946:74:25::1;-1:-1:-1::0;;;16946:74:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;17074:29:25::1;::::0;:22;;::::1;;17101:1;17074:26;:29::i;:::-;17043:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;:61:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;17043:61:25::1;-1:-1:-1::0;;;;17043:61:25;;::::1;::::0;;;::::1;::::0;;17160:30:::1;17170:2;17174:15:::0;17160:9:::1;:30::i;:::-;17115:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;17114:76:::0;;-1:-1:-1;;;;17114:76:25::1;-1:-1:-1::0;;;17114:76:25::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;17246:31:25::1;::::0;:24;;::::1;;17275:1;17246:28;:31::i;:::-;17213:15;::::0;;;:7:::1;:15;::::0;;;;;:24:::1;;:65:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;17213:65:25::1;-1:-1:-1::0;;;;17213:65:25;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;14536:2749:25:o;4013:107:12:-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:12;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;826:264:29;1030:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:51:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:62;;;;;;826:264::o;1490:172::-;1613:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:52;;;;;;1490:172::o;17549:186:25:-;17630:5;;17670:34;17702:1;17670:27;:12;:27;;;:16;:27::i;:::-;:31;;:34::i;:::-;17707:20;:12;17724:2;17707:16;:20::i;:::-;17656:72;;;;17549:186;;;;;:::o;4820:148:3:-;4878:7;4909:1;4905;:5;4897:42;;;;;-1:-1:-1;;;4897:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;;4820:148;-1:-1:-1;;;4820:148:3:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:106;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Oozyx",
    "events": {
      "ElderSpiritMinted(uint256,address)": {
        "params": {
          "elderId": "The elder id belonging to the minted elder",
          "owner": "The address of the owner"
        }
      },
      "HeroBurned(uint256)": {
        "params": {
          "heroId": "The hero id of the hero that was burned"
        }
      },
      "HeroMinted(uint256,address)": {
        "params": {
          "heroId": "The hero id belonging to the hero that was minted",
          "owner": "The address of the owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "burnElders()": {
        "notice": "Burns all the elder spirits in game"
      },
      "burnHero(uint256)": {
        "details": "This will only be able to be called from the owner of the hero",
        "notice": "Burns the hero for a refund",
        "params": {
          "heroId": "The hero id to burn"
        }
      },
      "createAffinity(string,address)": {
        "details": "This will be called by a priviledged address. It will allow to create new affinities. May need to add a remove affinity function as well.",
        "notice": "Creates a new token affinity",
        "params": {
          "feedAddress": "The price feed address",
          "tokenTicker": "The token ticker of the affinity"
        }
      },
      "declareRoundWinner(string)": {
        "details": "This can only be called by a game admin contract",
        "notice": "Declares a winning affinity for a round",
        "params": {
          "winningAffinity": "The affinity that won the game"
        }
      },
      "disburseRewards(string)": {
        "details": "This will be called from a priviledged address",
        "notice": "Disburses the rewards evenly among the heroes of the winning affinity",
        "params": {
          "winningAffinity": "The winning affinity token ticker"
        }
      },
      "getAffinityFeedAddress(string)": {
        "notice": "Fetches the feed address for a given affinity",
        "params": {
          "affinity": "The affinity being searched for"
        },
        "returns": {
          "_0": "The address of the affinity's feed address"
        }
      },
      "getElderOwner(uint256)": {
        "notice": "Gets the elder owner for the given elder id",
        "params": {
          "elderId": "The elder id"
        },
        "returns": {
          "_0": "The owner of the elder"
        }
      },
      "getElderSpawnsAmount(uint256,uint256)": {
        "notice": "Gets the amount of heroes spawn from the elder with the specified id during the specified round",
        "params": {
          "elderId": "The elder id",
          "round": "The round the elder was created"
        },
        "returns": {
          "_0": "The amount of heroes spawned from the elder"
        }
      },
      "getElderSpirit(uint256)": {
        "notice": "Fetches the data of a single elder spirit",
        "params": {
          "elderId": "The id of the elder being searched for"
        },
        "returns": {
          "_0": "The elder's attributes in the following order (valid, raceId, classId, affinity)"
        }
      },
      "getHeroGameData(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "valid, affinity, affinity price, round minted, elder id"
        }
      },
      "getHeroLore(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "alignment, background, hometown, weather"
        }
      },
      "getHeroMintPrice(uint256,uint256)": {
        "notice": "Gets the minting price of a hero based on specified elder spirit",
        "params": {
          "elderId": "The elder id for which the hero will be based on",
          "round": "The round of the hero to be minted"
        },
        "returns": {
          "_0": "The hero mint price"
        }
      },
      "getHeroOwner(uint256)": {
        "notice": "Get the hero owner for the given hero id",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "The owner address"
        }
      },
      "getHeroStats(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
        }
      },
      "getHeroTraitsSkills(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "trait 1, trait 2, skill 1, skill 2"
        }
      },
      "getHeroVisuals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "name, race id, class id, appearance"
        }
      },
      "getHeroVitals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "level, hp, mana"
        }
      },
      "getNumEldersInGame()": {
        "notice": "Fetches the number of elders currently in the game",
        "returns": {
          "_0": "The current number of elders in the game"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "mintElderSpirit(uint256,uint256,string)": {
        "details": "For now only race, class, and token (affinity) are needed. This will change. The race and class ids will probably be public constants defined in the crypto champions contract, this is subject to change.",
        "notice": "Mints an elder spirit",
        "params": {
          "affinity": "The affinity of the minted hero",
          "classId": "The class id",
          "raceId": "The race id"
        },
        "returns": {
          "_0": "The elder spirit id"
        }
      },
      "mintHero(uint256,string)": {
        "notice": "Mints a hero based on an elder spirit",
        "params": {
          "elderId": "The id of the elder spirit this hero is based on"
        },
        "returns": {
          "_0": "The hero id"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setElderMintPrice(uint256)": {
        "details": "Can only be called by an admin address",
        "notice": "Sets the elder mint price",
        "params": {
          "price": "The new elder mint price"
        }
      },
      "setPhase(uint8)": {
        "notice": "Sets the contract's phase",
        "params": {
          "phase": "The phase the contract should be set to"
        }
      },
      "startNewPriceGame()": {
        "details": "This can only be called by the admin of the contract",
        "notice": "Starts a new price game"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferInGameTokens(address,uint256)": {
        "notice": "Transfers in game currenct tokens from one address to another"
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "notice": "This is the crypto champions class",
    "title": "Crypto Champions Interface",
    "version": 1
  },
  "offset": [
    743,
    29328
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72EDA5BB GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x11BF JUMPI DUP1 PUSH4 0xF32C4974 EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0xFBC120F9 EQ PUSH2 0x12C5 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x10F7 JUMPI DUP1 PUSH4 0xE3E98382 EQ PUSH2 0x1130 JUMPI DUP1 PUSH4 0xE5B0A993 EQ PUSH2 0x115A JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1026 JUMPI DUP1 PUSH4 0xA4AEEC53 EQ PUSH2 0x1061 JUMPI DUP1 PUSH4 0xBF61211F EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0xC03AFB59 EQ PUSH2 0x108B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x10B8 JUMPI DUP1 PUSH4 0xCAAB7EF8 EQ PUSH2 0x10E2 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x90DED47E GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x90DED47E EQ PUSH2 0xE94 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xEA9 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0xEE2 JUMPI DUP1 PUSH4 0x9D5B82C0 EQ PUSH2 0xF12 JUMPI DUP1 PUSH4 0x9E315008 EQ PUSH2 0xF96 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1011 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x72EDA5BB EQ PUSH2 0xD7F JUMPI DUP1 PUSH4 0x79935FE0 EQ PUSH2 0xDA9 JUMPI DUP1 PUSH4 0x835A4398 EQ PUSH2 0xDBE JUMPI DUP1 PUSH4 0x8423B077 EQ PUSH2 0xE25 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0xE4F JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE64 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x2EFB8874 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x4C2ED018 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4C2ED018 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x4C52B2A9 EQ PUSH2 0xB66 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xB7B JUMPI DUP1 PUSH4 0x56B4D760 EQ PUSH2 0xCFB JUMPI DUP1 PUSH4 0x59CA19D3 EQ PUSH2 0xD25 JUMPI DUP1 PUSH4 0x6DE51353 EQ PUSH2 0xD55 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x2EFB8874 EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x97C JUMPI DUP1 PUSH4 0x46E6F13D EQ PUSH2 0x9B5 JUMPI DUP1 PUSH4 0x48772D79 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0x498E8219 EQ PUSH2 0xAC7 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x26D4D15A EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x26F7AF4F EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x27E50B18 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x2EE1F0A0 EQ PUSH2 0x848 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xFBEA841 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x21C2F72A EQ PUSH2 0x494 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x134C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x136F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x40C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1410 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x181D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x186C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x19CD SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x872 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1DD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA5E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA99 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND DUP4 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xB31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2025 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA99 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2774 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x27EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCAB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x27F2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCCF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x28DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2947 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2992 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2A93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP7 AND DUP6 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA99 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2B94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2B9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2BB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2BD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2CFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2D65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2D6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH2 0x2E59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2EEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x2EF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2F2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2F43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2FA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x117D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2FBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2FCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2FF9 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x31C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64E PUSH2 0x3229 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x508B PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1424 JUMPI INVALID JUMPDEST EQ PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD LT PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD CALLVALUE LT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP3 EQ ISZERO SWAP2 POP PUSH2 0x1496 SWAP1 POP JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x14A7 SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14C9 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14E2 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x20 ADD DUP5 KECCAK256 SLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP6 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xFEAF968C SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 POP PUSH1 0xA0 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x155B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x1580 PUSH2 0x4D23 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1F DUP9 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP7 DUP2 MSTORE SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x15F3 PUSH2 0x15DB PUSH2 0x34BA JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34BE JUMP JUMPDEST PUSH2 0x15FB PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 SWAP3 PUSH2 0x166E SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4D54 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH2 0x168A SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xE SLOAD PUSH2 0x1699 SWAP1 PUSH2 0x35C6 JUMP JUMPDEST PUSH32 0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1 DUP4 PUSH2 0x16C3 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x170A JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x1713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171B PUSH2 0x4D23 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH2 0x100 SWAP5 DUP3 AND ISZERO SWAP5 SWAP1 SWAP5 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP4 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP6 DUP3 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x17DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP13 SWAP2 SWAP12 POP SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x187C CALLER DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x2FF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 GT PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18CD PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1917 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x3637 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP3 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH2 0x1951 SWAP1 PUSH1 0x1 PUSH2 0x376A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP7 DUP3 MSTORE PUSH1 0xB DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xC DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x526A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5133 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A5A PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1A85 JUMPI POP PUSH2 0x1A85 DUP6 PUSH2 0x1A80 PUSH2 0x34BA JUMP JUMPDEST PUSH2 0x2FCB JUMP JUMPDEST PUSH2 0x1AC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5158 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1ACA PUSH2 0x34BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1ADA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x37C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AF4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B0C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1B79 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x51CD PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1BB0 SWAP1 DUP3 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1ADD JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C4E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C8D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1CC8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3970 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT PUSH2 0x1CE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP7 SWAP1 SWAP7 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP8 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1DB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1DE9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1E10 SWAP1 PUSH2 0x1E0B PUSH2 0x34BA JUMP JUMPDEST PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x505C PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE9 DUP3 DUP3 PUSH2 0x3BF9 JUMP JUMPDEST PUSH2 0x1E5D PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1EAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B3 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE9 DUP3 DUP3 PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x1 SWAP4 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH1 0x2 PUSH2 0x100 SWAP8 DUP4 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP7 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP6 MSTORE SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0xFF SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F9C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F71 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F9C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F7F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x48 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2039 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2055 JUMPI INVALID JUMPDEST EQ PUSH2 0x205F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x207A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2083 DUP6 PUSH2 0x3CCB JUMP JUMPDEST PUSH2 0x208C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x209A PUSH1 0xF SLOAD DUP8 PUSH2 0x31C4 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x20A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x20C3 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x3460 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x20E6 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20FF JUMPI INVALID JUMPDEST PUSH2 0x2107 PUSH2 0x4DD2 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH1 0xF SLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2256 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x222B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2256 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2239 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x40 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP2 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 PUSH2 0x229A SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4D54 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x22B6 SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4D54 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x200 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x220 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x240 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x260 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x280 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2C0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x300 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x320 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x11 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x340 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x12 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH2 0x257D DUP4 PUSH2 0x3DA0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 POP PUSH2 0x259B PUSH2 0x15DB PUSH2 0x34BA JUMP JUMPDEST PUSH2 0x25C7 PUSH2 0x25A6 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x0 PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34BE JUMP JUMPDEST PUSH2 0x25CF PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0x2609 SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2634 SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x266A PUSH1 0xA PUSH2 0x2664 DUP8 PUSH1 0x8 PUSH2 0x3E58 JUMP JUMPDEST SWAP1 PUSH2 0x3EB1 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2711 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185E5B595B9D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x271A DUP8 PUSH2 0x35C6 JUMP JUMPDEST PUSH32 0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E DUP7 PUSH2 0x2744 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP4 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x27A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5241 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x284E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2878 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x28D6 JUMPI PUSH2 0x28B7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2896 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x28AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12DA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28C3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x287E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT PUSH2 0x28EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x292A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x295B JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x2973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x299F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP4 POP SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2A30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2A4C JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x7 DUP2 GT PUSH2 0x2AB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP5 DUP6 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0x68 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x88 SHL DUP4 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV DUP3 AND SWAP3 PUSH4 0x1000000 DUP2 DIV DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2BB2 SWAP1 DUP4 PUSH2 0x3F18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2BB2 SWAP1 DUP4 PUSH2 0x344B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2C53 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1DE9 DUP3 DUP3 PUSH2 0x3F24 JUMP JUMPDEST PUSH2 0x2C74 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST DUP1 PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2CF9 SWAP1 PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP5 DUP5 PUSH2 0x4EAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2D28 PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 PUSH2 0x3BE6 JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x187C SWAP1 PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD DUP4 DUP4 PUSH2 0x4EAF JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D7C PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2DC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5218 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x2DCF PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2E13 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2E70 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT PUSH2 0x2E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x7 DUP2 GT PUSH2 0x2EB2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2EAA JUMPI PUSH2 0x2EAA DUP2 PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2E82 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2EC1 SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD PUSH32 0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F0C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x2F24 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1346 SWAP1 PUSH2 0x3FDA JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2F67 SWAP1 PUSH2 0x1E0B PUSH2 0x34BA JUMP JUMPDEST PUSH2 0x1EAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5103 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x299F JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x303E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5133 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3046 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x306C JUMPI POP PUSH2 0x306C DUP6 PUSH2 0x1A80 PUSH2 0x34BA JUMP JUMPDEST PUSH2 0x30A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50DA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30B1 PUSH2 0x34BA JUMP JUMPDEST SWAP1 POP PUSH2 0x30D1 DUP2 DUP8 DUP8 PUSH2 0x30C2 DUP9 PUSH2 0x3FE5 JUMP JUMPDEST PUSH2 0x30CB DUP9 PUSH2 0x3FE5 JUMP JUMPDEST DUP8 PUSH2 0x37C7 JUMP JUMPDEST PUSH2 0x3118 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x51CD PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x314F SWAP1 DUP5 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1CC8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4029 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x31D8 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x31E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x31F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x3215 SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST SWAP1 POP PUSH2 0x3220 DUP2 PUSH2 0x419A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3240 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x518A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3BE6 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x50524943455F57415253 PUSH1 0xB0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 MLOAD PUSH4 0x6CADCD79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x24 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH4 0xD95B9AF2 SWAP5 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32BE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x32A6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x32EB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x330A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x331E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72D7F665 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xE5AFECCA SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x339A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x33DE PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 DUP3 PUSH2 0x1DED JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD65AB5F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x342D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x41EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4236 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2BB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5292 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x350D PUSH2 0x34BA JUMP JUMPDEST SWAP1 POP PUSH2 0x351F DUP2 PUSH1 0x0 DUP8 PUSH2 0x30C2 DUP9 PUSH2 0x3FE5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x354C SWAP1 DUP5 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x35BF DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4029 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D2 CALLVALUE DUP4 PUSH2 0x376A JUMP JUMPDEST GT ISZERO PUSH2 0x3634 JUMPI PUSH1 0x0 CALLER PUSH2 0x35E5 CALLVALUE DUP5 PUSH2 0x376A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3621 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3626 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x367C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51AA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3686 PUSH2 0x34BA JUMP JUMPDEST SWAP1 POP PUSH2 0x36B6 DUP2 DUP6 PUSH1 0x0 PUSH2 0x3698 DUP8 PUSH2 0x3FE5 JUMP JUMPDEST PUSH2 0x36A1 DUP8 PUSH2 0x3FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x37C7 JUMP JUMPDEST PUSH2 0x36FD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x50B6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x37C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x37D5 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x342D JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37EF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT DUP1 ISZERO PUSH2 0x3818 JUMPI POP PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x380D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x3869 JUMPI DUP5 PUSH1 0x8 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x382E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3877 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x38D1 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3896 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x3968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x392D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3915 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x395A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x3982 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x424E JUMP JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A10 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A4F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A37 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A8B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A73 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3AB8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B02 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3B97 JUMPI PUSH2 0x3B0E PUSH2 0x4F38 JUMP JUMPDEST DUP1 PUSH2 0x3B19 JUMPI POP PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x392D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4FDE PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x342D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5034 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF0 DUP2 CALLER PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x3634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3C11 SWAP1 DUP3 PUSH2 0x3436 JUMP JUMPDEST ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x3C1E PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3C7A SWAP1 DUP3 PUSH2 0x4254 JUMP JUMPDEST ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x3C87 PUSH2 0x34BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x4 GT ISZERO PUSH2 0x3CF8 JUMPI POP PUSH1 0x1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0x3D6D JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3D65 JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3D18 JUMP JUMPDEST POP PUSH2 0x3D79 DUP2 PUSH1 0x2 PUSH2 0x3E58 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x3E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1346 PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD DUP5 PUSH2 0x4269 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3E67 JUMPI POP PUSH1 0x0 PUSH2 0x1346 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3E74 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2BB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51F7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3F07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3F10 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 DUP4 DUP4 PUSH2 0x4413 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1DE9 DUP3 PUSH2 0x4477 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x3F50 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x3F59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F98 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x3637 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3FA6 SWAP1 PUSH1 0x1 PUSH2 0x376A JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH2 0x4B4E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4018 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x403B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x424E JUMP JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40CA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x40B2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x40F7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x411A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x413F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x413A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x414B JUMPI PUSH2 0x3B0E PUSH2 0x4F38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x342D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5034 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x41C1 PUSH1 0x64 PUSH2 0x2664 PUSH1 0x2 PUSH2 0x41BB DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E58 JUMP JUMPDEST SWAP1 PUSH2 0x3E58 JUMP JUMPDEST SWAP2 POP PUSH2 0x41E4 PUSH2 0x41DD PUSH1 0xA PUSH2 0x2664 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E58 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3460 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F8 DUP4 DUP4 PUSH2 0x4236 JUMP JUMPDEST PUSH2 0x422E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1346 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4B52 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP6 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4345 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x432D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4372 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x43DD SWAP1 DUP7 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH2 0x4C18 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x43FA SWAP1 PUSH1 0x1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x3220 DUP6 DUP3 PUSH2 0x4C5F JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x4455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5012 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4464 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 DUP2 GT PUSH2 0x4493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x44AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x15 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP2 DUP6 MSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH10 0xFF000000000000000000 NOT AND PUSH1 0x1 PUSH1 0x48 SHL OR SWAP1 SSTORE SWAP2 PUSH2 0x44F9 PUSH1 0x2 DUP4 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x452A PUSH1 0x4 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4561 PUSH1 0x4 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x459A PUSH1 0x4 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x45D5 PUSH1 0x4 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0xFF00000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4611 PUSH1 0x9 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH6 0x10000000000 MUL PUSH6 0xFF0000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4650 PUSH1 0x1E DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH7 0x1000000000000 MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4691 PUSH1 0x18 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH8 0xFF00000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x46D0 PUSH1 0x7 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH9 0xFF0000000000000000 NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x4710 PUSH1 0x15 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4750 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x50 SHL MUL PUSH1 0xFF PUSH1 0x50 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4789 PUSH1 0x15 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x58 SHL NOT AND PUSH1 0x1 PUSH1 0x58 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x47C9 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH1 0xFF PUSH1 0x58 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4802 PUSH1 0x1F DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x60 SHL NOT AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4842 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x9 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH1 0xFF PUSH1 0x60 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x487B PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x68 SHL NOT AND PUSH1 0x1 PUSH1 0x68 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x48BB SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x68 SHL MUL PUSH1 0xFF PUSH1 0x68 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x48F4 PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4934 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0xFF PUSH1 0x70 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x496D PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x78 SHL NOT AND PUSH1 0x1 PUSH1 0x78 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x49AD SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x78 SHL MUL PUSH1 0xFF PUSH1 0x78 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x49E6 PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4A26 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH1 0xFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4A5F PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x88 SHL NOT AND PUSH1 0x1 PUSH1 0x88 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4A9F SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x88 SHL MUL PUSH1 0xFF PUSH1 0x88 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4AD8 PUSH1 0x10 DUP3 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL PUSH1 0xFF SWAP5 DUP6 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP2 SWAP4 POP PUSH2 0x4B18 SWAP3 SWAP2 SWAP1 DIV AND PUSH1 0x2 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x90 SHL MUL PUSH1 0xFF PUSH1 0x90 SHL NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4C0E JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4B85 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4BA2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x4BD2 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CA6 PUSH1 0x1 PUSH2 0x4CA0 DUP6 PUSH1 0xFF DUP9 AND PUSH2 0x4CBC JUMP JUMPDEST SWAP1 PUSH2 0x3460 JUMP JUMPDEST PUSH2 0x4CB1 DUP5 PUSH1 0xA PUSH2 0x3EB1 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4D12 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x4D1B JUMPI INVALID JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4D95 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4DC2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4DC2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4DC2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4DA7 JUMP JUMPDEST POP PUSH2 0x4DCE SWAP3 SWAP2 POP PUSH2 0x4F1D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x360 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x200 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x220 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x240 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x260 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x280 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2A0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2C0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2E0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x300 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x320 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x340 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4EF0 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x4DC2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4DC2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4DC2 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4F02 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4DCE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4F1E JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x4F48 JUMPI PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x4F5C DUP3 MLOAD PUSH2 0x4F32 JUMP JUMPDEST EQ PUSH2 0x4F66 JUMPI PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x4F96 JUMPI POP POP POP POP PUSH2 0x27EF JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FB0 JUMPI POP POP POP POP PUSH2 0x27EF JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x4FC8 JUMPI POP POP POP PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x6365455243313135353A2063616C6C PUSH6 0x72206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x766564416363657373436F6E74726F6C GASPRICE KECCAK256 PUSH20 0x656E646572206D75737420626520616E2061646D PUSH10 0x6E20746F207265766F6B PUSH6 0x455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x2172861495 0xE7 0xB8 0x5E 0xDA 0xC7 RETURNDATACOPY EXTCODECOPY 0xD5 0xFB 0xB4 0x2D 0xD6 PUSH22 0xBAADF627720E687BCFDACA025096455243313135353A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135353A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F72207472616E73666572 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77455243313135353A20 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212203AAA 0xA6 BYTE 0xE4 LOG3 PUSH3 0xAE3AFF SWAP12 DUP8 0x2E 0xA6 SWAP16 XOR PUSH18 0x188C4F8709968D72836480912E325864736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "LT",
      "path": "25"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "SHR",
      "path": "25"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x72EDA5BB"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x175"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA22CB465"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDC"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD547741F"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE985E9C5"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1184"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF242432A"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x11BF"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF32C4974"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1295"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFBC120F9"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12C5"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD547741F"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10F7"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE3E98382"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1130"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE5B0A993"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x115A"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "148": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "149": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "150": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA22CB465"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1026"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA4AEEC53"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1061"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xBF61211F"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1076"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC03AFB59"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x108B"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xCA15C873"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10B8"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xCAAB7EF8"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10E2"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "219": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "220": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "221": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x90DED47E"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12E"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x90DED47E"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE94"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x91D14854"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEA9"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x94985DDD"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEE2"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9D5B82C0"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF12"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9E315008"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF96"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xA217FDDF"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1011"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "301": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "302": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "303": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x72EDA5BB"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD7F"
    },
    "313": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "314": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x79935FE0"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDA9"
    },
    "324": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "325": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x835A4398"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "332": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBE"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8423B077"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE25"
    },
    "346": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "347": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "348": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8A19C8BC"
    },
    "353": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "354": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE4F"
    },
    "357": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "358": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "359": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9010D07C"
    },
    "364": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "365": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE64"
    },
    "368": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "369": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "372": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "373": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "374": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "375": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EFB8874"
    },
    "380": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "381": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x219"
    },
    "384": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "385": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "386": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C2ED018"
    },
    "391": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "392": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D2"
    },
    "395": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "396": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "397": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C2ED018"
    },
    "402": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "403": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB3C"
    },
    "406": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "407": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "408": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4C52B2A9"
    },
    "413": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "414": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB66"
    },
    "417": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "418": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "419": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4E1273F4"
    },
    "424": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "425": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB7B"
    },
    "428": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "429": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "430": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x56B4D760"
    },
    "435": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "436": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xCFB"
    },
    "439": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "440": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "441": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x59CA19D3"
    },
    "446": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "447": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD25"
    },
    "450": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "451": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "452": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x6DE51353"
    },
    "457": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "458": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD55"
    },
    "461": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "462": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "465": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "466": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "467": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "468": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EFB8874"
    },
    "473": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "474": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8C8"
    },
    "477": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "478": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "479": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2F2FF15D"
    },
    "484": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "485": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x943"
    },
    "488": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "489": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "490": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x36568ABE"
    },
    "495": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "496": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x97C"
    },
    "499": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "500": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "501": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x46E6F13D"
    },
    "506": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "507": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9B5"
    },
    "510": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "511": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "512": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x48772D79"
    },
    "517": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "518": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA6F"
    },
    "521": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "522": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "523": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x498E8219"
    },
    "528": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "529": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAC7"
    },
    "532": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "533": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "536": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "537": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "538": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "539": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x248A9CA3"
    },
    "544": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "GT",
      "path": "25"
    },
    "545": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26B"
    },
    "548": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "549": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "550": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x248A9CA3"
    },
    "555": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "556": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x554"
    },
    "559": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "560": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "561": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x26D4D15A"
    },
    "566": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "567": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x57E"
    },
    "570": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "571": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "572": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x26F7AF4F"
    },
    "577": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "578": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x615"
    },
    "581": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "582": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "583": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x27E50B18"
    },
    "588": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "589": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x650"
    },
    "592": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "593": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "594": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EB2C2D6"
    },
    "599": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "600": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x67A"
    },
    "603": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "604": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "605": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x2EE1F0A0"
    },
    "610": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "611": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x848"
    },
    "614": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "615": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AD"
    },
    "618": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "619": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "620": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "621": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0xFDD58E"
    },
    "625": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "626": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B2"
    },
    "629": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "630": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "631": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1FFC9A7"
    },
    "636": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "637": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FD"
    },
    "640": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "641": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "642": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x55AD42E"
    },
    "647": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "648": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x345"
    },
    "651": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "652": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "653": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE89341C"
    },
    "658": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "659": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37B"
    },
    "662": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "663": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "664": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFBEA841"
    },
    "669": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "670": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x41A"
    },
    "673": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "674": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "675": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x21C2F72A"
    },
    "680": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "EQ",
      "path": "25"
    },
    "681": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x494"
    },
    "684": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "685": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "686": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "688": {
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "DUP1",
      "path": "25"
    },
    "689": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        29328
      ],
      "op": "REVERT",
      "path": "25"
    },
    "690": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "691": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "692": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "693": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "694": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BE"
    },
    "697": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "698": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "701": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "702": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "703": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "704": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EB"
    },
    "707": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "709": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "710": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "711": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "712": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "714": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "715": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "LT",
      "path": "5"
    },
    "716": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "717": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D5"
    },
    "720": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "721": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "723": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "724": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "725": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "736": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "737": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "AND",
      "path": "5"
    },
    "738": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "739": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "741": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "742": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "743": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12DA"
    },
    "746": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "747": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "748": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "750": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "751": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "753": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "754": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "755": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "756": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "757": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "758": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "759": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "760": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "762": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "763": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "764": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "RETURN",
      "path": "5"
    },
    "765": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "766": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "767": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "768": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "769": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "772": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "773": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "775": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "776": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "777": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "778": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "779": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "782": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "785": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "786": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "787": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "789": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "790": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "1"
    },
    "791": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "792": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "795": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "796": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "798": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "799": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "800": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "op": "NOT"
    },
    "812": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "1"
    },
    "813": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134C"
    },
    "816": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "820": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "821": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "824": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "825": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "827": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "828": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "829": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "830": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "831": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "832": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "1"
    },
    "835": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "836": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "1"
    },
    "837": {
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "838": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "839": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "840": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "841": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x351"
    },
    "844": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "845": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "847": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "848": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "REVERT",
      "path": "25"
    },
    "849": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "850": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "851": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35A"
    },
    "854": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x136F"
    },
    "857": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMP",
      "path": "25"
    },
    "858": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "859": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "861": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "862": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "863": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP3",
      "path": "25"
    },
    "864": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "866": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "867": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "GT",
      "path": "25"
    },
    "868": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "869": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36A"
    },
    "872": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "873": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "INVALID",
      "path": "25"
    },
    "874": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "875": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "876": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "877": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "879": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "ADD",
      "path": "25"
    },
    "880": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "881": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "882": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "POP",
      "path": "25"
    },
    "883": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "885": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "886": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP1",
      "path": "25"
    },
    "887": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "888": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SUB",
      "path": "25"
    },
    "889": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "890": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "RETURN",
      "path": "25"
    },
    "891": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "892": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "893": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "894": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "895": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x387"
    },
    "898": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "899": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "902": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "903": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "904": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "905": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A5"
    },
    "908": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "910": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "911": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "912": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "913": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "915": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "916": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "917": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "918": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E"
    },
    "921": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "922": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "924": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "925": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "926": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "929": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1378"
    },
    "932": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "933": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "934": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "936": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "937": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "938": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "940": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "941": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "942": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "943": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "944": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "945": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "946": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "947": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "948": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "949": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "950": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "951": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "952": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "953": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "954": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "955": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "956": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "957": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "958": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "959": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP6",
      "path": "5"
    },
    "960": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "961": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "962": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "963": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "964": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "965": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "967": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "968": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "969": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "970": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "971": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "972": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3DF"
    },
    "975": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "976": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "977": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "978": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "979": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "980": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "981": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "982": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "983": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "984": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "986": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "987": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C7"
    },
    "990": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "991": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "992": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "993": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "994": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "995": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "996": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "997": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "998": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "999": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1000": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1001": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1002": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1004": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1005": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1006": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1007": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40C"
    },
    "1010": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1011": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1012": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1013": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1014": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1015": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1016": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1018": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1019": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1021": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1022": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1025": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "EXP",
      "path": "5"
    },
    "1026": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1027": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "NOT",
      "path": "5"
    },
    "1028": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1029": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1030": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1031": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1033": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1034": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1035": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1036": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1037": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1038": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1039": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1040": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1041": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1042": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1045": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1046": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1047": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1048": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1050": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1051": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "1054": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1056": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1057": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1058": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SUB",
      "path": "25"
    },
    "1059": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1061": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1062": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "LT",
      "path": "25"
    },
    "1063": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1064": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x430"
    },
    "1067": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1068": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1070": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1071": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1072": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1073": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1074": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1075": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1076": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1078": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1079": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1080": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1081": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1082": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1083": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1084": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1085": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1087": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1088": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1089": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1091": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1092": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1093": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1100": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1101": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1102": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x456"
    },
    "1105": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1106": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1108": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1109": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1110": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1111": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1112": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1113": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1114": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1116": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1117": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1118": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1119": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1120": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x468"
    },
    "1123": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1124": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1126": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1127": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1128": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1129": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1130": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1131": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1132": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1134": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1135": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1137": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1139": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1140": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "MUL",
      "path": "25"
    },
    "1141": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1142": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ADD",
      "path": "25"
    },
    "1143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1150": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "GT",
      "path": "25"
    },
    "1151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "OR",
      "path": "25"
    },
    "1152": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1153": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x489"
    },
    "1156": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1157": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1159": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1160": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1161": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1164": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1410"
    },
    "1171": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1172": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1173": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1174": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1175": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1176": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4A0"
    },
    "1179": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1180": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1182": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1183": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1184": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1185": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1186": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4BE"
    },
    "1189": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1191": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1192": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1193": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1194": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1196": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1197": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "LT",
      "path": "25"
    },
    "1198": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1199": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B7"
    },
    "1202": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1203": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1205": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1206": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1207": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1210": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x16EF"
    },
    "1213": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1214": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1215": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1217": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1218": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1219": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1220": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1221": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1222": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1223": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1224": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1226": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1227": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1228": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1229": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1230": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1232": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1233": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1234": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1235": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1236": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1238": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1239": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1240": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1242": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1243": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1244": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1245": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1246": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1248": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1249": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1250": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1251": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1252": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1253": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1254": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1255": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1256": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1257": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1258": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1259": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1260": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1262": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1263": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1264": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1265": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1266": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1267": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1268": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1270": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1271": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1272": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1273": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1274": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1275": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1277": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1278": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1279": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1280": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "LT",
      "path": "25"
    },
    "1281": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1282": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x515"
    },
    "1285": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1286": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1287": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1288": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1289": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1290": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1291": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1292": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1293": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1294": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1296": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1297": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FD"
    },
    "1300": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1301": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1302": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1303": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1304": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1305": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1306": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1307": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1308": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1309": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1310": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1311": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1312": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1314": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "AND",
      "path": "25"
    },
    "1315": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1316": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1317": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x542"
    },
    "1320": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1321": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1322": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1323": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1324": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1325": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1326": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1328": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1329": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1331": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1332": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1335": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "EXP",
      "path": "25"
    },
    "1336": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1337": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "NOT",
      "path": "25"
    },
    "1338": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "AND",
      "path": "25"
    },
    "1339": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1340": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1341": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1343": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "ADD",
      "path": "25"
    },
    "1344": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1345": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1346": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1347": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1348": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1349": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1350": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1351": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1352": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1353": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1354": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1355": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "POP",
      "path": "25"
    },
    "1356": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1358": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1359": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1360": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1361": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SUB",
      "path": "25"
    },
    "1362": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1363": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "RETURN",
      "path": "25"
    },
    "1364": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1365": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1366": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1367": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1368": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x560"
    },
    "1371": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1372": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1374": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1375": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1376": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1377": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1378": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "1381": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1383": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1384": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1385": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SUB",
      "path": "0"
    },
    "1386": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1388": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1389": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "LT",
      "path": "0"
    },
    "1390": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1391": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x577"
    },
    "1394": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1395": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1397": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1398": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1399": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1402": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181D"
    },
    "1405": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1406": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1407": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1408": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1409": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1410": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x58A"
    },
    "1413": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1414": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1416": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1417": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1418": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1419": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "POP",
      "path": "25"
    },
    "1420": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5F9"
    },
    "1423": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1425": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1426": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1427": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SUB",
      "path": "25"
    },
    "1428": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1430": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1431": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "LT",
      "path": "25"
    },
    "1432": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1433": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1437": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1439": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1440": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1441": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1442": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1443": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1444": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1445": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1447": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1448": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1449": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1450": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1457": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "GT",
      "path": "25"
    },
    "1458": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1459": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5BB"
    },
    "1462": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1463": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1465": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1466": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1467": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1468": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1469": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1470": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1471": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1473": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1474": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1475": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "GT",
      "path": "25"
    },
    "1476": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1477": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1481": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1483": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1484": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1485": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1486": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1487": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1488": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1489": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1491": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1492": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1493": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1494": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1496": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1497": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "MUL",
      "path": "25"
    },
    "1498": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1499": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1500": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "GT",
      "path": "25"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1507": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "GT",
      "path": "25"
    },
    "1508": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "OR",
      "path": "25"
    },
    "1509": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1510": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5EE"
    },
    "1513": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1514": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1516": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1517": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1518": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1521": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1832"
    },
    "1528": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "i",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1529": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1530": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1532": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1533": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1543": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1544": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "AND",
      "path": "25"
    },
    "1545": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1546": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1547": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1548": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1549": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1550": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1551": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SUB",
      "path": "25"
    },
    "1552": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1554": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "ADD",
      "path": "25"
    },
    "1555": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1556": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "RETURN",
      "path": "25"
    },
    "1557": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1558": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1559": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1560": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1561": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x621"
    },
    "1564": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1565": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1567": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1568": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1569": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1570": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "POP",
      "path": "25"
    },
    "1571": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "1574": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1576": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1577": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1578": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "SUB",
      "path": "25"
    },
    "1579": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1581": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1582": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "LT",
      "path": "25"
    },
    "1583": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1584": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x638"
    },
    "1587": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1588": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1590": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1591": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1592": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1603": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1604": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "AND",
      "path": "25"
    },
    "1605": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1606": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1608": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "ADD",
      "path": "25"
    },
    "1609": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1610": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x186C"
    },
    "1613": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1614": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1615": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "STOP",
      "path": "25"
    },
    "1616": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1617": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "1618": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1619": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1620": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x65C"
    },
    "1623": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1624": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1626": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1627": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1628": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1629": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "POP",
      "path": "25"
    },
    "1630": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "1633": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1635": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1636": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "1637": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "SUB",
      "path": "25"
    },
    "1638": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1640": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1641": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "LT",
      "path": "25"
    },
    "1642": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1643": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x673"
    },
    "1646": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1647": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1649": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1650": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1651": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1654": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1881"
    },
    "1657": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1658": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1661": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1662": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x686"
    },
    "1665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1671": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "1672": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64E"
    },
    "1675": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1679": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SUB",
      "path": "5"
    },
    "1680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1682": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1683": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "LT",
      "path": "5"
    },
    "1684": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69D"
    },
    "1688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1691": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1692": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1693": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "SUB"
    },
    "1702": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1706": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1707": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1710": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1713": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1714": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1717": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1718": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1719": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1721": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1722": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1723": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1725": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1727": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1735": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D0"
    },
    "1739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1744": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1747": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E2"
    },
    "1757": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1762": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1763": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1764": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1765": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1770": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1771": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1774": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x703"
    },
    "1790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1793": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1805": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1814": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1815": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1819": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1828": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1831": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1840": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1842": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1845": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1851": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1855": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x752"
    },
    "1869": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1876": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1880": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1883": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1884": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x764"
    },
    "1887": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1890": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1891": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1894": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1895": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1901": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x785"
    },
    "1920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1929": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1930": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1935": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1936": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1940": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1944": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1945": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1970": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1995": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D4"
    },
    "1999": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2006": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2013": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E6"
    },
    "2017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2030": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "2045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "2046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x807"
    },
    "2050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2051": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2053": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2054": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2055": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2059": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2065": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2066": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DIV",
      "path": "5"
    },
    "2068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2071": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2072": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2075": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2076": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2080": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2081": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2082": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2083": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2084": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2085": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2086": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2089": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2091": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2092": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2093": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2094": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2095": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2096": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2097": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2101": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2102": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2103": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2108": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2109": {
      "op": "POP"
    },
    "2110": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19CD"
    },
    "2113": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2114": {
      "op": "POP"
    },
    "2115": {
      "op": "POP"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2120": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2121": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2122": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2123": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2124": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x854"
    },
    "2127": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2128": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2130": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2131": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2132": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2133": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "POP",
      "path": "25"
    },
    "2134": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x872"
    },
    "2137": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2139": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2140": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2141": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SUB",
      "path": "25"
    },
    "2142": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2144": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2145": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "LT",
      "path": "25"
    },
    "2146": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2147": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x86B"
    },
    "2150": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2151": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2153": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2154": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2155": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2158": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1CD0"
    },
    "2161": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "i",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2162": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2163": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2165": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2166": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2167": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2168": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2169": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2170": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2171": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2172": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2174": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2175": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2176": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2178": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2179": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2180": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2181": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2182": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2184": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2185": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2186": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2187": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2188": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2190": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2191": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2192": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2193": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2194": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2196": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2197": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2198": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2199": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SUB",
      "path": "25"
    },
    "2200": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2201": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2202": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2203": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2204": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2205": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2206": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2207": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2208": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2210": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2211": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2212": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "POP",
      "path": "25"
    },
    "2213": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2214": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2215": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2216": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2218": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2219": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2220": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2221": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2222": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2223": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2225": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2226": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2227": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "LT",
      "path": "25"
    },
    "2228": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2229": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x515"
    },
    "2232": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2233": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2234": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2235": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2236": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2237": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2238": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2239": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2240": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2241": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2243": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "ADD",
      "path": "25"
    },
    "2244": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FD"
    },
    "2247": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2248": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2249": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2250": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2251": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2252": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8D4"
    },
    "2255": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2256": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2258": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2259": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2260": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2261": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "POP",
      "path": "25"
    },
    "2262": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "2265": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2267": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2268": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2269": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SUB",
      "path": "25"
    },
    "2270": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2272": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2273": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "LT",
      "path": "25"
    },
    "2274": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2275": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8EB"
    },
    "2278": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2279": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2281": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2282": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2283": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2284": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2285": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2286": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2287": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2289": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2290": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2291": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2292": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2299": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "GT",
      "path": "25"
    },
    "2300": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2301": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x905"
    },
    "2304": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2305": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2307": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2308": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2309": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2310": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2311": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2312": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2313": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2315": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2316": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2317": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "GT",
      "path": "25"
    },
    "2318": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2319": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x917"
    },
    "2322": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2323": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2325": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2326": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2327": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2328": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2329": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2330": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2331": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2333": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2334": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2335": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2336": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2338": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2339": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "MUL",
      "path": "25"
    },
    "2340": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2341": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ADD",
      "path": "25"
    },
    "2342": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "GT",
      "path": "25"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2349": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "GT",
      "path": "25"
    },
    "2350": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "OR",
      "path": "25"
    },
    "2351": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2352": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x938"
    },
    "2355": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2356": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2358": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2359": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2360": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2363": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DD2"
    },
    "2370": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "i",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2371": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2372": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2373": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2375": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94F"
    },
    "2378": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2379": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2381": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2382": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2383": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2384": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "2385": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "2388": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2390": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2391": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2392": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SUB",
      "path": "0"
    },
    "2393": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2395": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2396": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "LT",
      "path": "0"
    },
    "2397": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2398": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "2401": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2402": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2404": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2405": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2406": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2409": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2410": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2411": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2413": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ADD",
      "path": "0"
    },
    "2414": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "AND",
      "path": "0"
    },
    "2424": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DED"
    },
    "2427": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2428": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2429": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2430": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2431": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2432": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x988"
    },
    "2435": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2436": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2438": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2439": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2440": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2441": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "POP",
      "path": "0"
    },
    "2442": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "2445": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2447": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2448": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2449": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SUB",
      "path": "0"
    },
    "2450": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2452": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2453": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "LT",
      "path": "0"
    },
    "2454": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2455": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99F"
    },
    "2458": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2459": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2461": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2462": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2463": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2466": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2467": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2468": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2470": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ADD",
      "path": "0"
    },
    "2471": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "op": "SUB"
    },
    "2480": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "AND",
      "path": "0"
    },
    "2481": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E55"
    },
    "2484": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2485": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2486": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2487": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2488": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2489": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9C1"
    },
    "2492": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2493": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2495": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2496": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2497": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2498": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2499": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9DF"
    },
    "2502": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2504": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2505": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2506": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2507": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2509": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2510": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "LT",
      "path": "25"
    },
    "2511": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2512": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9D8"
    },
    "2515": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2516": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2518": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2519": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2520": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2523": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1EB6"
    },
    "2526": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "i",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2527": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2528": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2530": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2531": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2532": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2533": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2535": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2536": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2537": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2538": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2539": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2541": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2542": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2543": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2544": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2545": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2547": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2548": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2549": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2551": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "AND",
      "path": "25"
    },
    "2552": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2553": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2554": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2556": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2557": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2558": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2559": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2560": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2561": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2562": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2563": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2564": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2565": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2566": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2567": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2568": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2570": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2571": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2572": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2573": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2574": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2575": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2576": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2578": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2579": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2580": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2581": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2582": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2583": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2585": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2586": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2587": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2588": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "LT",
      "path": "25"
    },
    "2589": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2590": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA31"
    },
    "2593": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2594": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2595": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2596": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2597": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2598": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2599": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2600": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2601": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2602": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2604": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2605": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA19"
    },
    "2608": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2609": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2610": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2611": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2612": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2613": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2614": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2615": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2616": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2617": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2618": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2619": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2620": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2622": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "AND",
      "path": "25"
    },
    "2623": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2624": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2625": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA5E"
    },
    "2628": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2629": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2630": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2631": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2632": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2633": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2634": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2636": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2637": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2639": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2640": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "2643": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "EXP",
      "path": "25"
    },
    "2644": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2645": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "NOT",
      "path": "25"
    },
    "2646": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "AND",
      "path": "25"
    },
    "2647": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2648": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2649": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2651": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "ADD",
      "path": "25"
    },
    "2652": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2653": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2654": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2655": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2656": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "2657": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2658": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2659": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2660": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2661": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2662": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "2663": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2665": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2666": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2667": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2668": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SUB",
      "path": "25"
    },
    "2669": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2670": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "RETURN",
      "path": "25"
    },
    "2671": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2672": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2673": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2674": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2675": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA7B"
    },
    "2678": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2679": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2681": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2682": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2683": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2684": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "POP",
      "path": "25"
    },
    "2685": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA99"
    },
    "2688": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2690": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2691": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2692": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SUB",
      "path": "25"
    },
    "2693": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2695": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2696": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "LT",
      "path": "25"
    },
    "2697": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2698": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA92"
    },
    "2701": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2702": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2704": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2705": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2706": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2709": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FB3"
    },
    "2712": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "i",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2713": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2714": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2716": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2717": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2718": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "2720": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "2721": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2722": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "AND",
      "path": "25"
    },
    "2723": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2724": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2725": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "2726": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2727": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "AND",
      "path": "25"
    },
    "2728": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2730": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2731": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ADD",
      "path": "25"
    },
    "2732": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2733": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2734": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2735": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "AND",
      "path": "25"
    },
    "2736": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2737": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2738": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ADD",
      "path": "25"
    },
    "2739": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2740": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2741": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2742": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "AND",
      "path": "25"
    },
    "2743": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "2745": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2746": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ADD",
      "path": "25"
    },
    "2747": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2748": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2749": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2750": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2751": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2752": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2753": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SUB",
      "path": "25"
    },
    "2754": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2756": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "ADD",
      "path": "25"
    },
    "2757": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2758": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "RETURN",
      "path": "25"
    },
    "2759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "2763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SUB",
      "path": "25"
    },
    "2768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "LT",
      "path": "25"
    },
    "2772": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2773": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xADD"
    },
    "2776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2779": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "GT",
      "path": "25"
    },
    "2805": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2806": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAFE"
    },
    "2809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2813": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2816": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2820": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "GT",
      "path": "25"
    },
    "2823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB10"
    },
    "2827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2828": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2831": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2834": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2838": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2841": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "MUL",
      "path": "25"
    },
    "2845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2846": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ADD",
      "path": "25"
    },
    "2847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "GT",
      "path": "25"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "GT",
      "path": "25"
    },
    "2855": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "OR",
      "path": "25"
    },
    "2856": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2857": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB31"
    },
    "2860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2025"
    },
    "2875": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2876": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2877": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2878": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2879": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2880": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB48"
    },
    "2883": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2884": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2886": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2887": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2888": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2889": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "POP",
      "path": "25"
    },
    "2890": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA99"
    },
    "2893": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2895": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2896": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "2897": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "SUB",
      "path": "25"
    },
    "2898": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2900": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2901": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "LT",
      "path": "25"
    },
    "2902": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2903": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB5F"
    },
    "2906": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2907": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2909": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2910": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2911": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "2914": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2774"
    },
    "2917": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "i",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2918": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2919": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2920": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2921": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2922": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB72"
    },
    "2925": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2926": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2928": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2929": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2930": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2931": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "POP",
      "path": "25"
    },
    "2932": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "2935": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x27EB"
    },
    "2938": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "i",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2939": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2943": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB87"
    },
    "2946": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2947": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2949": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2952": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "2953": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCAB"
    },
    "2956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2958": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2959": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2960": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "2961": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2963": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2964": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "2965": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2966": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB9E"
    },
    "2969": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2970": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2972": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2973": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2975": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2976": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2977": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2980": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2981": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2982": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2983": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2990": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2991": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2992": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB8"
    },
    "2995": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2996": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2998": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2999": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3001": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3006": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3008": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3010": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCA"
    },
    "3013": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3014": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3016": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3017": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3020": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3021": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3022": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3024": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3031": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3038": {
      "op": "SHL"
    },
    "3039": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3040": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3041": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3042": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEB"
    },
    "3046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3055": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3056": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3099": {
      "op": "POP"
    },
    "3100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3112": {
      "op": "POP"
    },
    "3113": {
      "op": "POP"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3A"
    },
    "3125": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4C"
    },
    "3143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3162": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3170": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3171": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3172": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6D"
    },
    "3176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3182": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3205": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3216": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3228": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F2"
    },
    "3236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3247": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3255": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3256": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3259": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3261": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3262": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3263": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3264": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3265": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3268": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3269": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3271": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3272": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3275": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3277": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3279": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3282": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "3283": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3284": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE7"
    },
    "3287": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3290": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3291": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3295": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3296": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3298": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3299": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCCF"
    },
    "3302": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3303": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3304": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3305": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3306": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3307": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3308": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3309": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3310": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3311": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3312": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3313": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3314": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3315": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3317": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3318": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3319": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3320": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "3321": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3322": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "RETURN",
      "path": "5"
    },
    "3323": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3324": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3325": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3326": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3327": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD07"
    },
    "3330": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3331": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3333": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3334": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3335": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3336": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "POP",
      "path": "25"
    },
    "3337": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5F9"
    },
    "3340": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3342": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3343": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3344": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "SUB",
      "path": "25"
    },
    "3345": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3347": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3348": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "LT",
      "path": "25"
    },
    "3349": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3350": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD1E"
    },
    "3353": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3354": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3356": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3357": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3358": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3361": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x28DE"
    },
    "3364": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "i",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3365": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3366": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3367": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3368": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3369": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD31"
    },
    "3372": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3373": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3375": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3376": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3377": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3378": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "POP",
      "path": "25"
    },
    "3379": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "3382": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3384": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3385": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3386": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "SUB",
      "path": "25"
    },
    "3387": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3389": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3390": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "LT",
      "path": "25"
    },
    "3391": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3392": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD48"
    },
    "3395": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3396": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3398": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3399": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3400": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3403": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3404": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3405": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3407": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "ADD",
      "path": "25"
    },
    "3408": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3409": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2947"
    },
    "3412": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3413": {
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3414": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3415": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3416": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3417": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD61"
    },
    "3420": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3421": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3423": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3424": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3425": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3426": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "3427": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3A5"
    },
    "3430": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3432": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3433": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3434": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SUB",
      "path": "25"
    },
    "3435": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3437": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3438": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "3439": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3440": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD78"
    },
    "3443": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3444": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3446": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3447": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3448": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3449": {
      "op": "POP"
    },
    "3450": {
      "offset": [
        3746,
        3786
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3451": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2992"
    },
    "3454": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3455": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3456": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3457": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3458": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3459": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD8B"
    },
    "3462": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3463": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3465": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3466": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3467": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3468": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "POP",
      "path": "25"
    },
    "3469": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5F9"
    },
    "3472": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3474": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3475": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3476": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "SUB",
      "path": "25"
    },
    "3477": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3479": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3480": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "LT",
      "path": "25"
    },
    "3481": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3482": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDA2"
    },
    "3485": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3486": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3488": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3489": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3490": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3493": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A38"
    },
    "3496": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3497": {
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3498": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3499": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3500": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3501": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDB5"
    },
    "3504": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3505": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3507": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3508": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3509": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3510": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "POP",
      "path": "25"
    },
    "3511": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "3514": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A93"
    },
    "3517": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3518": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3519": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3520": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3521": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3522": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDCA"
    },
    "3525": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3526": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3528": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3529": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3530": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3531": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "POP",
      "path": "25"
    },
    "3532": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDE8"
    },
    "3535": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3537": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3538": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3539": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SUB",
      "path": "25"
    },
    "3540": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3542": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3543": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "LT",
      "path": "25"
    },
    "3544": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3545": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDE1"
    },
    "3548": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3549": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3551": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3552": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3553": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3556": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A99"
    },
    "3559": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "i",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3560": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3561": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3563": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3564": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3565": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "3567": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "3568": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP9",
      "path": "25"
    },
    "3569": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3570": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3571": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3572": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "3573": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP8",
      "path": "25"
    },
    "3574": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3575": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3577": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP8",
      "path": "25"
    },
    "3578": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3579": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3580": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "3581": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP7",
      "path": "25"
    },
    "3582": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3583": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3584": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3585": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3586": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3587": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3588": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3589": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3590": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "3592": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3593": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3594": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3595": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3596": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3597": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "3599": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3600": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3601": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3602": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3603": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3604": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "AND",
      "path": "25"
    },
    "3605": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "3607": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3608": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3609": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3610": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3611": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3612": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3613": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3614": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3615": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SUB",
      "path": "25"
    },
    "3616": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "3618": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "ADD",
      "path": "25"
    },
    "3619": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3620": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "RETURN",
      "path": "25"
    },
    "3621": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3622": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3623": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3624": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3625": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE31"
    },
    "3628": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3629": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3631": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3632": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3633": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3634": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "POP",
      "path": "25"
    },
    "3635": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA99"
    },
    "3638": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3640": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3641": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3642": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "SUB",
      "path": "25"
    },
    "3643": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3645": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3646": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "LT",
      "path": "25"
    },
    "3647": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3648": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE48"
    },
    "3651": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3652": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3654": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3655": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3656": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3659": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B25"
    },
    "3662": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3663": {
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3664": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3665": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3666": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3667": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE5B"
    },
    "3670": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3671": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3673": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3674": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3675": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3676": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "POP",
      "path": "25"
    },
    "3677": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "3680": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B94"
    },
    "3683": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3684": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3685": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3686": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3687": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3688": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE70"
    },
    "3691": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3692": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3694": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3695": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3696": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3697": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "3698": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "3701": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3703": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3704": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3705": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SUB",
      "path": "0"
    },
    "3706": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3708": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3709": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "LT",
      "path": "0"
    },
    "3710": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3711": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE87"
    },
    "3714": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3715": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3717": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3718": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3719": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3722": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3723": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3724": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3726": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ADD",
      "path": "0"
    },
    "3727": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3728": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B9A"
    },
    "3731": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3732": {
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3733": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3734": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3735": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3736": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3740": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3742": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3743": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3744": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3745": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "POP",
      "path": "25"
    },
    "3746": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "3749": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        2088,
        2136
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BB9"
    },
    "3752": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3753": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3754": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3755": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3756": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3757": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB5"
    },
    "3760": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3761": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3763": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3764": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3765": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3766": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "POP",
      "path": "0"
    },
    "3767": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331"
    },
    "3770": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3772": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3773": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3774": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SUB",
      "path": "0"
    },
    "3775": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3777": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3778": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "LT",
      "path": "0"
    },
    "3779": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3780": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECC"
    },
    "3783": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3784": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3786": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3787": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3788": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3791": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3792": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3793": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3795": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3796": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "op": "SUB"
    },
    "3805": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "AND",
      "path": "0"
    },
    "3806": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BBE"
    },
    "3809": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3810": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3811": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "3812": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3813": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3814": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEEE"
    },
    "3817": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3818": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3820": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3821": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3822": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3823": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "POP",
      "path": "28"
    },
    "3824": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x64E"
    },
    "3827": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3829": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3830": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "3831": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SUB",
      "path": "28"
    },
    "3832": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3834": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3835": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "LT",
      "path": "28"
    },
    "3836": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3837": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF05"
    },
    "3840": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3841": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3843": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3844": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3845": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3848": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "3849": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3850": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3852": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ADD",
      "path": "28"
    },
    "3853": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "3854": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2BD6"
    },
    "3857": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3858": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3859": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3860": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3861": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3862": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF1E"
    },
    "3865": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3866": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3868": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3869": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3870": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3871": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "3872": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "3875": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3877": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3878": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "3879": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SUB",
      "path": "25"
    },
    "3880": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3882": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3883": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "LT",
      "path": "25"
    },
    "3884": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3885": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF35"
    },
    "3888": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3889": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3891": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3892": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3893": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3894": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3895": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3896": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3897": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3899": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3900": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3901": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3902": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3909": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3910": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3911": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF4F"
    },
    "3914": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3915": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3917": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3918": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3919": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3920": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3921": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3922": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3923": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3925": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3926": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3927": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3928": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3929": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF61"
    },
    "3932": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3933": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3935": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3936": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3937": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3938": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3939": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3940": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3941": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3943": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3944": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3945": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3946": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "3948": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3949": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "MUL",
      "path": "25"
    },
    "3950": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP5",
      "path": "25"
    },
    "3951": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ADD",
      "path": "25"
    },
    "3952": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3959": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "GT",
      "path": "25"
    },
    "3960": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "OR",
      "path": "25"
    },
    "3961": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3962": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF82"
    },
    "3965": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3966": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3968": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3969": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3970": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3971": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3972": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "SUB"
    },
    "3985": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "AND",
      "path": "25"
    },
    "3986": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C5D"
    },
    "3989": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3990": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3991": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3992": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3993": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3994": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFA2"
    },
    "3997": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3998": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4000": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4001": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4002": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4003": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "POP",
      "path": "25"
    },
    "4004": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "4007": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4009": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4010": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4011": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SUB",
      "path": "25"
    },
    "4012": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4014": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4015": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "LT",
      "path": "25"
    },
    "4016": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4017": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFB9"
    },
    "4020": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4021": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4023": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4024": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4025": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4026": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4027": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4028": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4029": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4031": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4032": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4033": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4034": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4039": {
      "op": "SHL"
    },
    "4040": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4041": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "GT",
      "path": "25"
    },
    "4042": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4043": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFD3"
    },
    "4046": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4047": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4049": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4050": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4051": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4052": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP3",
      "path": "25"
    },
    "4053": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4054": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4055": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4057": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP3",
      "path": "25"
    },
    "4058": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4059": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "GT",
      "path": "25"
    },
    "4060": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4061": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFE5"
    },
    "4064": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4065": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4067": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4068": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4069": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4070": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4071": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4072": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4073": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4075": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4076": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "4077": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP5",
      "path": "25"
    },
    "4078": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "4080": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4081": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "MUL",
      "path": "25"
    },
    "4082": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP5",
      "path": "25"
    },
    "4083": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ADD",
      "path": "25"
    },
    "4084": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "GT",
      "path": "25"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4089": {
      "op": "SHL"
    },
    "4090": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP4",
      "path": "25"
    },
    "4091": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "GT",
      "path": "25"
    },
    "4092": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "OR",
      "path": "25"
    },
    "4093": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4094": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1006"
    },
    "4097": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4098": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4100": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4101": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4102": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4103": {
      "op": "POP"
    },
    "4104": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4105": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "4106": {
      "op": "POP"
    },
    "4107": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4108": {
      "op": "POP"
    },
    "4109": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CFF"
    },
    "4112": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4113": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4114": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4115": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4116": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4117": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101D"
    },
    "4120": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4121": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4123": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4124": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4125": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4126": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "4127": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "4130": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D65"
    },
    "4133": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4134": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4135": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4136": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4137": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4138": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1032"
    },
    "4141": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4142": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4144": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4145": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4146": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4147": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "4148": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64E"
    },
    "4151": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4153": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4154": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4155": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SUB",
      "path": "5"
    },
    "4156": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4158": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4159": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "LT",
      "path": "5"
    },
    "4160": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4161": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1049"
    },
    "4164": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4165": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4167": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4168": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4169": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "op": "SUB"
    },
    "4179": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4180": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4181": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "AND",
      "path": "5"
    },
    "4182": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4183": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4185": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ADD",
      "path": "5"
    },
    "4186": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4187": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4188": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4189": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D6A"
    },
    "4192": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4193": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4194": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4195": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4196": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4197": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x106D"
    },
    "4200": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4201": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4203": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4204": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4205": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4206": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "POP",
      "path": "25"
    },
    "4207": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "4210": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E59"
    },
    "4213": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4214": {
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4215": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4216": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4217": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4218": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1082"
    },
    "4221": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4222": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4224": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4225": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4226": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4227": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "POP",
      "path": "25"
    },
    "4228": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "4231": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EEF"
    },
    "4234": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4235": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4236": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4237": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4238": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4239": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1097"
    },
    "4242": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4243": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4245": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4246": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4247": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4248": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "POP",
      "path": "25"
    },
    "4249": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "4252": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4254": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4255": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4256": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "SUB",
      "path": "25"
    },
    "4257": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4259": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4260": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "LT",
      "path": "25"
    },
    "4261": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4262": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10AE"
    },
    "4265": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4266": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4268": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4269": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4270": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4273": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "4275": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "AND",
      "path": "25"
    },
    "4276": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EF5"
    },
    "4279": {
      "fn": "CryptoChampions.setPhase",
      "jump": "i",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4280": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4281": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4282": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4283": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4284": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C4"
    },
    "4287": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4288": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4290": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4291": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4292": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4293": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "POP",
      "path": "0"
    },
    "4294": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "4297": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4299": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4300": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4301": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "SUB",
      "path": "0"
    },
    "4302": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4304": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4305": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "LT",
      "path": "0"
    },
    "4306": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4307": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DB"
    },
    "4310": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4311": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4313": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4314": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4315": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4318": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2C"
    },
    "4321": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4322": {
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4323": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4324": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4325": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4326": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10EE"
    },
    "4329": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4330": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4332": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4333": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4334": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4335": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "POP",
      "path": "25"
    },
    "4336": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "4339": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F43"
    },
    "4342": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4343": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4344": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4345": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4346": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4347": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1103"
    },
    "4350": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4351": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4353": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4354": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4355": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4356": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "POP",
      "path": "0"
    },
    "4357": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "4360": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4362": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4363": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4364": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SUB",
      "path": "0"
    },
    "4365": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4367": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4368": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "LT",
      "path": "0"
    },
    "4369": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4370": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "4373": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4374": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4376": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4377": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4378": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4379": {
      "op": "POP"
    },
    "4380": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4381": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4382": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4383": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4385": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4386": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "SUB"
    },
    "4395": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "AND",
      "path": "0"
    },
    "4396": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F49"
    },
    "4399": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4400": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4401": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4402": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4403": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4404": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x113C"
    },
    "4407": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4408": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4410": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4411": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4412": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4413": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "POP",
      "path": "25"
    },
    "4414": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "4417": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4419": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4420": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4421": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "SUB",
      "path": "25"
    },
    "4422": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4424": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4425": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "LT",
      "path": "25"
    },
    "4426": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4427": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1153"
    },
    "4430": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4431": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4433": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4434": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4435": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4438": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FA2"
    },
    "4441": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4442": {
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4443": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4444": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4445": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4446": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1166"
    },
    "4449": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4450": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4452": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4453": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4454": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4455": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "POP",
      "path": "25"
    },
    "4456": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3A5"
    },
    "4459": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4461": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4462": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4463": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "SUB",
      "path": "25"
    },
    "4464": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4466": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4467": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "LT",
      "path": "25"
    },
    "4468": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4469": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x117D"
    },
    "4472": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4473": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4475": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4476": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4477": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "offset": [
        3330,
        3356
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4480": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FBE"
    },
    "4483": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4484": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4485": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4486": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4487": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4488": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1190"
    },
    "4491": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4492": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4494": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4495": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4496": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4497": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "POP",
      "path": "5"
    },
    "4498": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x331"
    },
    "4501": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4503": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4504": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4505": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SUB",
      "path": "5"
    },
    "4506": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4508": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4509": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "LT",
      "path": "5"
    },
    "4510": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4511": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A7"
    },
    "4514": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4515": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4517": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4518": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4519": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4530": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4531": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4532": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4533": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4534": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4536": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ADD",
      "path": "5"
    },
    "4537": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4538": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4539": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FCB"
    },
    "4542": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4543": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4544": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4545": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4546": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4547": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CB"
    },
    "4550": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4551": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4553": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4554": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4555": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4556": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "POP",
      "path": "5"
    },
    "4557": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64E"
    },
    "4560": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4562": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SUB",
      "path": "5"
    },
    "4565": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4567": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "LT",
      "path": "5"
    },
    "4569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4570": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E2"
    },
    "4573": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4574": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4576": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4577": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4578": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4585": {
      "op": "SHL"
    },
    "4586": {
      "op": "SUB"
    },
    "4587": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4588": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4589": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4590": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4591": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4592": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4594": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4595": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4596": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4597": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4598": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4599": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4600": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4601": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4603": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4607": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4609": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4610": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4612": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4613": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4614": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4615": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4616": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4618": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4619": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4620": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "4622": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4629": {
      "op": "SHL"
    },
    "4630": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4632": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4633": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1221"
    },
    "4636": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4640": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4641": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4642": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4643": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4644": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4645": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4647": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1233"
    },
    "4654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4659": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4662": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4663": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4665": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4667": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "OR",
      "path": "5"
    },
    "4683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1254"
    },
    "4687": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4690": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4691": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4694": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4695": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4696": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4699": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DIV",
      "path": "5"
    },
    "4705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4706": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4711": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4713": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4715": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4718": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4719": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4720": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4722": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4728": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4729": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4730": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4732": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "4735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4737": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4739": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4740": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4741": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4745": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FF9"
    },
    "4750": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4751": {
      "op": "POP"
    },
    "4752": {
      "op": "POP"
    },
    "4753": {
      "op": "POP"
    },
    "4754": {
      "op": "POP"
    },
    "4755": {
      "op": "POP"
    },
    "4756": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4757": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4758": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4759": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4760": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4761": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12A1"
    },
    "4764": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4765": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4767": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4768": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4769": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4770": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "POP",
      "path": "25"
    },
    "4771": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB"
    },
    "4774": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "4776": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4777": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "4778": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "SUB",
      "path": "25"
    },
    "4779": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4781": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4782": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "LT",
      "path": "25"
    },
    "4783": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4784": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12B8"
    },
    "4787": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4788": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4790": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4791": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4792": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4795": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4796": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "4797": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "4799": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "ADD",
      "path": "25"
    },
    "4800": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "4801": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x31C4"
    },
    "4804": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4805": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4806": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "4807": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4808": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "4809": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12D1"
    },
    "4812": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "4813": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "4815": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "DUP1",
      "path": "25"
    },
    "4816": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "REVERT",
      "path": "25"
    },
    "4817": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4818": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "POP",
      "path": "25"
    },
    "4819": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x64E"
    },
    "4822": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3229"
    },
    "4825": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4826": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4827": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3062,
        3069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "op": "SUB"
    },
    "4837": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 0
    },
    "4838": {
      "branch": 255,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "AND",
      "path": "5"
    },
    "4839": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1321"
    },
    "4842": {
      "branch": 255,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4843": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4845": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4852": {
      "op": "SHL"
    },
    "4853": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4854": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4855": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4857": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4858": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4859": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4860": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4862": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4863": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4864": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4865": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4866": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4867": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4868": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4870": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4871": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4872": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4874": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4875": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4876": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x508B"
    },
    "4879": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4881": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4882": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4883": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4885": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4886": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4887": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4888": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4889": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4891": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4892": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4893": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4894": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4895": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4896": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4897": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x0"
    },
    "4901": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4902": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4903": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4904": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4906": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4908": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4909": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4910": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4911": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4913": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4914": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4915": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4922": {
      "op": "SHL"
    },
    "4923": {
      "op": "SUB"
    },
    "4924": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4925": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "AND",
      "path": "5"
    },
    "4926": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4927": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4928": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4929": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4930": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4931": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4932": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4933": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4934": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4935": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4936": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4937": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4938": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4939": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4940": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4947": {
      "op": "SHL"
    },
    "4948": {
      "op": "SUB"
    },
    "4949": {
      "op": "NOT"
    },
    "4950": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "4951": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "4952": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4954": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4955": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4956": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4957": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4959": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4961": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4962": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4964": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4965": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4966": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4967": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4969": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "4970": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4971": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4972": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4973": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "4974": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4975": {
      "offset": [
        1117,
        1142
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "4976": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "4978": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "4979": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "4981": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "AND",
      "path": "25"
    },
    "4982": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1117,
        1142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "4983": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        1117,
        1142
      ],
      "op": "JUMP",
      "path": "25"
    },
    "4984": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4985": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x4"
    },
    "4987": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4988": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4989": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4991": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4992": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4993": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4995": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4997": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5001": {
      "op": "NOT"
    },
    "5002": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5005": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5007": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5008": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5009": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5010": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5011": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5012": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5013": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "5014": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5015": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5016": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5017": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5018": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5019": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5020": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5021": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5022": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5023": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5024": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5025": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5026": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5027": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5028": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5029": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5030": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5031": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5032": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5033": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5034": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5035": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5036": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5037": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5039": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5040": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5041": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5042": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5043": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5044": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5045": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5046": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5047": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5048": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5049": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5050": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1404"
    },
    "5053": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5054": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5055": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5057": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "LT",
      "path": "5"
    },
    "5058": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13D9"
    },
    "5061": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5062": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5065": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5066": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5067": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5068": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5069": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5070": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5071": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5072": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5073": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5075": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5076": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5077": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1404"
    },
    "5080": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5081": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5082": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5083": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5084": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5085": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5086": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5088": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5089": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5091": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5093": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5094": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5095": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5096": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5097": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5098": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5099": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5100": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5101": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5103": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5104": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5105": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5107": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5108": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5109": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5110": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "GT",
      "path": "5"
    },
    "5111": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E7"
    },
    "5114": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5115": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5116": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5117": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SUB",
      "path": "5"
    },
    "5118": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5120": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5121": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5122": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5123": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5124": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5125": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5126": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5127": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5128": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5129": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5130": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5131": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5132": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5133": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5134": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "5135": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5137": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8806,
        8813
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5139": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8806,
        8813
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5140": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 4,
      "value": "0x6"
    },
    "5142": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5145": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "AND",
      "path": "25"
    },
    "5146": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8845
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5148": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5149": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "GT",
      "path": "25"
    },
    "5150": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1424"
    },
    "5154": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5155": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5156": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5157": {
      "branch": 223,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8833,
        8865
      ],
      "op": "EQ",
      "path": "25"
    },
    "5158": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x142E"
    },
    "5161": {
      "branch": 223,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5162": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5164": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5165": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5166": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8825,
        8866
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5167": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5169": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8938
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 5
    },
    "5170": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8938
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5171": {
      "branch": 224,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8926,
        8961
      ],
      "op": "LT",
      "path": "25"
    },
    "5172": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x143C"
    },
    "5175": {
      "branch": 224,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5176": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5178": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5179": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5180": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8918,
        8962
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5181": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9038,
        9052
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 6,
      "value": "0xE"
    },
    "5183": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9038,
        9052
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5184": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9034
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "5185": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9052
      ],
      "op": "LT",
      "path": "25"
    },
    "5186": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9025,
        9052
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5187": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x144B"
    },
    "5190": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5191": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5193": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5194": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5195": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9017,
        9053
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5196": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9134,
        9135
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 7,
      "value": "0x0"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5204": {
      "op": "SHL"
    },
    "5205": {
      "op": "SUB"
    },
    "5206": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "AND",
      "path": "25"
    },
    "5207": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9112
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "5209": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9113,
        9121
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5210": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9113,
        9121
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5211": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5213": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5214": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5215": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5216": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5217": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5218": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5219": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5220": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5221": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5222": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5223": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5224": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "ADD",
      "path": "25"
    },
    "5225": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5226": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5227": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5232": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5233": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5234": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5235": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5236": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SUB",
      "path": "25"
    },
    "5237": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5239": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "ADD",
      "path": "25"
    },
    "5240": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5241": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5242": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5243": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "op": "SUB"
    },
    "5252": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9122
      ],
      "op": "AND",
      "path": "25"
    },
    "5253": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5254": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5255": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5256": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "EQ",
      "path": "25"
    },
    "5257": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5258": {
      "branch": 226,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9101,
        9136
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5259": {
      "op": "POP"
    },
    "5260": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1496"
    },
    "5263": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5264": {
      "op": "POP"
    },
    "5265": {
      "branch": 226,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5266": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5268": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5269": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5270": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9093,
        9137
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5271": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9283
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5273": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9283
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5274": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5276": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9268
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5277": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x14A7"
    },
    "5280": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5281": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9288,
        9289
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5283": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9287
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "5286": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9271,
        9290
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5287": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9271,
        9290
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5288": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9340,
        9341
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 8,
      "value": "0x0"
    },
    "5290": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5291": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5292": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5293": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9319
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "5295": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5297": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5298": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5300": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5301": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5302": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5303": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9290
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5304": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9253,
        9290
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5305": {
      "op": "POP"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5312": {
      "op": "SHL"
    },
    "5313": {
      "op": "SUB"
    },
    "5314": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9328
      ],
      "op": "AND",
      "path": "25"
    },
    "5315": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9307,
        9342
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5316": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x14C9"
    },
    "5319": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5320": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5321": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9300,
        9343
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5322": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 9,
      "value": "0x0"
    },
    "5324": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5325": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5326": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5327": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9414
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "5329": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5331": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5332": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5334": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5335": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9423
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5336": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5337": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5339": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9429
      ],
      "op": "AND",
      "path": "25"
    },
    "5340": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9401,
        9438
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5341": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x14E2"
    },
    "5344": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5345": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "INVALID",
      "path": "25"
    },
    "5346": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9394,
        9439
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5347": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9549,
        9569
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5349": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9638
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 10,
      "value": "0x10"
    },
    "5351": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9639,
        9647
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5352": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9639,
        9647
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5353": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5355": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5356": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5357": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5358": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5359": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5360": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5361": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5362": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5363": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5364": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5365": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5366": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "ADD",
      "path": "25"
    },
    "5367": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5368": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5369": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5370": {
      "op": "POP"
    },
    "5371": {
      "op": "POP"
    },
    "5372": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5374": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5375": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5376": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5377": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5378": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5379": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SUB",
      "path": "25"
    },
    "5380": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5382": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "ADD",
      "path": "25"
    },
    "5383": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5384": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5385": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5386": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5395": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5396": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5397": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5404": {
      "op": "SHL"
    },
    "5405": {
      "op": "SUB"
    },
    "5406": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5407": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5408": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "AND",
      "path": "25"
    },
    "5409": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5410": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9665
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFEAF968C"
    },
    "5415": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9665
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "5419": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5420": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5421": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5422": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "5426": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5427": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5428": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5429": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5430": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SUB",
      "path": "25"
    },
    "5431": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5432": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5433": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9627,
        9648
      ],
      "op": "DUP7",
      "path": "25"
    },
    "5434": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5435": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "5436": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5437": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5438": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5439": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1547"
    },
    "5442": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5443": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5445": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5446": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5447": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5448": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5449": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "GAS",
      "path": "25"
    },
    "5450": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "5451": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5452": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5453": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5454": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x155B"
    },
    "5457": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5458": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5459": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5461": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5462": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "5463": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5464": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5466": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5467": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5468": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5469": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5470": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5471": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "POP",
      "path": "25"
    },
    "5472": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5474": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5475": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "5476": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "5478": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5479": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "LT",
      "path": "25"
    },
    "5480": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5481": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1571"
    },
    "5484": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5485": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5487": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5488": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5489": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5493": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "ADD",
      "path": "25"
    },
    "5494": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5495": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9605,
        9667
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1580"
    },
    "5500": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D23"
    },
    "5503": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9713,
        9737
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5504": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9713,
        9737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5505": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9761,
        9765
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 11,
      "value": "0x1"
    },
    "5507": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9747,
        9765
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5508": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9747,
        9765
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5509": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 12,
      "value": "0x20"
    },
    "5511": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5512": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5513": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9787
      ],
      "op": "ADD",
      "path": "25"
    },
    "5514": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "DUP10",
      "path": "25"
    },
    "5515": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5516": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9775,
        9796
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5517": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 13,
      "value": "0x40"
    },
    "5519": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5520": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5521": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9819
      ],
      "op": "ADD",
      "path": "25"
    },
    "5522": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "DUP10",
      "path": "25"
    },
    "5523": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5524": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9806,
        9829
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5525": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 14
    },
    "5526": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5527": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "5529": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP9",
      "path": "25"
    },
    "5530": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5531": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5532": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5533": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DIV",
      "path": "25"
    },
    "5534": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5535": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MUL",
      "path": "25"
    },
    "5536": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5537": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5538": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5539": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5540": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5541": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5542": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5543": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP7",
      "path": "25"
    },
    "5544": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5545": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5546": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5547": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5548": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5549": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5550": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5551": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5552": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5553": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5554": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5555": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5556": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5557": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5558": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5559": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5560": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "5561": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5563": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5564": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "ADD",
      "path": "25"
    },
    "5565": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5566": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5567": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5568": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5569": {
      "op": "POP"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5575": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5576": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9853
      ],
      "op": "ADD",
      "path": "25"
    },
    "5577": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9839,
        9864
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5578": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 15,
      "value": "0x80"
    },
    "5580": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5581": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9893
      ],
      "op": "ADD",
      "path": "25"
    },
    "5582": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5583": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5584": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9874,
        9909
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5585": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 16,
      "value": "0x15F3"
    },
    "5588": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9962
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15DB"
    },
    "5591": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9960
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "5594": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9950,
        9962
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5595": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9950,
        9962
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5596": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9964,
        9971
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5597": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9973,
        9974
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5599": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5601": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5602": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5603": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5605": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "ADD",
      "path": "25"
    },
    "5606": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5608": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5609": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5610": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5612": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5613": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5614": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "POP",
      "path": "25"
    },
    "5615": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9949
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BE"
    },
    "5618": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9944,
        9979
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5619": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9944,
        9979
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5620": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10109
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 17,
      "value": "0x15FB"
    },
    "5623": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10107
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "5626": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10097,
        10109
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5627": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10097,
        10109
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5628": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5630": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5631": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5632": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5633": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10085
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "5635": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5637": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5638": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5639": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5640": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5642": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5643": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5644": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10094
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5645": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5646": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5653": {
      "op": "SHL"
    },
    "5654": {
      "op": "SUB"
    },
    "5655": {
      "op": "NOT"
    },
    "5656": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "AND",
      "path": "25"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5663": {
      "op": "SHL"
    },
    "5664": {
      "op": "SUB"
    },
    "5665": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5666": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5667": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5668": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "AND",
      "path": "25"
    },
    "5669": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5670": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5671": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5672": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "OR",
      "path": "25"
    },
    "5673": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5674": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5675": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10073,
        10109
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5676": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10132
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 18,
      "value": "0x9"
    },
    "5678": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5679": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5680": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5681": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5682": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5683": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5684": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5685": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5686": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5687": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5690": {
      "op": "NOT"
    },
    "5691": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "AND",
      "path": "25"
    },
    "5692": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5693": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5694": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5695": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "OR",
      "path": "25"
    },
    "5696": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5697": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5698": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5699": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5700": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5701": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5705": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5706": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5707": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5708": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5709": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5710": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5711": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "5713": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5714": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5715": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5716": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5718": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5719": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5720": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5721": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5722": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5723": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5724": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "5725": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10141
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5726": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x166E"
    },
    "5729": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5730": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "5732": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5733": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5734": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5735": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5736": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5737": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5738": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D54"
    },
    "5741": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5742": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5743": {
      "op": "POP"
    },
    "5744": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "5746": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5747": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5748": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5749": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5750": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5751": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "5753": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5754": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5755": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "ADD",
      "path": "25"
    },
    "5756": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10119,
        10149
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5757": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10222
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 19,
      "value": "0x7"
    },
    "5759": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10222
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5760": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x168A"
    },
    "5763": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5764": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10227,
        10228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5766": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10226
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "5769": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10210,
        10229
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5770": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10210,
        10229
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5771": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10195,
        10207
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5773": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10195,
        10229
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "5774": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10294,
        10308
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 20,
      "value": "0xE"
    },
    "5776": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10294,
        10308
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5777": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1699"
    },
    "5780": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5781": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10293
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35C6"
    },
    "5784": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10280,
        10309
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5785": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10280,
        10309
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5786": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH32",
      "path": "25",
      "statement": 21,
      "value": "0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1"
    },
    "5819": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10343,
        10350
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5820": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10364
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x16C3"
    },
    "5823": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10362
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "5826": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10352,
        10364
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5827": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10352,
        10364
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5828": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5830": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5831": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5832": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "5833": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5834": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5844": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5845": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "AND",
      "path": "25"
    },
    "5846": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5848": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5849": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "ADD",
      "path": "25"
    },
    "5850": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5851": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5852": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5853": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5854": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5855": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5856": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SUB",
      "path": "25"
    },
    "5857": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "ADD",
      "path": "25"
    },
    "5858": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5859": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10325,
        10365
      ],
      "op": "LOG1",
      "path": "25"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10383,
        10390
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 22
    },
    "5862": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10383,
        10390
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "5863": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8657,
        10397
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "POP"
    },
    "5866": {
      "op": "POP"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "o",
      "offset": [
        8657,
        10397
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5871": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5872": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23667
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5874": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23681,
        23688
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5875": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23702,
        23709
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5877": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23723,
        23736
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "5879": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23750,
        23756
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5881": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23624,
        23631
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5882": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5884": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5885": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "5886": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5887": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5888": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x170A"
    },
    "5891": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5892": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "5893": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "5895": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5896": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "5897": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5898": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5899": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1713"
    },
    "5902": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "5903": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5905": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5906": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "5907": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5908": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23811
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x171B"
    },
    "5911": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23811
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D23"
    },
    "5914": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23781,
        23811
      ],
      "op": "JUMP",
      "path": "25"
    },
    "5915": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23811
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "5916": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "5918": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "DUP9",
      "path": "25"
    },
    "5919": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5920": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5921": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23827
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "5923": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "5925": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5926": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5927": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5928": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "5930": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5931": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5932": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5933": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "5934": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5935": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5936": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "5938": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5939": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5940": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5941": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5942": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5943": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5944": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "5946": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "AND",
      "path": "25"
    },
    "5947": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5948": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5949": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "5950": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5951": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "5953": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5954": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5955": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5956": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5957": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5958": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP6",
      "path": "25"
    },
    "5959": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5960": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5961": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "5963": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5964": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5965": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5966": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5967": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "5968": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5969": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5970": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5971": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "5973": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP5",
      "path": "25"
    },
    "5974": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5975": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "5976": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "5977": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP8",
      "path": "25"
    },
    "5978": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "5979": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "5982": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5983": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "5984": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "AND",
      "path": "25"
    },
    "5985": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "5986": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5987": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5988": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "5989": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MUL",
      "path": "25"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5992": {
      "op": "NOT"
    },
    "5993": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "5994": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "AND",
      "path": "25"
    },
    "5995": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5996": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "5997": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "5998": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DIV",
      "path": "25"
    },
    "5999": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6001": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6002": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6003": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6004": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6005": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DIV",
      "path": "25"
    },
    "6006": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6007": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MUL",
      "path": "25"
    },
    "6008": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6009": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6010": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6011": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6012": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6013": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "6014": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6015": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6016": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6017": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6018": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6019": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6020": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6021": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23814,
        23836
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6022": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6024": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6025": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6026": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6027": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6028": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6029": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6030": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6031": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6032": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6033": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6034": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6035": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6036": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "6037": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17DF"
    },
    "6040": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6041": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6042": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6044": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "LT",
      "path": "25"
    },
    "6045": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17B4"
    },
    "6048": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6049": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "6052": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6053": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6054": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6055": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DIV",
      "path": "25"
    },
    "6056": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MUL",
      "path": "25"
    },
    "6057": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6058": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6059": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6060": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6062": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6063": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6064": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17DF"
    },
    "6067": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6068": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6069": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6070": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6071": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6072": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6073": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6075": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6076": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6078": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6080": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6081": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6082": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6083": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6084": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6085": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6086": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6087": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6088": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6090": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6091": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6092": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6094": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6095": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6096": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6097": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "GT",
      "path": "25"
    },
    "6098": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17C2"
    },
    "6101": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6102": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6103": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6104": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SUB",
      "path": "25"
    },
    "6105": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "6107": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "AND",
      "path": "25"
    },
    "6108": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6109": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6110": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6111": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "op": "POP"
    },
    "6115": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6116": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6117": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6118": {
      "op": "POP"
    },
    "6119": {
      "op": "POP"
    },
    "6120": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "6122": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6123": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6124": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6125": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6126": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6127": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6129": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6130": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6131": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "ADD",
      "path": "25"
    },
    "6132": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23781,
        23836
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6133": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23867,
        23884
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 23
    },
    "6134": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23867,
        23884
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6135": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6136": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6137": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "ADD",
      "path": "25"
    },
    "6138": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6139": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23930,
        23949
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6141": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23930,
        23949
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6142": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23930,
        23949
      ],
      "op": "ADD",
      "path": "25"
    },
    "6143": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23930,
        23949
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6144": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6146": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6147": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "ADD",
      "path": "25"
    },
    "6148": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6149": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "6151": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6152": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6153": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "ADD",
      "path": "25"
    },
    "6154": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6155": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23867,
        23884
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6156": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23867,
        23884
      ],
      "op": "SWAP13",
      "path": "25"
    },
    "6157": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6158": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23898,
        23916
      ],
      "op": "SWAP12",
      "path": "25"
    },
    "6159": {
      "op": "POP"
    },
    "6160": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23930,
        23949
      ],
      "op": "SWAP10",
      "path": "25"
    },
    "6161": {
      "op": "POP"
    },
    "6162": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6163": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23963,
        23983
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23997,
        24022
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "6166": {
      "op": "POP"
    },
    "6167": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23507,
        24039
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6168": {
      "op": "POP"
    },
    "6169": {
      "op": "POP"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "o",
      "offset": [
        23507,
        24039
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6173": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6174": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6176": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 24
    },
    "6177": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6178": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6179": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6181": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6182": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6183": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6184": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6186": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6187": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6188": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6190": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "6191": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6192": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6193": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6194": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6195": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27903,
        27910
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6197": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27940
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 25,
      "value": "0x10"
    },
    "6199": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27941,
        27949
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6200": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27941,
        27949
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6201": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6203": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6204": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6205": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6206": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6207": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6208": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6209": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6210": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "6211": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6212": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6213": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6214": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "ADD",
      "path": "25"
    },
    "6215": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "6216": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6217": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6218": {
      "op": "POP"
    },
    "6219": {
      "op": "POP"
    },
    "6220": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6222": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6223": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6224": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6225": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6226": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SUB",
      "path": "25"
    },
    "6227": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6229": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "ADD",
      "path": "25"
    },
    "6230": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6231": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6232": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6233": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "AND",
      "path": "25"
    },
    "6243": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27929,
        27950
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "op": "POP"
    },
    "6246": {
      "op": "POP"
    },
    "6247": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6248": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6249": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "POP",
      "path": "25"
    },
    "6250": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27813,
        27957
      ],
      "op": "POP",
      "path": "25"
    },
    "6251": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "o",
      "offset": [
        27813,
        27957
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6252": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6253": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29225,
        29242
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "6255": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29252,
        29319
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 26,
      "value": "0x187C"
    },
    "6258": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29269,
        29279
      ],
      "op": "CALLER",
      "path": "25"
    },
    "6259": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29281,
        29283
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6260": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6262": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29306,
        29312
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6263": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29314,
        29318
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6264": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29252,
        29268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FF9"
    },
    "6267": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "i",
      "offset": [
        29252,
        29319
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6268": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29252,
        29319
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6269": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "POP",
      "path": "25"
    },
    "6270": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "POP",
      "path": "25"
    },
    "6271": {
      "fn": "CryptoChampions.transferInGameTokens",
      "offset": [
        29139,
        29326
      ],
      "op": "POP",
      "path": "25"
    },
    "6272": {
      "fn": "CryptoChampions.transferInGameTokens",
      "jump": "o",
      "offset": [
        29139,
        29326
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6273": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6274": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19822,
        19828
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6275": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "6277": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6278": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "6279": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x188F"
    },
    "6282": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6283": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6285": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6286": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6287": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6288": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6290": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6291": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6292": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6293": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6295": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6297": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6298": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6300": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6301": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6302": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6303": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "6305": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "6306": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18AA"
    },
    "6309": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6310": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6312": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6313": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6314": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6315": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 27,
      "value": "0x0"
    },
    "6317": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6318": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6319": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6320": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19855
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6322": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6324": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6325": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6327": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6328": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19863
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6329": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19869
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6330": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19869
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "6332": {
      "branch": 227,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19848,
        19869
      ],
      "op": "AND",
      "path": "25"
    },
    "6333": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18C5"
    },
    "6336": {
      "branch": 227,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6337": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6339": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6340": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6341": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19840,
        19870
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6342": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        19969
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 28,
      "value": "0x18CD"
    },
    "6345": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        19967
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "6348": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19957,
        19969
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6349": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19957,
        19969
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6350": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6352": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6353": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6354": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6355": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19945
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6357": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6359": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6360": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6362": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6363": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6364": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6371": {
      "op": "SHL"
    },
    "6372": {
      "op": "SUB"
    },
    "6373": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6374": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6375": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19953
      ],
      "op": "AND",
      "path": "25"
    },
    "6376": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19969
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6377": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19969
      ],
      "op": "AND",
      "path": "25"
    },
    "6378": {
      "branch": 228,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19934,
        19969
      ],
      "op": "EQ",
      "path": "25"
    },
    "6379": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18F3"
    },
    "6382": {
      "branch": 228,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "6383": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6385": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6386": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "REVERT",
      "path": "25"
    },
    "6387": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19926,
        19970
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6388": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 29,
      "value": "0x0"
    },
    "6390": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6391": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6392": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6393": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20042
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6395": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6397": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6398": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6400": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6401": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6402": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6403": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20025,
        20062
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1917"
    },
    "6406": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20025,
        20062
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6413": {
      "op": "SHL"
    },
    "6414": {
      "op": "SUB"
    },
    "6415": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "AND",
      "path": "25"
    },
    "6416": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20043,
        20049
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6417": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20031,
        20050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6419": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20025,
        20030
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3637"
    },
    "6422": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        20025,
        20062
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6423": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20025,
        20062
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6424": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20136,
        20151
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6426": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6427": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6428": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6429": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "6431": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6433": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6434": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6435": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6436": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6438": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6439": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6440": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20169
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6441": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20177
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "6443": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20177
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6444": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20177
      ],
      "op": "ADD",
      "path": "25"
    },
    "6445": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20154,
        20177
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6446": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20207,
        20234
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "6448": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20207,
        20234
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6449": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20207,
        20234
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6450": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20207,
        20234
      ],
      "op": "ADD",
      "path": "25"
    },
    "6451": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20207,
        20234
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6452": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 30
    },
    "6453": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6454": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6455": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20301
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "6457": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6458": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6459": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6460": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "DUP6",
      "path": "25"
    },
    "6461": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20312
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6462": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6463": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6464": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6465": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6466": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6467": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6468": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6469": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6470": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20321
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6471": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20328
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1951"
    },
    "6474": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20328
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6475": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20326,
        20327
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "6477": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20325
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x376A"
    },
    "6480": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        20284,
        20328
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6481": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20284,
        20328
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "6482": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "6484": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6485": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6486": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6487": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "6489": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "6491": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6492": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6493": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6494": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "6496": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6497": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6498": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20272
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6499": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6500": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "DUP5",
      "path": "25"
    },
    "6501": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6502": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6503": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6504": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6505": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "DUP4",
      "path": "25"
    },
    "6506": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20281
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6507": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20328
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6508": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20328
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6509": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20328
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "6510": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20244,
        20328
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6511": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "DUP7",
      "path": "25",
      "statement": 31
    },
    "6512": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6513": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6514": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20391
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "6516": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6517": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6518": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6519": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6520": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20399
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6521": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20412
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6522": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20412
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6529": {
      "op": "SHL"
    },
    "6530": {
      "op": "SUB"
    },
    "6531": {
      "op": "NOT"
    },
    "6532": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20412
      ],
      "op": "AND",
      "path": "25"
    },
    "6533": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20412
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6534": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20380,
        20412
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6535": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20429
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 32,
      "value": "0xC"
    },
    "6537": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6538": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6539": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6540": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "DUP3",
      "path": "25"
    },
    "6541": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6542": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20437
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "6543": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20451
      ],
      "op": "DUP1",
      "path": "25"
    },
    "6544": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20451
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6547": {
      "op": "NOT"
    },
    "6548": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20451
      ],
      "op": "AND",
      "path": "25"
    },
    "6549": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20451
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6550": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20422,
        20451
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "6551": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 33
    },
    "6552": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6553": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "DUP7",
      "path": "25"
    },
    "6554": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6555": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "6556": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6557": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "6558": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997"
    },
    "6591": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "6592": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "DUP2",
      "path": "25"
    },
    "6593": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6594": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SUB",
      "path": "25"
    },
    "6595": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6596": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "6597": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "ADD",
      "path": "25"
    },
    "6598": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "6599": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20467,
        20485
      ],
      "op": "LOG1",
      "path": "25"
    },
    "6600": {
      "offset": [
        6052,
        6053
      ],
      "op": "POP",
      "path": "25"
    },
    "6601": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        6052,
        6053
      ],
      "op": "POP",
      "path": "25"
    },
    "6602": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "POP",
      "path": "25"
    },
    "6603": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19758,
        20492
      ],
      "op": "POP",
      "path": "25"
    },
    "6604": {
      "fn": "CryptoChampions.burnHero",
      "jump": "o",
      "offset": [
        19758,
        20492
      ],
      "op": "JUMP",
      "path": "25"
    },
    "6605": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6606": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5795
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 34
    },
    "6607": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5802
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6608": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5777
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6609": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6610": {
      "branch": 256,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5802
      ],
      "op": "EQ",
      "path": "5"
    },
    "6611": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A0D"
    },
    "6614": {
      "branch": 256,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6615": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6617": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6624": {
      "op": "SHL"
    },
    "6625": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6626": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6627": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6629": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6630": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6631": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6632": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6634": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6635": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6636": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6637": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6638": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6639": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6640": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6642": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6643": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6644": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6646": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6647": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6648": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x526A"
    },
    "6651": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6653": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6654": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6655": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6657": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6658": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6661": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6663": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6664": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6667": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6676": {
      "op": "SHL"
    },
    "6677": {
      "op": "SUB"
    },
    "6678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 35
    },
    "6679": {
      "branch": 257,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "AND",
      "path": "5"
    },
    "6680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A52"
    },
    "6683": {
      "branch": 257,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6684": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6686": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6693": {
      "op": "SHL"
    },
    "6694": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6695": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6696": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6698": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6700": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6701": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6706": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6707": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6708": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6713": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6717": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5133"
    },
    "6720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6722": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6723": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6724": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6727": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6728": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6729": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6730": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6732": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6735": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0x1A5A"
    },
    "6742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "6745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "SUB"
    },
    "6755": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6756": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5958
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6763": {
      "op": "SHL"
    },
    "6764": {
      "op": "SUB"
    },
    "6765": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6766": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "EQ",
      "path": "5"
    },
    "6767": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A85"
    },
    "6771": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6772": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "POP",
      "path": "5"
    },
    "6773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A85"
    },
    "6776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5995,
        5999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A80"
    },
    "6780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6011
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "6783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        5994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FCB"
    },
    "6788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6789": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC0"
    },
    "6793": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6803": {
      "op": "SHL"
    },
    "6804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6805": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6814": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6815": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6819": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5158"
    },
    "6830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6837": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6840": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6842": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6843": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6845": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6851": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ACA"
    },
    "6854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "6857": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "POP",
      "path": "5"
    },
    "6861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 37,
      "value": "0x1ADA"
    },
    "6864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6164,
        6172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6174,
        6178
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6180,
        6182
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6184,
        6187
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6189,
        6196
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6869": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6198,
        6202
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C7"
    },
    "6873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6219,
        6228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6241
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6880": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6248
      ],
      "op": "LT",
      "path": "5"
    },
    "6882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6883": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BE0"
    },
    "6886": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6887": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6889": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6285
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6890": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6286,
        6287
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6891": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6894": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "LT",
      "path": "5"
    },
    "6895": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF4"
    },
    "6898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6899": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6901": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MUL",
      "path": "5"
    },
    "6904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "POP",
      "path": "5"
    },
    "6911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6326
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6327,
        6328
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6918": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "LT",
      "path": "5"
    },
    "6919": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B0C"
    },
    "6922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6923": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MUL",
      "path": "5"
    },
    "6928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6930": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6933": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6934": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "POP",
      "path": "5"
    },
    "6935": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 38,
      "value": "0x1B79"
    },
    "6938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6407,
        6413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6941": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6943": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6945": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51CD"
    },
    "6960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6376,
        6378
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6970": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6985": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6380,
        6384
      ],
      "op": "DUP14",
      "path": "5"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6992": {
      "op": "SHL"
    },
    "6993": {
      "op": "SUB"
    },
    "6994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7001": {
      "op": "SHL"
    },
    "7002": {
      "op": "SUB"
    },
    "7003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "7004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7006": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "7009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "7015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38D9"
    },
    "7022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "7031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "AND",
      "path": "5"
    },
    "7032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7033": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7038": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7049": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7057": {
      "op": "SHL"
    },
    "7058": {
      "op": "SUB"
    },
    "7059": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP15",
      "path": "5"
    },
    "7060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7061": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "AND",
      "path": "5"
    },
    "7062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7065": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7066": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7071": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7072": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7073": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP11",
      "path": "5",
      "statement": 39
    },
    "7074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "AND",
      "path": "5"
    },
    "7075": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7076": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7077": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7079": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BB0"
    },
    "7082": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7083": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6545,
        6551
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7084": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3460"
    },
    "7087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7089": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7091": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7092": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7093": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7094": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7096": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7098": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7099": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7101": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7103": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7104": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7105": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7112": {
      "op": "SHL"
    },
    "7113": {
      "op": "SUB"
    },
    "7114": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP13",
      "path": "5"
    },
    "7115": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "5"
    },
    "7116": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7117": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7118": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7119": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7120": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7121": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7122": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7123": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7124": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7126": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 40,
      "value": "0x1"
    },
    "7131": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "ADD",
      "path": "5"
    },
    "7132": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ADD"
    },
    "7135": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7136": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7137": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "POP",
      "path": "5"
    },
    "7138": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6608,
        6610
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 41
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7145": {
      "op": "SHL"
    },
    "7146": {
      "op": "SUB"
    },
    "7147": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7148": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6602,
        6606
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7155": {
      "op": "SHL"
    },
    "7156": {
      "op": "SUB"
    },
    "7157": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7158": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6592,
        6600
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7165": {
      "op": "SHL"
    },
    "7166": {
      "op": "SUB"
    },
    "7167": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7168": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "7201": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6612,
        6615
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7202": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6617,
        6624
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7203": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7205": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7206": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7207": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7208": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7210": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7211": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7212": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7214": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7215": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7216": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7217": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7218": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7219": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7220": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7222": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7224": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7229": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7231": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7233": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7234": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7236": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7238": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7240": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7241": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7243": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7250": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7251": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C66"
    },
    "7254": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7256": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7257": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7261": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7262": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7266": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C4E"
    },
    "7269": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7270": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7271": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7272": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7273": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7274": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7275": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7276": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7277": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7278": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7279": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7280": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7281": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7283": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7284": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7286": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7287": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7288": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7289": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7291": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7292": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7293": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7294": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7296": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7297": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7299": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7300": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7301": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7303": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7305": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7306": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7307": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7309": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7310": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7311": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7313": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7314": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CA5"
    },
    "7317": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7319": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7320": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7321": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7322": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7323": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7324": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7325": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7326": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7328": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7329": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8D"
    },
    "7332": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7333": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7334": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7335": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7336": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7337": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7338": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7339": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7340": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7341": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7342": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7343": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7345": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7346": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7347": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7349": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7350": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7351": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7352": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7353": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7354": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7355": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 42,
      "value": "0x1CC8"
    },
    "7358": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6672,
        6680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7359": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6682,
        6686
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7360": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6688,
        6690
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7361": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6692,
        6695
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7362": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6697,
        6704
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7363": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6706,
        6710
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3970"
    },
    "7367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7368": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7371": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7372": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7373": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7374": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7375": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7376": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7377": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24334,
        24338
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7379": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24361,
        24374
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "7381": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24400,
        24406
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7383": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24438,
        24445
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7384": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24475,
        24482
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7386": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24296,
        24302
      ],
      "op": "DUP6",
      "path": "25"
    },
    "7387": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "7389": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7390": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "7391": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1CE7"
    },
    "7394": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7395": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7397": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7398": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7399": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7400": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7402": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7403": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7404": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7405": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7407": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7409": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7410": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7412": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7413": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7414": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7415": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7417": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "7418": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D02"
    },
    "7421": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7422": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7424": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7425": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7426": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7427": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 43,
      "value": "0x0"
    },
    "7429": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7430": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7431": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7432": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24547
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7434": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7436": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7437": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7438": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7439": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7441": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7442": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7443": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7444": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24555
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7445": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7446": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7447": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "7449": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7450": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "ADD",
      "path": "25"
    },
    "7451": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7452": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7454": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7455": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "ADD",
      "path": "25"
    },
    "7456": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7457": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "7459": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7460": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "ADD",
      "path": "25"
    },
    "7461": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7462": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "7464": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7465": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "DUP6",
      "path": "25"
    },
    "7466": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "ADD",
      "path": "25"
    },
    "7467": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7468": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7469": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7470": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7471": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7474": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7476": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7477": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "AND",
      "path": "25"
    },
    "7478": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7479": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MUL",
      "path": "25"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7482": {
      "op": "NOT"
    },
    "7483": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7484": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7485": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7486": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "AND",
      "path": "25"
    },
    "7487": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7488": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7489": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7490": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DIV",
      "path": "25"
    },
    "7491": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7493": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7494": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7495": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7496": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7497": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DIV",
      "path": "25"
    },
    "7498": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7499": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MUL",
      "path": "25"
    },
    "7500": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7501": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7502": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP9",
      "path": "25"
    },
    "7503": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7504": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7505": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP9",
      "path": "25"
    },
    "7506": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7507": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7508": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7509": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7510": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7512": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7513": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7514": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "AND",
      "path": "25"
    },
    "7515": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24540,
        24561
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "7516": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7517": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7518": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7519": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24613,
        24642
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7520": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7521": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24656,
        24683
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7522": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7523": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24697,
        24720
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7524": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7525": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7526": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7527": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7528": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7529": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24575,
        24599
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7530": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7531": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7532": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7533": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DB7"
    },
    "7536": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7537": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7538": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7540": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "LT",
      "path": "25"
    },
    "7541": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D8C"
    },
    "7544": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7545": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7548": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7549": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7550": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7551": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DIV",
      "path": "25"
    },
    "7552": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MUL",
      "path": "25"
    },
    "7553": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7554": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7555": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7556": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7558": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7559": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7560": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DB7"
    },
    "7563": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7564": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7565": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7566": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7567": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7568": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7569": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7571": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7572": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7574": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7576": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7577": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7578": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7579": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7580": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7581": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7582": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7583": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7584": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7586": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7587": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7588": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7590": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7591": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7592": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7593": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "GT",
      "path": "25"
    },
    "7594": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D9A"
    },
    "7597": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7598": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7599": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7600": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SUB",
      "path": "25"
    },
    "7601": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7603": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "AND",
      "path": "25"
    },
    "7604": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7605": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "ADD",
      "path": "25"
    },
    "7606": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7607": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7608": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7609": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7610": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7611": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7612": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7613": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7614": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7615": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7616": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7617": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7618": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7619": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7620": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7621": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7622": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7623": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7624": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24519,
        24730
      ],
      "op": "POP",
      "path": "25"
    },
    "7625": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "POP",
      "path": "25"
    },
    "7626": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7627": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7628": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7629": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7630": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7631": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7632": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24188,
        24737
      ],
      "op": "POP",
      "path": "25"
    },
    "7633": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "o",
      "offset": [
        24188,
        24737
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7634": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7635": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DE9"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7640": {
      "op": "DUP1"
    },
    "7641": {
      "op": "MLOAD"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7644": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "7647": {
      "op": "DUP4"
    },
    "7648": {
      "op": "CODECOPY"
    },
    "7649": {
      "op": "DUP2"
    },
    "7650": {
      "op": "MLOAD"
    },
    "7651": {
      "op": "SWAP2"
    },
    "7652": {
      "op": "MSTORE"
    },
    "7653": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "7656": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7657": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7658": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "POP",
      "path": "25"
    },
    "7659": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18319,
        18407
      ],
      "op": "POP",
      "path": "25"
    },
    "7660": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "o",
      "offset": [
        18319,
        18407
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7661": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7662": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x0"
    },
    "7664": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7665": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7666": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7667": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7669": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7670": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7671": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7672": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7674": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7675": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7676": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7678": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "7679": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7680": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E10"
    },
    "7683": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7684": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0B"
    },
    "7687": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34BA"
    },
    "7690": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7691": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7692": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BBE"
    },
    "7695": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7696": {
      "branch": 250,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7697": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "7700": {
      "branch": 250,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7701": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7703": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7710": {
      "op": "SHL"
    },
    "7711": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7712": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7713": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7715": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7716": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7717": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7718": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7720": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7721": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7722": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7723": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7724": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7725": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7726": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7728": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7729": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7730": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7732": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7733": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7734": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x505C"
    },
    "7737": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7739": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7740": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7741": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7743": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7744": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7745": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7746": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7747": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7749": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7750": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7751": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7752": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7753": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7754": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7755": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7756": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x1DE9"
    },
    "7759": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7760": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7761": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BF9"
    },
    "7764": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7765": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7766": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x1E5D"
    },
    "7769": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34BA"
    },
    "7772": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7773": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7780": {
      "op": "SHL"
    },
    "7781": {
      "op": "SUB"
    },
    "7782": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7783": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7790": {
      "op": "SHL"
    },
    "7791": {
      "op": "SUB"
    },
    "7792": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7793": {
      "branch": 251,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "7794": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EAC"
    },
    "7797": {
      "branch": 251,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7798": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7800": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7807": {
      "op": "SHL"
    },
    "7808": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7809": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7810": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7812": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7813": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7814": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7815": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7817": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7818": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7819": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7820": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7821": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7822": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7823": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7825": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7826": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7827": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7829": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7830": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7831": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52B3"
    },
    "7834": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7836": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7837": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7838": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7840": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7841": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7842": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7843": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7844": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7846": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7847": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7848": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7849": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7850": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7851": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7852": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7853": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x1DE9"
    },
    "7856": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7857": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7858": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C62"
    },
    "7861": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7862": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7863": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25011,
        25024
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "7865": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25046,
        25053
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7867": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25078,
        25085
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7868": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25111,
        25116
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7870": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24973,
        24979
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7871": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "7873": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7874": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "7875": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1ECB"
    },
    "7878": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7879": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7881": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7882": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7883": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7884": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7886": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7887": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7888": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7889": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7891": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7893": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7894": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7896": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7897": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7898": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7899": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "7901": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "7902": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1EE6"
    },
    "7905": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7906": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7908": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7909": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7910": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7911": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 48,
      "value": "0x0"
    },
    "7913": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7914": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7915": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7916": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25170
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "7918": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7920": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7921": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7922": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7923": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7925": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7926": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7927": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7928": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25178
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "7929": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "7931": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7932": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "ADD",
      "path": "25"
    },
    "7933": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7934": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "7936": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7937": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "ADD",
      "path": "25"
    },
    "7938": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7939": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "7941": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7942": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "ADD",
      "path": "25"
    },
    "7943": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7944": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7946": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "7947": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7948": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "ADD",
      "path": "25"
    },
    "7949": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7950": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "7951": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7952": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7953": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "7955": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7958": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "7959": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7960": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "AND",
      "path": "25"
    },
    "7961": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7962": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "7963": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7964": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "7965": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MUL",
      "path": "25"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7968": {
      "op": "NOT"
    },
    "7969": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "7970": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7971": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7972": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "AND",
      "path": "25"
    },
    "7973": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7974": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7975": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7976": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DIV",
      "path": "25"
    },
    "7977": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7979": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7980": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "7981": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7982": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7983": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DIV",
      "path": "25"
    },
    "7984": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7985": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MUL",
      "path": "25"
    },
    "7986": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7987": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "7988": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP8",
      "path": "25"
    },
    "7989": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "7990": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7991": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "7992": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7993": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP7",
      "path": "25"
    },
    "7994": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP6",
      "path": "25"
    },
    "7995": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7996": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "7997": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7998": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25185,
        25207
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "7999": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8000": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25209,
        25232
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8001": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8003": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8004": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8005": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "AND",
      "path": "25"
    },
    "8006": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25234,
        25260
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8007": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8008": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8009": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "DUP7",
      "path": "25"
    },
    "8010": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8011": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8012": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8013": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8014": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25163,
        25183
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8015": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8016": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8017": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8018": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F9C"
    },
    "8021": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8022": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8023": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8025": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "LT",
      "path": "25"
    },
    "8026": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F71"
    },
    "8029": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8030": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8033": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8034": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8035": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8036": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DIV",
      "path": "25"
    },
    "8037": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MUL",
      "path": "25"
    },
    "8038": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8039": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8040": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8041": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8043": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8044": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8045": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F9C"
    },
    "8048": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8049": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8050": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8051": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8052": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8053": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8054": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8056": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8057": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8059": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8061": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8062": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8063": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8064": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8065": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8066": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8067": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8068": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8069": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8071": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8072": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8073": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8075": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8076": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8077": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8078": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "GT",
      "path": "25"
    },
    "8079": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F7F"
    },
    "8082": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8083": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8084": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8085": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SUB",
      "path": "25"
    },
    "8086": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8088": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "AND",
      "path": "25"
    },
    "8089": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8090": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "ADD",
      "path": "25"
    },
    "8091": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8092": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8093": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8094": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8095": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8096": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8097": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8098": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8099": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8100": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8101": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8102": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8103": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8104": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8105": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8106": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "8107": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25155,
        25261
      ],
      "op": "POP",
      "path": "25"
    },
    "8108": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "8109": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8110": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8111": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "POP",
      "path": "25"
    },
    "8112": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8113": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24866,
        25268
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8114": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "o",
      "offset": [
        24866,
        25268
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8115": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8116": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26631,
        26636
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8118": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26659,
        26664
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8119": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26684,
        26689
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8121": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26711,
        26716
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8122": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26593,
        26599
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8123": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8125": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8126": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "8127": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FC7"
    },
    "8130": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8131": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8133": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8134": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8135": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8136": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8138": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8139": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8140": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8141": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8143": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8145": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8146": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8148": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8149": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8150": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8151": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8153": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "8154": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1FE2"
    },
    "8157": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8158": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8160": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8161": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8162": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8163": {
      "op": "POP"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "op": "POP"
    },
    "8166": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 49,
      "value": "0x0"
    },
    "8168": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8169": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8170": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8171": {
      "op": "POP"
    },
    "8172": {
      "op": "POP"
    },
    "8173": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8175": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8177": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8178": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8180": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8181": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26775
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8182": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "8184": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "ADD",
      "path": "25"
    },
    "8185": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8186": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "8192": {
      "op": "SHL"
    },
    "8193": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8194": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "DIV",
      "path": "25"
    },
    "8195": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8196": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "AND",
      "path": "25"
    },
    "8197": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26760,
        26781
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8202": {
      "op": "SHL"
    },
    "8203": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26783,
        26801
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8204": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26783,
        26801
      ],
      "op": "DIV",
      "path": "25"
    },
    "8205": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26783,
        26801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8206": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26783,
        26801
      ],
      "op": "AND",
      "path": "25"
    },
    "8207": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26783,
        26801
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "8212": {
      "op": "SHL"
    },
    "8213": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26803,
        26823
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8214": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26803,
        26823
      ],
      "op": "DIV",
      "path": "25"
    },
    "8215": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26803,
        26823
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8216": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26803,
        26823
      ],
      "op": "AND",
      "path": "25"
    },
    "8217": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26803,
        26823
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8222": {
      "op": "SHL"
    },
    "8223": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26825,
        26848
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8224": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26825,
        26848
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8225": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26825,
        26848
      ],
      "op": "DIV",
      "path": "25"
    },
    "8226": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26825,
        26848
      ],
      "op": "AND",
      "path": "25"
    },
    "8227": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26825,
        26848
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8228": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "o",
      "offset": [
        26487,
        26856
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8229": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11117,
        11124
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11091,
        11098
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8233": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8235": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8236": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "8237": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8238": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2039"
    },
    "8242": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8243": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "8244": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8246": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8247": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "8248": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8249": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8250": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2042"
    },
    "8253": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8254": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8256": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8257": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8258": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11164,
        11179
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 50,
      "value": "0x1"
    },
    "8261": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "8263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "AND",
      "path": "25"
    },
    "8267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11160
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8269": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "GT",
      "path": "25"
    },
    "8271": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8272": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2055"
    },
    "8275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8277": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8278": {
      "branch": 229,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11148,
        11179
      ],
      "op": "EQ",
      "path": "25"
    },
    "8279": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x205F"
    },
    "8282": {
      "branch": 229,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8283": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11140,
        11180
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 51,
      "value": "0x0"
    },
    "8290": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8291": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8292": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8293": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11249
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "8295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8297": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8298": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8301": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11258
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8305": {
      "branch": 230,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11236,
        11264
      ],
      "op": "AND",
      "path": "25"
    },
    "8306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x207A"
    },
    "8309": {
      "branch": 230,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8312": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8313": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8314": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11228,
        11265
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8315": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11356
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 52,
      "value": "0x2083"
    },
    "8318": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11348,
        11355
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11347
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3CCB"
    },
    "8322": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11335,
        11356
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8323": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11335,
        11356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8324": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x208C"
    },
    "8327": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8328": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8331": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11327,
        11357
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8335": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11486
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x209A"
    },
    "8338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11464,
        11476
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "8340": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11464,
        11476
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8341": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11478,
        11485
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11463
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x31C4"
    },
    "8345": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11447,
        11486
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8346": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11447,
        11486
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11486
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8348": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11427,
        11486
      ],
      "op": "POP",
      "path": "25"
    },
    "8349": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11517,
        11526
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 53
    },
    "8350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11513
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "8351": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11526
      ],
      "op": "LT",
      "path": "25"
    },
    "8352": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11504,
        11526
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20A9"
    },
    "8356": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8357": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8359": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8360": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11496,
        11527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8362": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11600,
        11614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8364": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8366": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20C3"
    },
    "8369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11634,
        11635
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11629
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "8373": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11629
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8374": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11633
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "8377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11633
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8378": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "8385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "AND",
      "path": "25"
    },
    "8386": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11617,
        11636
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11636
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8388": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "ADD",
      "path": "25"
    },
    "8389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11707,
        11708
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 54,
      "value": "0x0"
    },
    "8391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8392": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8393": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11687
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "8396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8405": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11617,
        11659
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8406": {
      "op": "POP"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8413": {
      "op": "SHL"
    },
    "8414": {
      "op": "SUB"
    },
    "8415": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11695
      ],
      "op": "AND",
      "path": "25"
    },
    "8416": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11676,
        11709
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8417": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20E6"
    },
    "8420": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8421": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11669,
        11710
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 55,
      "value": "0x0"
    },
    "8425": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8427": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8428": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11777
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8430": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11785
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11791
      ],
      "op": "AND",
      "path": "25"
    },
    "8441": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11770,
        11800
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x20FF"
    },
    "8445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "INVALID",
      "path": "25"
    },
    "8447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11763,
        11801
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8448": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2107"
    },
    "8451": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4DD2"
    },
    "8454": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11888,
        11904
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11888,
        11904
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11927,
        11931
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 56,
      "value": "0x1"
    },
    "8458": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11914,
        11931
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8459": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11914,
        11931
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 57,
      "value": "0x40"
    },
    "8462": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8464": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8469": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DIV",
      "path": "25"
    },
    "8473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MUL",
      "path": "25"
    },
    "8475": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8476": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8477": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8482": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP8",
      "path": "25"
    },
    "8483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8484": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP9",
      "path": "25"
    },
    "8487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP9",
      "path": "25"
    },
    "8489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8491": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8494": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8496": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8497": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11953,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8498": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "8500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8502": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8504": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "NOT",
      "path": "25"
    },
    "8509": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "AND",
      "path": "25"
    },
    "8514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8516": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "ADD",
      "path": "25"
    },
    "8519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8525": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8528": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8530": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11950
      ],
      "op": "ADD",
      "path": "25"
    },
    "8531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8533": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11941,
        11961
      ],
      "op": "POP",
      "path": "25"
    },
    "8535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11990,
        12002
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 58,
      "value": "0xF"
    },
    "8537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11990,
        12002
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8538": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11975
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8539": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11987
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "8541": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        11987
      ],
      "op": "ADD",
      "path": "25"
    },
    "8542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8543": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8544": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8545": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "POP",
      "path": "25"
    },
    "8546": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11971,
        12002
      ],
      "op": "POP",
      "path": "25"
    },
    "8547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12027,
        12034
      ],
      "op": "DUP8",
      "path": "25",
      "statement": 59
    },
    "8548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12016
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12024
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "8551": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12024
      ],
      "op": "ADD",
      "path": "25"
    },
    "8552": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8555": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "POP",
      "path": "25"
    },
    "8556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12012,
        12034
      ],
      "op": "POP",
      "path": "25"
    },
    "8557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12071
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 60,
      "value": "0x9"
    },
    "8559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8561": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12072,
        12079
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8562": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8563": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8566": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "ADD",
      "path": "25"
    },
    "8567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8570": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "ADD",
      "path": "25"
    },
    "8573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8575": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12080
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8576": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8578": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "ADD",
      "path": "25"
    },
    "8579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12058,
        12087
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8580": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12048
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8581": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12055
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "8583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12055
      ],
      "op": "ADD",
      "path": "25"
    },
    "8584": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8587": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "POP",
      "path": "25"
    },
    "8588": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12044,
        12087
      ],
      "op": "POP",
      "path": "25"
    },
    "8589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12125
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 61,
      "value": "0x9"
    },
    "8591": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12126,
        12133
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8595": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8596": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "ADD",
      "path": "25"
    },
    "8599": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8604": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "ADD",
      "path": "25"
    },
    "8605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12134
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8608": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "ADD",
      "path": "25"
    },
    "8611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12112,
        12142
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8612": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12101
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12109
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "8615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12109
      ],
      "op": "ADD",
      "path": "25"
    },
    "8616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8618": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "POP",
      "path": "25"
    },
    "8620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12097,
        12142
      ],
      "op": "POP",
      "path": "25"
    },
    "8621": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12181
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 62,
      "value": "0x9"
    },
    "8623": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12182,
        12189
      ],
      "op": "DUP10",
      "path": "25"
    },
    "8626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8628": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8630": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "ADD",
      "path": "25"
    },
    "8631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8634": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8636": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "ADD",
      "path": "25"
    },
    "8637": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8639": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12190
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "8642": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12168,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8643": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8644": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8645": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8647": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8648": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8652": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8656": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8657": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8658": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8663": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8665": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8668": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8669": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8670": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8671": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8675": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8677": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8684": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8685": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8686": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8688": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8689": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8693": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8696": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8700": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8702": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8703": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8710": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2256"
    },
    "8719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "LT",
      "path": "25"
    },
    "8724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x222B"
    },
    "8727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8732": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8733": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DIV",
      "path": "25"
    },
    "8735": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MUL",
      "path": "25"
    },
    "8736": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8739": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8742": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8743": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2256"
    },
    "8746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8752": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8761": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8773": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "GT",
      "path": "25"
    },
    "8777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2239"
    },
    "8780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SUB",
      "path": "25"
    },
    "8784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "8786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "AND",
      "path": "25"
    },
    "8787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "ADD",
      "path": "25"
    },
    "8789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8791": {
      "op": "POP"
    },
    "8792": {
      "op": "POP"
    },
    "8793": {
      "op": "POP"
    },
    "8794": {
      "op": "POP"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8800": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "ADD",
      "path": "25"
    },
    "8801": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12199
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8805": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 63,
      "value": "0x0"
    },
    "8807": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12216
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "8812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8816": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8819": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12224
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8820": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8826": {
      "op": "NOT"
    },
    "8827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "8828": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8829": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8831": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "8832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8834": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8836": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8838": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8841": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12152,
        12165
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "8842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x229A"
    },
    "8845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP6",
      "path": "25"
    },
    "8849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8852": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D54"
    },
    "8857": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8859": {
      "op": "POP"
    },
    "8860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8862": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x22B6"
    },
    "8870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "8873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP5",
      "path": "25"
    },
    "8874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8875": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8878": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8879": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8881": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4D54"
    },
    "8885": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8886": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "8888": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "8890": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8893": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "8896": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8898": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "8900": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8901": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8903": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "8906": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8907": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8908": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "8910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8911": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8912": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "8916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8917": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8918": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC0"
    },
    "8920": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8922": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8923": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "8926": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8927": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8928": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "8930": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8931": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8933": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8934": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "8936": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8937": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8938": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8941": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8942": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8943": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8944": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8945": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "8947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8950": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8953": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "8954": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8955": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8956": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8959": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "8960": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "8961": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "8962": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8963": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8964": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8966": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "8967": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "8968": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "8969": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8970": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "8971": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "8972": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x120"
    },
    "8975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8976": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8977": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8978": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8979": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "8981": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "8982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "8984": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "8987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "8988": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8989": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "8990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "8993": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "8994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "8995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "8996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8998": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9000": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9001": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9003": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9004": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9005": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x140"
    },
    "9009": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9010": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9011": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9013": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9015": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9016": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "9018": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9021": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9022": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9023": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9024": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9025": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9027": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9028": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9029": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9030": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9032": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9034": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9035": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9036": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9038": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9039": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9040": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x160"
    },
    "9043": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9044": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9045": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9046": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9047": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9049": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9050": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3"
    },
    "9052": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9055": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9058": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9059": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9061": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9062": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9063": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9064": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9066": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9070": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9071": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9072": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9073": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9074": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x180"
    },
    "9077": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9078": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9079": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9080": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9083": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9084": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "9086": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9089": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9091": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9092": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9093": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9095": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9097": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9098": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9100": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9102": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9103": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9104": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9105": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9106": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9107": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9108": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1A0"
    },
    "9111": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9112": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9113": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9114": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9115": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9117": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9118": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x5"
    },
    "9120": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9123": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9124": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9125": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9126": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9127": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9129": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9130": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9131": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9132": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9133": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9134": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9136": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9137": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9138": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9139": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9140": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9141": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9142": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1C0"
    },
    "9145": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9146": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9147": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9148": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9152": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x6"
    },
    "9154": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9157": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9158": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9160": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9161": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9163": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9164": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9166": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9167": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9168": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9170": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9171": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9172": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9175": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9176": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E0"
    },
    "9179": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9180": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9181": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9182": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9185": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "9188": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9192": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9194": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9195": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9197": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9198": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9199": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9201": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9202": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9204": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9206": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9207": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9209": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9210": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x200"
    },
    "9213": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9214": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9215": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9216": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9217": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9220": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9222": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9225": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9226": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9227": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9228": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9229": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9233": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9234": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9236": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9238": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9240": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9242": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9243": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9244": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x220"
    },
    "9247": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9248": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9249": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9250": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9251": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9253": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9254": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "9256": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9260": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9261": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9262": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9268": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9269": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9272": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9273": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9277": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9278": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x240"
    },
    "9281": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9282": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9283": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9284": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9290": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9293": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9294": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9296": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9297": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9299": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9301": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9307": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9309": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9311": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9312": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x260"
    },
    "9315": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9316": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9317": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9318": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9322": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "9324": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9327": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9328": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9329": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9331": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9335": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9336": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9340": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9341": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9343": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9344": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9345": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9346": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x280"
    },
    "9349": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9351": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9352": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9356": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "9358": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9362": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9365": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9367": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9368": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9370": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9372": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9374": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9375": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9376": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9378": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A0"
    },
    "9383": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9384": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9386": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9392": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9395": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9405": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9408": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9410": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9411": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9414": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C0"
    },
    "9417": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9418": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9419": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9420": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9421": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9424": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "9426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9430": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9431": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9439": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9444": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9448": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E0"
    },
    "9451": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9452": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9453": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9454": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9457": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9458": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "9460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9464": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9467": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9469": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9476": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9477": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9482": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x300"
    },
    "9485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9491": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "9494": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9497": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9498": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9499": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9501": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9504": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9507": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9510": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9516": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x320"
    },
    "9519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9520": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9525": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9526": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x11"
    },
    "9528": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9531": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9533": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9538": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9539": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9541": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9544": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9545": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9546": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9550": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x340"
    },
    "9553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9555": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "ADD",
      "path": "25"
    },
    "9560": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x12"
    },
    "9562": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "9565": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "EXP",
      "path": "25"
    },
    "9566": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9571": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "NOT",
      "path": "25"
    },
    "9573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9574": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9575": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9576": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "9578": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "AND",
      "path": "25"
    },
    "9579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "MUL",
      "path": "25"
    },
    "9580": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "OR",
      "path": "25"
    },
    "9581": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9582": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9584": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12209,
        12231
      ],
      "op": "POP",
      "path": "25"
    },
    "9587": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12303,
        12320
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12347
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x257D"
    },
    "9592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12340,
        12346
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9593": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12339
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3DA0"
    },
    "9596": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12323,
        12347
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12323,
        12347
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 64,
      "value": "0x0"
    },
    "9600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9603": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12375
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "9605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9608": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12386
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9612": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9614": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12357,
        12395
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9615": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12303,
        12347
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9616": {
      "op": "POP"
    },
    "9617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12430,
        12464
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 65,
      "value": "0x259B"
    },
    "9620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12436,
        12448
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15DB"
    },
    "9623": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12436,
        12446
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "9626": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12436,
        12448
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12430,
        12464
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9628": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 66,
      "value": "0x25C7"
    },
    "9631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12543,
        12555
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x25A6"
    },
    "9634": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12543,
        12553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "9637": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12543,
        12555
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9638": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12543,
        12555
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9639": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9641": {
      "offset": [
        1255,
        1267
      ],
      "op": "PUSH9",
      "path": "25",
      "value": "0x1B1AE4D6E2EF500000"
    },
    "9651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9654": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9657": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "ADD",
      "path": "25"
    },
    "9658": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9661": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9662": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9664": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9665": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "POP",
      "path": "25"
    },
    "9667": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12542
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BE"
    },
    "9670": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12537,
        12600
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9671": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12537,
        12600
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12696,
        12708
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 67,
      "value": "0x25CF"
    },
    "9675": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12696,
        12706
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "9678": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12696,
        12708
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12696,
        12708
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9682": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9684": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9685": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12685
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "9687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9689": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9692": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9693": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12693
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9702": {
      "op": "SHL"
    },
    "9703": {
      "op": "SUB"
    },
    "9704": {
      "op": "NOT"
    },
    "9705": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "AND",
      "path": "25"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9712": {
      "op": "SHL"
    },
    "9713": {
      "op": "SUB"
    },
    "9714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "AND",
      "path": "25"
    },
    "9718": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "OR",
      "path": "25"
    },
    "9722": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12674,
        12708
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12806
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 68,
      "value": "0xA"
    },
    "9726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12806
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12813
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2609"
    },
    "9730": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12813
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9733": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12810
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "9736": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12794,
        12813
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12794,
        12813
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12779,
        12791
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9740": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12779,
        12813
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12884,
        12896
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 69,
      "value": "0xF"
    },
    "9743": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12884,
        12896
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12883
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9753": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12897
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9761": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "DUP13",
      "path": "25"
    },
    "9762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12906
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12913
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2634"
    },
    "9773": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9774": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12911,
        12912
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "9776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12910
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "9779": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12866,
        12913
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12866,
        12913
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12841,
        12853
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "9783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12841,
        12853
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12840
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "9791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9794": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9800": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12854
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9801": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "DUP14",
      "path": "25"
    },
    "9802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9805": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9806": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9807": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12863
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9811": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12823,
        12913
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "9813": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13026
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x266A"
    },
    "9816": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13023,
        13025
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "9818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13018
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2664"
    },
    "9821": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        12984
      ],
      "op": "DUP8",
      "path": "25"
    },
    "9822": {
      "offset": [
        1923,
        1924
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        12988
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E58"
    },
    "9827": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12975,
        13018
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9828": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13018
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9829": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13022
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13022
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3EB1"
    },
    "9833": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12975,
        13026
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9834": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12975,
        13026
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13036,
        13053
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP12",
      "path": "25"
    },
    "9838": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13068
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "9842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "9850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "9851": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9852": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12954,
        13026
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12954,
        13026
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "9855": {
      "op": "POP"
    },
    "9856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9862": {
      "op": "SHL"
    },
    "9863": {
      "op": "SUB"
    },
    "9864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "AND",
      "path": "25"
    },
    "9865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9867": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9868": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12954,
        13026
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9869": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12954,
        13026
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13036,
        13053
      ],
      "op": "DUP4",
      "path": "25"
    },
    "9871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13036,
        13053
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9873": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12954,
        13026
      ],
      "op": "DUP6",
      "path": "25"
    },
    "9875": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13056,
        13077
      ],
      "op": "DUP8",
      "path": "25"
    },
    "9876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "GAS",
      "path": "25"
    },
    "9877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "CALL",
      "path": "25"
    },
    "9878": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "9879": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9881": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "9883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9884": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9886": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "EQ",
      "path": "25"
    },
    "9888": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26C5"
    },
    "9891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "9892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9895": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9896": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "9899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "NOT",
      "path": "25"
    },
    "9900": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "9902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "9903": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "ADD",
      "path": "25"
    },
    "9904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "AND",
      "path": "25"
    },
    "9905": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9906": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "ADD",
      "path": "25"
    },
    "9907": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9909": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "9911": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9912": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "9914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9918": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "DUP5",
      "path": "25"
    },
    "9919": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "ADD",
      "path": "25"
    },
    "9920": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "9921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26CA"
    },
    "9924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9925": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9926": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "9928": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "9929": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9930": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9931": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13106,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9933": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13145
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9934": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13087,
        13145
      ],
      "op": "POP",
      "path": "25"
    },
    "9935": {
      "branch": 233,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13163,
        13170
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 70
    },
    "9936": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2711"
    },
    "9939": {
      "branch": 233,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "9940": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9942": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9943": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9950": {
      "op": "SHL"
    },
    "9951": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9952": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9953": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9955": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "9957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9958": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "ADD",
      "path": "25"
    },
    "9959": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9960": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "9962": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "9964": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9965": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "ADD",
      "path": "25"
    },
    "9966": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9967": {
      "op": "PUSH14",
      "value": "0x14185E5B595B9D0819985A5B1959"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "9984": {
      "op": "SHL"
    },
    "9985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "9987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9988": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "ADD",
      "path": "25"
    },
    "9989": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9992": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9993": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9994": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "SUB",
      "path": "25"
    },
    "9996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "9998": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "ADD",
      "path": "25"
    },
    "9999": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10000": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10001": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13155,
        13189
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13289,
        13313
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 71,
      "value": "0x271A"
    },
    "10005": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13303,
        13312
      ],
      "op": "DUP8",
      "path": "25"
    },
    "10006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13289,
        13302
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35C6"
    },
    "10009": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13289,
        13313
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10010": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13289,
        13313
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10011": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "PUSH32",
      "path": "25",
      "statement": 72,
      "value": "0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E"
    },
    "10044": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13340,
        13346
      ],
      "op": "DUP7",
      "path": "25"
    },
    "10045": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13348,
        13360
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2744"
    },
    "10048": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13348,
        13358
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34BA"
    },
    "10051": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13348,
        13360
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10052": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13348,
        13360
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10053": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10055": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10058": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10059": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10066": {
      "op": "SHL"
    },
    "10067": {
      "op": "SUB"
    },
    "10068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10069": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10070": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "AND",
      "path": "25"
    },
    "10071": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10073": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10074": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "ADD",
      "path": "25"
    },
    "10075": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10076": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10077": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10078": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10079": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10080": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SUB",
      "path": "25"
    },
    "10082": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "ADD",
      "path": "25"
    },
    "10083": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10084": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13329,
        13361
      ],
      "op": "LOG1",
      "path": "25"
    },
    "10085": {
      "op": "POP"
    },
    "10086": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13379,
        13385
      ],
      "op": "SWAP4",
      "path": "25",
      "statement": 73
    },
    "10087": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13379,
        13385
      ],
      "op": "SWAP11",
      "path": "25"
    },
    "10088": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10951,
        13392
      ],
      "op": "SWAP10",
      "path": "25"
    },
    "10089": {
      "op": "POP"
    },
    "10090": {
      "op": "POP"
    },
    "10091": {
      "op": "POP"
    },
    "10092": {
      "op": "POP"
    },
    "10093": {
      "op": "POP"
    },
    "10094": {
      "op": "POP"
    },
    "10095": {
      "op": "POP"
    },
    "10096": {
      "op": "POP"
    },
    "10097": {
      "op": "POP"
    },
    "10098": {
      "op": "POP"
    },
    "10099": {
      "fn": "CryptoChampions.mintHero",
      "jump": "o",
      "offset": [
        10951,
        13392
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10100": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10101": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26063,
        26068
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10103": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26095,
        26100
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10104": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26128,
        26133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10106": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26159,
        26164
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10107": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26025,
        26031
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10108": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10110": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10111": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "10112": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2788"
    },
    "10115": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10116": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10118": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10119": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10120": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10121": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10123": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10124": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10125": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10126": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10128": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10130": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10131": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10133": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10134": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10135": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10136": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10138": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "10139": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x27A3"
    },
    "10142": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10143": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10145": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10146": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10147": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10148": {
      "op": "POP"
    },
    "10149": {
      "op": "POP"
    },
    "10150": {
      "op": "POP"
    },
    "10151": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 74,
      "value": "0x0"
    },
    "10153": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10154": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10155": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10156": {
      "op": "POP"
    },
    "10157": {
      "op": "POP"
    },
    "10158": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10160": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10162": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10163": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10165": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10166": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26236
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10167": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10169": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "ADD",
      "path": "25"
    },
    "10170": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10171": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10173": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "PUSH6",
      "path": "25",
      "value": "0x10000000000"
    },
    "10180": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10181": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "DIV",
      "path": "25"
    },
    "10182": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10183": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "AND",
      "path": "25"
    },
    "10184": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26221,
        26246
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10185": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "PUSH7",
      "path": "25",
      "value": "0x1000000000000"
    },
    "10193": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10194": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "DIV",
      "path": "25"
    },
    "10195": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10196": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "AND",
      "path": "25"
    },
    "10197": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26260,
        26286
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10200": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "10202": {
      "op": "SHL"
    },
    "10203": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26300,
        26324
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10204": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26300,
        26324
      ],
      "op": "DIV",
      "path": "25"
    },
    "10205": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26300,
        26324
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10206": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26300,
        26324
      ],
      "op": "AND",
      "path": "25"
    },
    "10207": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26300,
        26324
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10212": {
      "op": "SHL"
    },
    "10213": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26338,
        26361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10214": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26338,
        26361
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10215": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26338,
        26361
      ],
      "op": "DIV",
      "path": "25"
    },
    "10216": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26338,
        26361
      ],
      "op": "AND",
      "path": "25"
    },
    "10217": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26338,
        26361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10218": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "o",
      "offset": [
        25921,
        26378
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10219": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10220": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28175,
        28187
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 75,
      "value": "0x7"
    },
    "10222": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28175,
        28187
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10223": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10224": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        28087,
        28194
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10225": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "o",
      "offset": [
        28087,
        28194
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3534,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3596
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 76
    },
    "10230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3603
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3582
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10232": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10233": {
      "branch": 260,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3603
      ],
      "op": "EQ",
      "path": "5"
    },
    "10234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2834"
    },
    "10237": {
      "branch": 260,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10247": {
      "op": "SHL"
    },
    "10248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10255": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10259": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10261": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10262": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10263": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10265": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10269": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10271": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5241"
    },
    "10274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "10276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10277": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "10278": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "10281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10282": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10283": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "10284": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10287": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "10290": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10291": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "10295": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10296": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10297": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10306": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10307": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "GT",
      "path": "5"
    },
    "10308": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10309": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10310": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284E"
    },
    "10313": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10314": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10316": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10317": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "REVERT",
      "path": "5"
    },
    "10318": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10319": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10320": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10322": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10323": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10324": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10325": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10326": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10327": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10328": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10330": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10331": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10333": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10334": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10335": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10336": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10338": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10339": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10340": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10341": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2878"
    },
    "10344": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10345": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10346": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10348": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10349": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10351": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10352": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "10353": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10354": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "10355": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10356": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "10357": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "10358": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10359": {
      "op": "POP"
    },
    "10360": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10361": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10362": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10363": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "10364": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3739,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10366": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10367": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3766
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10368": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3773
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10369": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3755
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10370": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3773
      ],
      "op": "LT",
      "path": "5"
    },
    "10371": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "10372": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28D6"
    },
    "10375": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10376": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 77,
      "value": "0x28B7"
    },
    "10379": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3831
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10380": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3832,
        3833
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10381": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10382": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10383": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10384": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "LT",
      "path": "5"
    },
    "10385": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2896"
    },
    "10388": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10389": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10390": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10391": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10393": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MUL",
      "path": "5"
    },
    "10394": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10396": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10397": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "10398": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10399": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3839
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10400": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3840,
        3841
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10401": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10402": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10403": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10404": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "LT",
      "path": "5"
    },
    "10405": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28AA"
    },
    "10408": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10409": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10410": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10411": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10413": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MUL",
      "path": "5"
    },
    "10414": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10416": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10417": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "10418": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10419": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12DA"
    },
    "10422": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10423": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10424": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3807
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10425": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3808,
        3809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10426": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10427": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10428": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10429": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "LT",
      "path": "5"
    },
    "10430": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C3"
    },
    "10433": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10434": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "INVALID",
      "path": "5"
    },
    "10435": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10436": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10438": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10439": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10440": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MUL",
      "path": "5"
    },
    "10441": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10442": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10443": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10444": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10445": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "10446": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3843
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10447": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 78,
      "value": "0x1"
    },
    "10449": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "ADD",
      "path": "5"
    },
    "10450": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x287E"
    },
    "10453": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10454": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3871,
        3884
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 79
    },
    "10457": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "op": "POP"
    },
    "10460": {
      "op": "POP"
    },
    "10461": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10462": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10463": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17954,
        17961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10465": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17937,
        17943
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10466": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10468": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10469": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "10470": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x28EE"
    },
    "10473": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10474": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10476": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10477": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10478": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10479": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10481": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10482": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10483": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10484": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10486": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10488": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10489": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10491": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10492": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10493": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10494": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10496": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "10497": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2909"
    },
    "10500": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10501": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10503": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10504": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10505": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10506": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18012,
        18013
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 80,
      "value": "0x0"
    },
    "10508": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10509": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10510": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10511": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        17992
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "10513": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10515": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10516": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10518": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10519": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10520": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10527": {
      "op": "SHL"
    },
    "10528": {
      "op": "SUB"
    },
    "10529": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17981,
        18000
      ],
      "op": "AND",
      "path": "25"
    },
    "10530": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x292A"
    },
    "10533": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10534": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10536": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10537": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10538": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17973,
        18015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10539": {
      "op": "POP"
    },
    "10540": {
      "op": "POP"
    },
    "10541": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 81,
      "value": "0x0"
    },
    "10543": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10544": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10545": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10546": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18087
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "10548": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10550": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10551": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10553": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10554": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10555": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10562": {
      "op": "SHL"
    },
    "10563": {
      "op": "SUB"
    },
    "10564": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "AND",
      "path": "25"
    },
    "10565": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        18076,
        18095
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10566": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "o",
      "offset": [
        17866,
        18102
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10567": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10568": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22822,
        22829
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10570": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22796,
        22803
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10571": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10573": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10574": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "10575": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10576": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10577": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x295B"
    },
    "10580": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10581": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "10582": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10584": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10585": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "10586": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10587": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10588": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2964"
    },
    "10591": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10592": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10594": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10595": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10596": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10597": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22862,
        22874
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 82,
      "value": "0xF"
    },
    "10599": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22862,
        22874
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10600": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22853,
        22858
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10601": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22853,
        22874
      ],
      "op": "GT",
      "path": "25"
    },
    "10602": {
      "branch": 234,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22853,
        22874
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10603": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2973"
    },
    "10606": {
      "branch": 234,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10607": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10609": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10610": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10611": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22845,
        22875
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10612": {
      "op": "POP"
    },
    "10613": {
      "op": "POP"
    },
    "10614": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 83,
      "value": "0x0"
    },
    "10616": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10617": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10618": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10619": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22932
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "10621": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10623": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10624": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10625": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10626": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10628": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10629": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10630": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22939
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10631": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10632": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "DUP5",
      "path": "25"
    },
    "10633": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10634": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10635": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10636": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10637": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10638": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10639": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10640": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22915,
        22948
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10641": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        22660,
        22955
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10642": {
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10643": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x16"
    },
    "10645": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10646": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10647": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10648": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10649": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "10650": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x299F"
    },
    "10653": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10654": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "INVALID",
      "path": "25"
    },
    "10655": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10656": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10658": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10659": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10660": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10661": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10663": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10664": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10665": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10666": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10667": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10668": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10669": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10670": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10672": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10673": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "10674": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10676": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10680": {
      "op": "NOT"
    },
    "10681": {
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "10684": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "10686": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP8",
      "path": "25"
    },
    "10687": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10688": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10689": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10690": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10691": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10692": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "10693": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10694": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10695": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10696": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10697": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10698": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10699": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10700": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10701": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10702": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10703": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10704": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10705": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10706": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10707": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10708": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10709": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10710": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10711": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10712": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10713": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10714": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10715": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10716": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "10717": {
      "op": "POP"
    },
    "10718": {
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10719": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10720": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10721": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10722": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10723": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10724": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10725": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10726": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A30"
    },
    "10729": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10730": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10731": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10733": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "LT",
      "path": "25"
    },
    "10734": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A05"
    },
    "10737": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10738": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "10741": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10742": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10743": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10744": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DIV",
      "path": "25"
    },
    "10745": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MUL",
      "path": "25"
    },
    "10746": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10747": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10748": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10749": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10751": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10752": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10753": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A30"
    },
    "10756": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10757": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10758": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10759": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10760": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10761": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10762": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10764": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10765": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10767": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10769": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10770": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10771": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10772": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10773": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10774": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10775": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10776": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10777": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "10779": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10780": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10781": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10783": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10784": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10785": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10786": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "GT",
      "path": "25"
    },
    "10787": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A13"
    },
    "10790": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10791": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10792": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10793": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SUB",
      "path": "25"
    },
    "10794": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "10796": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "AND",
      "path": "25"
    },
    "10797": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10798": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "ADD",
      "path": "25"
    },
    "10799": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "10800": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10801": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10802": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10803": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10804": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10805": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "POP",
      "path": "25"
    },
    "10806": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3746,
        3786
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10807": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        3746,
        3786
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10808": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10809": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10638,
        10645
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10811": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10620,
        10627
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10812": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10814": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10815": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "10816": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10817": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10818": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A4C"
    },
    "10821": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10822": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "10823": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10825": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10826": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "10827": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "10828": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10829": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A55"
    },
    "10832": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10833": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10835": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10836": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10837": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10838": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10698,
        10699
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 84,
      "value": "0x0"
    },
    "10840": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10841": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10842": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10843": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10677
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10845": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10847": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10848": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10850": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10851": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10852": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10859": {
      "op": "SHL"
    },
    "10860": {
      "op": "SUB"
    },
    "10861": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10665,
        10686
      ],
      "op": "AND",
      "path": "25"
    },
    "10862": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A76"
    },
    "10865": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10866": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10868": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10869": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10870": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10657,
        10701
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10871": {
      "op": "POP"
    },
    "10872": {
      "op": "POP"
    },
    "10873": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 85,
      "value": "0x0"
    },
    "10875": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10876": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10877": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10878": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10775
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10880": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10882": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10883": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10885": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10886": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10887": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "op": "SUB"
    },
    "10896": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "AND",
      "path": "25"
    },
    "10897": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10763,
        10784
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10898": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        10538,
        10791
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10899": {
      "offset": [
        3069,
        3098
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10900": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE"
    },
    "10902": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10903": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        3069,
        3098
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10904": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        3069,
        3098
      ],
      "op": "JUMP",
      "path": "25"
    },
    "10905": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10906": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27167,
        27172
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10908": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27198,
        27203
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10909": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27230,
        27235
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10911": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27265,
        27270
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10912": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27300,
        27305
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10914": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27329,
        27334
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10915": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27129,
        27135
      ],
      "op": "DUP7",
      "path": "25"
    },
    "10916": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "10918": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10919": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "10920": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2AB0"
    },
    "10923": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10924": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10926": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10927": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10928": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10929": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10931": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10932": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10933": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10934": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10936": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10938": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10939": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10941": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10942": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10943": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10944": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10946": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "10947": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2ACB"
    },
    "10950": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "10951": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "10953": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "10954": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "10955": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "10956": {
      "op": "POP"
    },
    "10957": {
      "op": "POP"
    },
    "10958": {
      "op": "POP"
    },
    "10959": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 86,
      "value": "0x0"
    },
    "10961": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "10962": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "DUP6",
      "path": "25"
    },
    "10963": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10964": {
      "op": "POP"
    },
    "10965": {
      "op": "POP"
    },
    "10966": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27399
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "10968": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "10970": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "op": "POP"
    },
    "10973": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "10975": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "10976": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27407
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "10977": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "10979": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "ADD",
      "path": "25"
    },
    "10980": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "10981": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "10987": {
      "op": "SHL"
    },
    "10988": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "DUP3",
      "path": "25"
    },
    "10989": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "DIV",
      "path": "25"
    },
    "10990": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "DUP2",
      "path": "25"
    },
    "10991": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "AND",
      "path": "25"
    },
    "10992": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10997": {
      "op": "SHL"
    },
    "10998": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27430,
        27455
      ],
      "op": "DUP4",
      "path": "25"
    },
    "10999": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27430,
        27455
      ],
      "op": "DIV",
      "path": "25"
    },
    "11000": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27430,
        27455
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11001": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27430,
        27455
      ],
      "op": "AND",
      "path": "25"
    },
    "11002": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27430,
        27455
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11005": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "11007": {
      "op": "SHL"
    },
    "11008": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27469,
        27497
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11009": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27469,
        27497
      ],
      "op": "DIV",
      "path": "25"
    },
    "11010": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27469,
        27497
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11011": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27469,
        27497
      ],
      "op": "AND",
      "path": "25"
    },
    "11012": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27469,
        27497
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11017": {
      "op": "SHL"
    },
    "11018": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27511,
        27539
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11019": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27511,
        27539
      ],
      "op": "DIV",
      "path": "25"
    },
    "11020": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27511,
        27539
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11021": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27511,
        27539
      ],
      "op": "AND",
      "path": "25"
    },
    "11022": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27511,
        27539
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "11027": {
      "op": "SHL"
    },
    "11028": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27553,
        27575
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11029": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27553,
        27575
      ],
      "op": "DIV",
      "path": "25"
    },
    "11030": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27553,
        27575
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11031": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27553,
        27575
      ],
      "op": "AND",
      "path": "25"
    },
    "11032": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27553,
        27575
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "11037": {
      "op": "SHL"
    },
    "11038": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11039": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "DIV",
      "path": "25"
    },
    "11040": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11041": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11042": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "AND",
      "path": "25"
    },
    "11043": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27589,
        27613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11044": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "o",
      "offset": [
        27024,
        27630
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11045": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11046": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25546,
        25551
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11048": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25576,
        25581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11049": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25606,
        25611
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11051": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25636,
        25641
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11052": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25508,
        25514
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11053": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11055": {
      "offset": [
        5914,
        5920
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11056": {
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "11057": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B39"
    },
    "11060": {
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11061": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11063": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11064": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11065": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11066": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11068": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11069": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11070": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11071": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11073": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11075": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11076": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11078": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11079": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11080": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11081": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11083": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "11084": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2B54"
    },
    "11087": {
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11088": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11090": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11091": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11092": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11093": {
      "op": "POP"
    },
    "11094": {
      "op": "POP"
    },
    "11095": {
      "op": "POP"
    },
    "11096": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 87,
      "value": "0x0"
    },
    "11098": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11099": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11100": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11101": {
      "op": "POP"
    },
    "11102": {
      "op": "POP"
    },
    "11103": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25692
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "11105": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11107": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11108": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11110": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11111": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25700
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11112": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "11114": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "ADD",
      "path": "25"
    },
    "11115": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11116": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11118": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "11121": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11122": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "DIV",
      "path": "25"
    },
    "11123": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11124": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "AND",
      "path": "25"
    },
    "11125": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25685,
        25707
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11126": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0x10000"
    },
    "11130": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11131": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "DIV",
      "path": "25"
    },
    "11132": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11133": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "AND",
      "path": "25"
    },
    "11134": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25709,
        25731
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11135": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1000000"
    },
    "11140": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11141": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "DIV",
      "path": "25"
    },
    "11142": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11143": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "AND",
      "path": "25"
    },
    "11144": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25733,
        25755
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11149": {
      "op": "SHL"
    },
    "11150": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25757,
        25779
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11151": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25757,
        25779
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11152": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25757,
        25779
      ],
      "op": "DIV",
      "path": "25"
    },
    "11153": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25757,
        25779
      ],
      "op": "AND",
      "path": "25"
    },
    "11154": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25757,
        25779
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11155": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        25396,
        25787
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11156": {
      "offset": [
        3136,
        3163
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11157": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "11159": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11160": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        3136,
        3163
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11161": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        3136,
        3163
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11162": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11163": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11165": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 88
    },
    "11166": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11167": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11168": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11170": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11171": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11172": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11173": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11175": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11176": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11177": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB2"
    },
    "11180": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11181": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11182": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F18"
    },
    "11185": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11186": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11187": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11188": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11189": {
      "op": "POP"
    },
    "11190": {
      "op": "POP"
    },
    "11191": {
      "op": "POP"
    },
    "11192": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11193": {
      "offset": [
        2088,
        2136
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11194": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11196": {
      "offset": [
        2088,
        2136
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11197": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        2088,
        2136
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11198": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11199": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11201": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 89
    },
    "11202": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11203": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11204": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11206": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11207": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11208": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11209": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11211": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11212": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "11213": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB2"
    },
    "11216": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11217": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11218": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344B"
    },
    "11221": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11222": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "11223": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9602
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 90
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11230": {
      "op": "SHL"
    },
    "11231": {
      "op": "SUB"
    },
    "11232": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9606,
        9620
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "11265": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "AND",
      "path": "28"
    },
    "11266": {
      "branch": 281,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "EQ",
      "path": "28"
    },
    "11267": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C53"
    },
    "11270": {
      "branch": 281,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "11271": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "11273": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP1",
      "path": "28"
    },
    "11274": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "11275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11281": {
      "op": "SHL"
    },
    "11282": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "28"
    },
    "11283": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11284": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "11286": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "11288": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11289": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11290": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11291": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "11293": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "11295": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11296": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11297": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11298": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "11331": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "11333": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11334": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11335": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "11336": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11337": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "11338": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11339": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "28"
    },
    "11340": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11341": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SUB",
      "path": "28"
    },
    "11342": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x64"
    },
    "11344": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "28"
    },
    "11345": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "11346": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "REVERT",
      "path": "28"
    },
    "11347": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "11348": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9706
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 91,
      "value": "0x1DE9"
    },
    "11351": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9684,
        9693
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11352": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9695,
        9705
      ],
      "op": "DUP3",
      "path": "28"
    },
    "11353": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9683
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3F24"
    },
    "11356": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9666,
        9706
      ],
      "op": "JUMP",
      "path": "28"
    },
    "11357": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11358": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2C74"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11363": {
      "op": "DUP1"
    },
    "11364": {
      "op": "MLOAD"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11367": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "11370": {
      "op": "DUP4"
    },
    "11371": {
      "op": "CODECOPY"
    },
    "11372": {
      "op": "DUP2"
    },
    "11373": {
      "op": "MLOAD"
    },
    "11374": {
      "op": "SWAP2"
    },
    "11375": {
      "op": "MSTORE"
    },
    "11376": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "11379": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11380": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11381": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7916,
        7927
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 92
    },
    "11382": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7900
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "11384": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7901,
        7912
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11385": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7901,
        7912
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11386": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11388": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "11389": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11390": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11391": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11392": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11393": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11394": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11395": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "CALLDATACOPY",
      "path": "25"
    },
    "11396": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11397": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11398": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11399": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "ADD",
      "path": "25"
    },
    "11400": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11401": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP6",
      "path": "25"
    },
    "11402": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11403": {
      "op": "POP"
    },
    "11404": {
      "op": "POP"
    },
    "11405": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11407": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "11408": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11409": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11410": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11411": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SUB",
      "path": "25"
    },
    "11412": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11414": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "ADD",
      "path": "25"
    },
    "11415": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11416": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11417": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11418": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11419": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11426": {
      "op": "SHL"
    },
    "11427": {
      "op": "SUB"
    },
    "11428": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11429": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11430": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11431": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "AND",
      "path": "25"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11438": {
      "op": "SHL"
    },
    "11439": {
      "op": "SUB"
    },
    "11440": {
      "op": "NOT"
    },
    "11441": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11442": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "11443": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "AND",
      "path": "25"
    },
    "11444": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "11445": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11446": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "11447": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "OR",
      "path": "25"
    },
    "11448": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11449": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "11450": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11451": {
      "op": "POP"
    },
    "11452": {
      "op": "POP"
    },
    "11453": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7947
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 93,
      "value": "0x11"
    },
    "11455": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11456": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11457": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11459": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11460": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "ADD",
      "path": "25"
    },
    "11461": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11462": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11463": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7889,
        7913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11465": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11466": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11467": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11468": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11469": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CF9"
    },
    "11472": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11473": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "11506": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "ADD",
      "path": "25"
    },
    "11507": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7953,
        7964
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11508": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7953,
        7964
      ],
      "op": "DUP5",
      "path": "25"
    },
    "11509": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4EAF"
    },
    "11512": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7937,
        7965
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11513": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11514": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7937,
        7965
      ],
      "op": "POP",
      "path": "25"
    },
    "11515": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11516": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11517": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7777,
        7972
      ],
      "op": "POP",
      "path": "25"
    },
    "11518": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "o",
      "offset": [
        7777,
        7972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11519": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28380,
        28536
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11520": {
      "offset": [
        6143,
        6168
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2D28"
    },
    "11523": {
      "offset": [
        1639,
        1667
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "11556": {
      "offset": [
        6143,
        6151
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "11559": {
      "jump": "i",
      "offset": [
        6143,
        6168
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11560": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        6143,
        6168
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11561": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28507
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 94,
      "value": "0x16"
    },
    "11563": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11564": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11565": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11567": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11568": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "ADD",
      "path": "25"
    },
    "11569": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "DUP3",
      "path": "25"
    },
    "11570": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11573": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11574": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11575": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "11576": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11577": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x187C"
    },
    "11580": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11581": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
    },
    "11614": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "ADD",
      "path": "25"
    },
    "11615": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28513,
        28528
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11616": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28513,
        28528
      ],
      "op": "DUP4",
      "path": "25"
    },
    "11617": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28483,
        28529
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4EAF"
    },
    "11620": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28483,
        28529
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11621": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11622": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11624": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11625": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11626": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11627": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4077,
        4085
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 95
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11634": {
      "op": "SHL"
    },
    "11635": {
      "op": "SUB"
    },
    "11636": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11637": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D7C"
    },
    "11640": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "11643": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11644": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11651": {
      "op": "SHL"
    },
    "11652": {
      "op": "SUB"
    },
    "11653": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11654": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "EQ",
      "path": "5"
    },
    "11655": {
      "branch": 261,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11656": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC2"
    },
    "11659": {
      "branch": 261,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11660": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11662": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11669": {
      "op": "SHL"
    },
    "11670": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11671": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11672": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11674": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11675": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11676": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11677": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11679": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11680": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11681": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11682": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11683": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11684": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11685": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11687": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11688": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11689": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11691": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11692": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11693": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5218"
    },
    "11696": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11698": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11699": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "11700": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11702": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11703": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11704": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11705": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11706": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11708": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11709": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11710": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11711": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11712": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11713": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11714": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11715": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4187,
        4195
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 96
    },
    "11716": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11718": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11720": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DCF"
    },
    "11723": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "11726": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11727": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11734": {
      "op": "SHL"
    },
    "11735": {
      "op": "SUB"
    },
    "11736": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11737": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11738": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "AND",
      "path": "5"
    },
    "11739": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11740": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11741": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11743": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11744": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11745": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11746": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11747": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11748": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11749": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11750": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11752": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11753": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11754": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11757": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11758": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11759": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11760": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11761": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11762": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "AND",
      "path": "5"
    },
    "11763": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11764": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11765": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11766": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11767": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11768": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11769": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11770": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11771": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11772": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11773": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11774": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11776": {
      "op": "NOT"
    },
    "11777": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "AND",
      "path": "5"
    },
    "11778": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11779": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11780": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11781": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11782": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11783": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11784": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "OR",
      "path": "5"
    },
    "11785": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11786": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11787": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11788": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 97,
      "value": "0x2E13"
    },
    "11791": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "11794": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11795": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11802": {
      "op": "SHL"
    },
    "11803": {
      "op": "SUB"
    },
    "11804": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "AND",
      "path": "5"
    },
    "11805": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11838": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4249,
        4257
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11839": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11841": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11842": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11843": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11844": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11845": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11846": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11847": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11848": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11850": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ADD",
      "path": "5"
    },
    "11851": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11852": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11853": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11854": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11856": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11857": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11858": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11859": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SUB",
      "path": "5"
    },
    "11860": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11861": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "LOG3",
      "path": "5"
    },
    "11862": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11863": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11864": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11865": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11866": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E70"
    },
    "11869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11871": {
      "op": "DUP1"
    },
    "11872": {
      "op": "MLOAD"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11875": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "11878": {
      "op": "DUP4"
    },
    "11879": {
      "op": "CODECOPY"
    },
    "11880": {
      "op": "DUP2"
    },
    "11881": {
      "op": "MLOAD"
    },
    "11882": {
      "op": "SWAP2"
    },
    "11883": {
      "op": "MSTORE"
    },
    "11884": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "11887": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11888": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11889": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18548,
        18549
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 98,
      "value": "0x0"
    },
    "11891": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18533,
        18545
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11893": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18533,
        18545
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11894": {
      "branch": 235,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18533,
        18549
      ],
      "op": "GT",
      "path": "25"
    },
    "11895": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E7F"
    },
    "11898": {
      "branch": 235,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11899": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11901": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "DUP1",
      "path": "25"
    },
    "11902": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "REVERT",
      "path": "25"
    },
    "11903": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18525,
        18550
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11904": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18613,
        18614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11906": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11907": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "11909": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18616,
        18617
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11910": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18616,
        18641
      ],
      "op": "GT",
      "path": "25"
    },
    "11911": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EB2"
    },
    "11914": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11915": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "11917": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11918": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11919": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11920": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18679
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "11922": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "11924": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "11925": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "11927": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11928": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18682
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "11929": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18688
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11930": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18688
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "11932": {
      "branch": 236,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18666,
        18688
      ],
      "op": "AND",
      "path": "25"
    },
    "11933": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18662,
        18736
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "11934": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18662,
        18736
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EAA"
    },
    "11937": {
      "branch": 236,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18662,
        18736
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "11938": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18708,
        18721
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 99,
      "value": "0x2EAA"
    },
    "11941": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18719,
        18720
      ],
      "op": "DUP2",
      "path": "25"
    },
    "11942": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18708,
        18718
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F3E"
    },
    "11945": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18708,
        18721
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11946": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18708,
        18721
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11947": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18643,
        18646
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 100,
      "value": "0x1"
    },
    "11949": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18643,
        18646
      ],
      "op": "ADD",
      "path": "25"
    },
    "11950": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E82"
    },
    "11953": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11954": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18596,
        18746
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11955": {
      "op": "POP"
    },
    "11956": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18814
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 101,
      "value": "0xF"
    },
    "11958": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18814
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "11959": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18821
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EC1"
    },
    "11962": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18821
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "11963": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18819,
        18820
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "11965": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18818
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "11968": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18802,
        18821
      ],
      "op": "JUMP",
      "path": "25"
    },
    "11969": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18802,
        18821
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "11970": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18787,
        18799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "11972": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18787,
        18821
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "11973": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 102,
      "value": "0x40"
    },
    "11975": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "11976": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC"
    },
    "12009": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12010": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12012": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12013": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18837,
        18857
      ],
      "op": "LOG1",
      "path": "25"
    },
    "12014": {
      "fn": "CryptoChampions.burnElders",
      "jump": "o",
      "offset": [
        18465,
        18864
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12015": {
      "offset": [
        2241,
        2272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12016": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "12018": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12019": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        2241,
        2272
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12020": {
      "fn": "CryptoChampions.burnElders",
      "jump": "o",
      "offset": [
        2241,
        2272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12021": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12022": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F0C"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12027": {
      "op": "DUP1"
    },
    "12028": {
      "op": "MLOAD"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12031": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "12034": {
      "op": "DUP4"
    },
    "12035": {
      "op": "CODECOPY"
    },
    "12036": {
      "op": "DUP2"
    },
    "12037": {
      "op": "MLOAD"
    },
    "12038": {
      "op": "SWAP2"
    },
    "12039": {
      "op": "MSTORE"
    },
    "12040": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "12043": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12044": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12045": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7228
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 103,
      "value": "0x6"
    },
    "12047": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12048": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12049": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12050": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12051": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7228
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12052": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12054": {
      "op": "NOT"
    },
    "12055": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "AND",
      "path": "25"
    },
    "12056": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12058": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7231,
        7236
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12059": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12060": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12061": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "GT",
      "path": "25"
    },
    "12062": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12063": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2F24"
    },
    "12066": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12067": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "INVALID",
      "path": "25"
    },
    "12068": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12069": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "MUL",
      "path": "25"
    },
    "12070": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "OR",
      "path": "25"
    },
    "12071": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12072": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "12073": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7216,
        7236
      ],
      "op": "POP",
      "path": "25"
    },
    "12074": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7156,
        7243
      ],
      "op": "POP",
      "path": "25"
    },
    "12075": {
      "fn": "CryptoChampions.setPhase",
      "jump": "o",
      "offset": [
        7156,
        7243
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12076": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12077": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12079": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 104
    },
    "12080": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12081": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12082": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12084": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12085": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12086": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12087": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12089": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12090": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12091": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1346"
    },
    "12094": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12095": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FDA"
    },
    "12098": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12099": {
      "offset": [
        2586,
        2617
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12100": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "12102": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12103": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2586,
        2617
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12104": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "o",
      "offset": [
        2586,
        2617
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12105": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12106": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x0"
    },
    "12108": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12109": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12110": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12111": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12113": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12114": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12115": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12116": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12118": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12119": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12120": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12122": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "12123": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12124": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F67"
    },
    "12127": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12128": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0B"
    },
    "12131": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34BA"
    },
    "12134": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12135": {
      "branch": 252,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12136": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EAC"
    },
    "12139": {
      "branch": 252,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12140": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12142": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12149": {
      "op": "SHL"
    },
    "12150": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12151": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12152": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12154": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12155": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12156": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12157": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12159": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12160": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12161": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12162": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12163": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12164": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12165": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12167": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12168": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12169": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12171": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12172": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12173": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5103"
    },
    "12176": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12178": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12179": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "12180": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12182": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12183": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12184": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12185": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12186": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12188": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12189": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12190": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12191": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12192": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12193": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12194": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12195": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FB9"
    },
    "12198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12200": {
      "op": "DUP1"
    },
    "12201": {
      "op": "MLOAD"
    },
    "12202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12204": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "12207": {
      "op": "DUP4"
    },
    "12208": {
      "op": "CODECOPY"
    },
    "12209": {
      "op": "DUP2"
    },
    "12210": {
      "op": "MLOAD"
    },
    "12211": {
      "op": "SWAP2"
    },
    "12212": {
      "op": "MSTORE"
    },
    "12213": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "12216": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12217": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12218": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8198,
        8212
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 106,
      "value": "0xE"
    },
    "12220": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8198,
        8220
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "12221": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "o",
      "offset": [
        8118,
        8227
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12222": {
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12223": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x11"
    },
    "12225": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12226": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12227": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12228": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12229": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "LT",
      "path": "25"
    },
    "12230": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x299F"
    },
    "12233": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12234": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3330,
        3356
      ],
      "op": "INVALID",
      "path": "25"
    },
    "12235": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12242": {
      "op": "SHL"
    },
    "12243": {
      "op": "SUB"
    },
    "12244": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 107
    },
    "12245": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12246": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "AND",
      "path": "5"
    },
    "12247": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4431,
        4435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12249": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12250": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12251": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12252": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4472
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12254": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12256": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12257": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12258": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12259": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12261": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12262": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12263": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12264": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12265": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12266": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12267": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12268": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12269": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12270": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12271": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12272": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12273": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12274": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12275": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12276": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "12278": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12279": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12280": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "o",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12281": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12288": {
      "op": "SHL"
    },
    "12289": {
      "op": "SUB"
    },
    "12290": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 108
    },
    "12291": {
      "branch": 262,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "AND",
      "path": "5"
    },
    "12292": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x303E"
    },
    "12295": {
      "branch": 262,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12296": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12298": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12305": {
      "op": "SHL"
    },
    "12306": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12307": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12308": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12310": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12311": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12312": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12313": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12315": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12316": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12317": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12318": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12319": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12320": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12321": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12323": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12324": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12325": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12327": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12328": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12329": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5133"
    },
    "12332": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12334": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12335": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12336": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12338": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12339": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12340": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12341": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12342": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12344": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12345": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12346": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12347": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12348": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12349": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12350": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12351": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 109,
      "value": "0x3046"
    },
    "12354": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4887
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "12357": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12358": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12365": {
      "op": "SHL"
    },
    "12366": {
      "op": "SUB"
    },
    "12367": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12368": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12375": {
      "op": "SHL"
    },
    "12376": {
      "op": "SUB"
    },
    "12377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12378": {
      "branch": 263,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "EQ",
      "path": "5"
    },
    "12379": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12380": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x306C"
    },
    "12383": {
      "branch": 263,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "POP",
      "path": "5"
    },
    "12385": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x306C"
    },
    "12388": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4910,
        4914
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12389": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A80"
    },
    "12392": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "12395": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4916,
        4928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12396": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12397": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30A7"
    },
    "12400": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12401": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12403": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12410": {
      "op": "SHL"
    },
    "12411": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12412": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12413": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12415": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12416": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12417": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12418": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12420": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12421": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12422": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12423": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12424": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12425": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12426": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12428": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12429": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12430": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12432": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12433": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12434": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50DA"
    },
    "12437": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12439": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12440": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12443": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12444": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12445": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12446": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12447": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12449": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12450": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12452": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12453": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12454": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12455": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12456": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12458": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30B1"
    },
    "12461": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "12464": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12465": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12466": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12467": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "POP",
      "path": "5"
    },
    "12468": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 110,
      "value": "0x30D1"
    },
    "12471": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5070,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12472": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5080,
        5084
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12473": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5086,
        5088
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12474": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30C2"
    },
    "12477": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5108,
        5110
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12478": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FE5"
    },
    "12481": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12482": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12483": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30CB"
    },
    "12486": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5131,
        5137
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12487": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FE5"
    },
    "12490": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12491": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12492": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5140,
        5144
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12493": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C7"
    },
    "12496": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12497": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12498": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 111,
      "value": "0x3118"
    },
    "12501": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5202,
        5208
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12502": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12504": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12505": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12506": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12508": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12509": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12511": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12512": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12513": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12515": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12516": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12517": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12519": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12520": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51CD"
    },
    "12523": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12525": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12526": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12527": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12529": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12530": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12531": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12532": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12534": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12536": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12537": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12538": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12539": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12541": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12542": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12543": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12550": {
      "op": "SHL"
    },
    "12551": {
      "op": "SUB"
    },
    "12552": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP14",
      "path": "5"
    },
    "12553": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "AND",
      "path": "5"
    },
    "12554": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12555": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12556": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12557": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12558": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12559": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12560": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12561": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12562": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38D9"
    },
    "12567": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12571": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12572": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12573": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12574": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5165
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12576": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12578": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12579": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12580": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12581": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12583": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12584": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12585": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12592": {
      "op": "SHL"
    },
    "12593": {
      "op": "SUB"
    },
    "12594": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12595": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12596": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "AND",
      "path": "5"
    },
    "12597": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12598": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12599": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12600": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12601": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12602": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12603": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12607": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP8",
      "path": "5",
      "statement": 112
    },
    "12609": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "AND",
      "path": "5"
    },
    "12610": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12612": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12613": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12614": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x314F"
    },
    "12617": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12618": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5307,
        5313
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12619": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3460"
    },
    "12622": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12626": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12627": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12628": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12629": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12633": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12634": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12635": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12636": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12640": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12647": {
      "op": "SHL"
    },
    "12648": {
      "op": "SUB"
    },
    "12649": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "AND",
      "path": "5"
    },
    "12652": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12653": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12659": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12662": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12663": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12665": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 113
    },
    "12667": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12669": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "12674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12677": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12678": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP11",
      "path": "5"
    },
    "12680": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "12682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "12685": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12686": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "12719": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12720": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12722": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SUB",
      "path": "5"
    },
    "12724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "12725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "LOG4",
      "path": "5"
    },
    "12727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 114,
      "value": "0x1CC8"
    },
    "12730": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5418,
        5426
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12731": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5428,
        5432
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12732": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5434,
        5436
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12733": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5438,
        5440
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5442,
        5448
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5450,
        5454
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12736": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5417
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4029"
    },
    "12739": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5387,
        5455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12740": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12741": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20901,
        20908
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12743": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20875,
        20882
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12744": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12746": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12747": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "12748": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12749": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12750": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x31D8"
    },
    "12753": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12754": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "12755": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "12757": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12758": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "12759": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12760": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12761": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x31E1"
    },
    "12764": {
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12765": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12767": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12768": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "12769": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12770": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20941,
        20953
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 115,
      "value": "0xF"
    },
    "12772": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20941,
        20953
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12773": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20932,
        20937
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12774": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20932,
        20953
      ],
      "op": "GT",
      "path": "25"
    },
    "12775": {
      "branch": 237,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20932,
        20953
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12776": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x31F0"
    },
    "12779": {
      "branch": 237,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12780": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12782": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12783": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "REVERT",
      "path": "25"
    },
    "12784": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20924,
        20954
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12785": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21012,
        21030
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12787": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12788": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12789": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12790": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "12792": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "12794": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12795": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12796": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12797": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "12799": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12800": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12801": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21057
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "12802": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "DUP7",
      "path": "25"
    },
    "12803": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12804": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12805": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12806": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12807": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12808": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12809": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "12810": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21066
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12811": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21073
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3215"
    },
    "12814": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21073
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12815": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21071,
        21072
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "12817": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21070
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "12820": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        21033,
        21073
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12821": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21033,
        21073
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12822": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21012,
        21073
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12823": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21012,
        21073
      ],
      "op": "POP",
      "path": "25"
    },
    "12824": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21091,
        21116
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 116,
      "value": "0x3220"
    },
    "12827": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21105,
        21115
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12828": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21091,
        21104
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x419A"
    },
    "12831": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        21091,
        21116
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12832": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21091,
        21116
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12833": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        21084,
        21116
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "12834": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20743,
        21123
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "12835": {
      "op": "POP"
    },
    "12836": {
      "op": "POP"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "POP"
    },
    "12839": {
      "op": "POP"
    },
    "12840": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "o",
      "offset": [
        20743,
        21123
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12841": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12842": {
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3240"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12847": {
      "op": "DUP1"
    },
    "12848": {
      "op": "MLOAD"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12851": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "12854": {
      "op": "DUP4"
    },
    "12855": {
      "op": "CODECOPY"
    },
    "12856": {
      "op": "DUP2"
    },
    "12857": {
      "op": "MLOAD"
    },
    "12858": {
      "op": "SWAP2"
    },
    "12859": {
      "op": "MSTORE"
    },
    "12860": {
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3BE6"
    },
    "12863": {
      "jump": "i",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12864": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6252,
        6272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12865": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28773
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x17"
    },
    "12867": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28773
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "12868": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "12870": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12871": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12872": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12873": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12874": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "ADD",
      "path": "25"
    },
    "12875": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12876": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12877": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "12879": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12880": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12881": {
      "op": "PUSH10",
      "value": "0x50524943455F57415253"
    },
    "12892": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12894": {
      "op": "SHL"
    },
    "12895": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "12897": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12898": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12899": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "ADD",
      "path": "25"
    },
    "12900": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12901": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12902": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12903": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "12904": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12905": {
      "op": "PUSH4",
      "value": "0x6CADCD79"
    },
    "12910": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12912": {
      "op": "SHL"
    },
    "12913": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12914": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12915": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "12917": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12918": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12919": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "12920": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP5",
      "path": "25"
    },
    "12921": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12922": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12923": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12924": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "12926": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12927": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12928": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12929": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12930": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12931": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28715,
        28746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "12933": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28715,
        28746
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12940": {
      "op": "SHL"
    },
    "12941": {
      "op": "SUB"
    },
    "12942": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28773
      ],
      "op": "AND",
      "path": "25"
    },
    "12943": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28773
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "12944": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28784
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD95B9AF2"
    },
    "12949": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28784
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "12950": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "12951": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12952": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "12953": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12954": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "12955": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "12957": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12958": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12959": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12960": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "12961": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12962": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "12963": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12964": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28785,
        28798
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12965": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28715,
        28746
      ],
      "op": "DUP12",
      "path": "25"
    },
    "12966": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12967": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12968": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12969": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "LT",
      "path": "25"
    },
    "12970": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "12971": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32BE"
    },
    "12974": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12975": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12976": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12977": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12978": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "12979": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "12980": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "12981": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12982": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "12983": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "12985": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "12986": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32A6"
    },
    "12989": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMP",
      "path": "25"
    },
    "12990": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "12991": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "12992": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "12993": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "12994": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "12995": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12996": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "12997": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "12998": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "12999": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "13000": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13001": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "13003": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "AND",
      "path": "25"
    },
    "13004": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13005": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13006": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32EB"
    },
    "13009": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13010": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13011": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13012": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SUB",
      "path": "25"
    },
    "13013": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13014": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13015": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "13017": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13018": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13020": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SUB",
      "path": "25"
    },
    "13021": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "13024": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "EXP",
      "path": "25"
    },
    "13025": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SUB",
      "path": "25"
    },
    "13026": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "NOT",
      "path": "25"
    },
    "13027": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "AND",
      "path": "25"
    },
    "13028": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13029": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13030": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13032": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ADD",
      "path": "25"
    },
    "13033": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13034": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13035": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13036": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13037": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13038": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13039": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13040": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13041": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13043": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13045": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13046": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13047": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13048": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SUB",
      "path": "25"
    },
    "13049": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13050": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13052": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13053": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13054": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13055": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13056": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13057": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13058": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x330A"
    },
    "13061": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13062": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13064": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13065": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13066": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13067": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13068": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "GAS",
      "path": "25"
    },
    "13069": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "CALL",
      "path": "25"
    },
    "13070": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13071": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13072": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13073": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x331E"
    },
    "13076": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13077": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13078": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13080": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13081": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13082": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13083": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13085": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13086": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13087": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13088": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13089": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13090": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "POP",
      "path": "25"
    },
    "13091": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13093": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13094": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13095": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13097": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13098": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "LT",
      "path": "25"
    },
    "13099": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13100": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3334"
    },
    "13103": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13104": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13106": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13107": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13108": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13109": {
      "op": "POP"
    },
    "13110": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13111": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13113": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13114": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13115": {
      "op": "PUSH4",
      "value": "0x72D7F665"
    },
    "13120": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13122": {
      "op": "SHL"
    },
    "13123": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13124": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13125": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28957,
        28961
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "13126": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "13128": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13129": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ADD",
      "path": "25"
    },
    "13130": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13131": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13132": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13133": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13134": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13135": {
      "op": "POP"
    },
    "13136": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13137": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13138": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28809,
        28842
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13140": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28809,
        28842
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13147": {
      "op": "SHL"
    },
    "13148": {
      "op": "SUB"
    },
    "13149": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13150": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "AND",
      "path": "25"
    },
    "13151": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13152": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE5AFECCA"
    },
    "13157": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13158": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "13160": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13161": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13162": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ADD",
      "path": "25"
    },
    "13163": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13164": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13166": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28749,
        28799
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13167": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13168": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13169": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13170": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13171": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13172": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SUB",
      "path": "25"
    },
    "13173": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ADD",
      "path": "25"
    },
    "13174": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13175": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28809,
        28842
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13176": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28948
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13177": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13178": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13179": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13180": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13181": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13182": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3386"
    },
    "13185": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13186": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13188": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13189": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13190": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13191": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "POP",
      "path": "25"
    },
    "13192": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "GAS",
      "path": "25"
    },
    "13193": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "CALL",
      "path": "25"
    },
    "13194": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13195": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13196": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13197": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x339A"
    },
    "13200": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13201": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13202": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13204": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13205": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13206": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13207": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13209": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13210": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13211": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "POP",
      "path": "25"
    },
    "13212": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "POP",
      "path": "25"
    },
    "13213": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "POP",
      "path": "25"
    },
    "13214": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "POP",
      "path": "25"
    },
    "13215": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13217": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13218": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13219": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13221": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13222": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "LT",
      "path": "25"
    },
    "13223": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13224": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x33B0"
    },
    "13227": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13228": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13230": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13231": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13232": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13233": {
      "op": "POP"
    },
    "13234": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13235": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13236": {
      "op": "POP"
    },
    "13237": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28973,
        29018
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 117,
      "value": "0x33DE"
    },
    "13240": {
      "offset": [
        1639,
        1667
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "13273": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28917,
        28963
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13274": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28973,
        28982
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DED"
    },
    "13277": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        28973,
        29018
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13278": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28973,
        29018
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13279": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29036
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 118
    },
    "13280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13286": {
      "op": "SHL"
    },
    "13287": {
      "op": "SUB"
    },
    "13288": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29046
      ],
      "op": "AND",
      "path": "25"
    },
    "13289": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29046
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD65AB5F2"
    },
    "13294": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13296": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13297": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13298": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "13303": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "AND",
      "path": "25"
    },
    "13304": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "13306": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "SHL",
      "path": "25"
    },
    "13307": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13308": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13309": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "13311": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "ADD",
      "path": "25"
    },
    "13312": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13314": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13316": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13317": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13318": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13319": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "SUB",
      "path": "25"
    },
    "13320": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13321": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13323": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13324": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13325": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "13326": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13327": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13328": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13329": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3419"
    },
    "13332": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13333": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13335": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13336": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13337": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13338": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "POP",
      "path": "25"
    },
    "13339": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "GAS",
      "path": "25"
    },
    "13340": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "CALL",
      "path": "25"
    },
    "13341": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13342": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13343": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13344": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x342D"
    },
    "13347": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13348": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13349": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13351": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13352": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13353": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13354": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13356": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13357": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13358": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "POP",
      "path": "25"
    },
    "13359": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "POP",
      "path": "25"
    },
    "13360": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "POP",
      "path": "25"
    },
    "13361": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        29028,
        29048
      ],
      "op": "POP",
      "path": "25"
    },
    "13362": {
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13363": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13364": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6282,
        6283
      ],
      "op": "POP",
      "path": "25"
    },
    "13365": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "o",
      "offset": [
        28648,
        29055
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13366": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13367": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13369": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 119,
      "value": "0x2BB2"
    },
    "13372": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13379": {
      "op": "SHL"
    },
    "13380": {
      "op": "SUB"
    },
    "13381": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13382": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "12"
    },
    "13383": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41EC"
    },
    "13386": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13387": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13388": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13390": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x2BB2"
    },
    "13393": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13400": {
      "op": "SHL"
    },
    "13401": {
      "op": "SUB"
    },
    "13402": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13403": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "12"
    },
    "13404": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4236"
    },
    "13407": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13408": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13409": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13411": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13412": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13413": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "3"
    },
    "13414": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 121
    },
    "13415": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13416": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "3"
    },
    "13417": {
      "branch": 274,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13418": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BB2"
    },
    "13421": {
      "branch": 274,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13422": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13424": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13425": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13432": {
      "op": "SHL"
    },
    "13433": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13434": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13435": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13437": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13439": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13440": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13441": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13442": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "13444": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "13446": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13447": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13448": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13449": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "13482": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "13484": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13485": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13486": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13487": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13488": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13489": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13490": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13491": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13492": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "3"
    },
    "13493": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "13495": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13496": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13497": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13498": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13499": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 122
    },
    "13500": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13501": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13502": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13509": {
      "op": "SHL"
    },
    "13510": {
      "op": "SUB"
    },
    "13511": {
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 123
    },
    "13512": {
      "branch": 265,
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "AND",
      "path": "5"
    },
    "13513": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3503"
    },
    "13516": {
      "branch": 265,
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13517": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13519": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13526": {
      "op": "SHL"
    },
    "13527": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13528": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13529": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13531": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13532": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13533": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13534": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13536": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13537": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13538": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13539": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13540": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13541": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13542": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13544": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13545": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13546": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13548": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13549": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13550": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5292"
    },
    "13553": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13555": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13556": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13557": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13559": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13560": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13561": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13562": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13563": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13565": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13566": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13567": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13568": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13569": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13570": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13571": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13572": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13574": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x350D"
    },
    "13577": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "13580": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13581": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13582": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13583": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "POP",
      "path": "5"
    },
    "13584": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 124,
      "value": "0x351F"
    },
    "13587": {
      "fn": "ERC1155._mint",
      "offset": [
        8262,
        8270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13588": {
      "fn": "ERC1155._mint",
      "offset": [
        8280,
        8281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13590": {
      "fn": "ERC1155._mint",
      "offset": [
        8284,
        8291
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13591": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30C2"
    },
    "13594": {
      "fn": "ERC1155._mint",
      "offset": [
        8311,
        8313
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13595": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8310
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FE5"
    },
    "13598": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8293,
        8314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13599": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13600": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 125,
      "value": "0x0"
    },
    "13602": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13603": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13604": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13605": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13607": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13609": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13610": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13611": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13612": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13614": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13615": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13616": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13623": {
      "op": "SHL"
    },
    "13624": {
      "op": "SUB"
    },
    "13625": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13626": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "AND",
      "path": "5"
    },
    "13627": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13628": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13629": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13630": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13631": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13632": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13633": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13634": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13635": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x354C"
    },
    "13638": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13639": {
      "fn": "ERC1155._mint",
      "offset": [
        8411,
        8417
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13640": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3460"
    },
    "13643": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13644": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13645": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13647": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13648": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13649": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13650": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8368
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13652": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13654": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13655": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13656": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13657": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13659": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13660": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13661": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13668": {
      "op": "SHL"
    },
    "13669": {
      "op": "SUB"
    },
    "13670": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13671": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13672": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "AND",
      "path": "5"
    },
    "13673": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13674": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13675": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13676": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13677": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13678": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13679": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13680": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13681": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13682": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13683": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13684": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "13685": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13686": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 126
    },
    "13687": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13688": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13689": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13690": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13691": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13692": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13693": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13694": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13695": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13696": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13697": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13698": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13699": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13700": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13701": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13702": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "AND",
      "path": "5"
    },
    "13703": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13704": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "13737": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13738": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13739": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13740": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13741": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SUB",
      "path": "5"
    },
    "13742": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "13743": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13744": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "LOG4",
      "path": "5"
    },
    "13745": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 127,
      "value": "0x35BF"
    },
    "13748": {
      "fn": "ERC1155._mint",
      "offset": [
        8532,
        8540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13749": {
      "fn": "ERC1155._mint",
      "offset": [
        8550,
        8551
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13751": {
      "fn": "ERC1155._mint",
      "offset": [
        8554,
        8561
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13752": {
      "fn": "ERC1155._mint",
      "offset": [
        8563,
        8565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13753": {
      "fn": "ERC1155._mint",
      "offset": [
        8567,
        8573
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13754": {
      "fn": "ERC1155._mint",
      "offset": [
        8575,
        8579
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13755": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4029"
    },
    "13758": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13759": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13760": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13761": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13762": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13763": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13764": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "13765": {
      "fn": "ERC1155._mint",
      "jump": "o",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13766": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23047,
        23284
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13767": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23129,
        23130
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13769": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23107,
        23126
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35D2"
    },
    "13772": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23107,
        23116
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "13773": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23121,
        23125
      ],
      "op": "DUP4",
      "path": "25"
    },
    "13774": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23107,
        23120
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x376A"
    },
    "13777": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        23107,
        23126
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13778": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23107,
        23126
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13779": {
      "branch": 238,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23107,
        23130
      ],
      "op": "GT",
      "path": "25"
    },
    "13780": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23103,
        23278
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "13781": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23103,
        23278
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3634"
    },
    "13784": {
      "branch": 238,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23103,
        23278
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13785": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23147,
        23159
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13787": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23175
      ],
      "op": "CALLER",
      "path": "25"
    },
    "13788": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23189,
        23208
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x35E5"
    },
    "13791": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23189,
        23198
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "13792": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23203,
        23207
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13793": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23189,
        23202
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x376A"
    },
    "13796": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        23189,
        23208
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13797": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23189,
        23208
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13798": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13800": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13801": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13803": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13804": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13805": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13806": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP6",
      "path": "25"
    },
    "13807": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP8",
      "path": "25"
    },
    "13808": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "GAS",
      "path": "25"
    },
    "13809": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "CALL",
      "path": "25"
    },
    "13810": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "13811": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13812": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13813": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13814": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13815": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13816": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13818": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP2",
      "path": "25"
    },
    "13819": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "EQ",
      "path": "25"
    },
    "13820": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3621"
    },
    "13823": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13824": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13826": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "13827": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13828": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13829": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "13831": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "NOT",
      "path": "25"
    },
    "13832": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "13834": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13835": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "ADD",
      "path": "25"
    },
    "13836": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "AND",
      "path": "25"
    },
    "13837": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13838": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "ADD",
      "path": "25"
    },
    "13839": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "13841": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13842": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13843": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP3",
      "path": "25"
    },
    "13844": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "13845": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "13846": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13848": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "13850": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "DUP5",
      "path": "25"
    },
    "13851": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "ADD",
      "path": "25"
    },
    "13852": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "13853": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3626"
    },
    "13856": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13857": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13858": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "13860": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "13861": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13862": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13863": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23165,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13864": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23146,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13865": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23146,
        23214
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "13866": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23146,
        23214
      ],
      "op": "POP",
      "path": "25"
    },
    "13867": {
      "branch": 239,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23236,
        23243
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 128
    },
    "13868": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23228,
        23244
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1DE9"
    },
    "13871": {
      "branch": 239,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23228,
        23244
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13872": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23228,
        23244
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "13874": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23228,
        23244
      ],
      "op": "DUP1",
      "path": "25"
    },
    "13875": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23228,
        23244
      ],
      "op": "REVERT",
      "path": "25"
    },
    "13876": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23103,
        23278
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "13877": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23047,
        23284
      ],
      "op": "POP",
      "path": "25"
    },
    "13878": {
      "fn": "CryptoChampions._refundSender",
      "jump": "o",
      "offset": [
        23047,
        23284
      ],
      "op": "JUMP",
      "path": "25"
    },
    "13879": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13886": {
      "op": "SHL"
    },
    "13887": {
      "op": "SUB"
    },
    "13888": {
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 129
    },
    "13889": {
      "branch": 266,
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "AND",
      "path": "5"
    },
    "13890": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x367C"
    },
    "13893": {
      "branch": 266,
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13894": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13896": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13903": {
      "op": "SHL"
    },
    "13904": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13905": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13906": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13908": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "13909": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13910": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13911": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13913": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "13914": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13915": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13916": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "13917": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13918": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13919": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "13921": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13922": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13923": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13925": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "13926": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13927": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51AA"
    },
    "13930": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "13932": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13933": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13934": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13936": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "13937": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13938": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "13939": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "13940": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13942": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13943": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13944": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13945": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "13946": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13947": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13948": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13949": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13951": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3686"
    },
    "13954": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34BA"
    },
    "13957": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13958": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13959": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13960": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "POP",
      "path": "5"
    },
    "13961": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 130,
      "value": "0x36B6"
    },
    "13964": {
      "fn": "ERC1155._burn",
      "offset": [
        10111,
        10119
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13965": {
      "fn": "ERC1155._burn",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP6",
      "path": "5"
    },
    "13966": {
      "fn": "ERC1155._burn",
      "offset": [
        10138,
        10139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13968": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3698"
    },
    "13971": {
      "fn": "ERC1155._burn",
      "offset": [
        10160,
        10162
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13972": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FE5"
    },
    "13975": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13976": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13977": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36A1"
    },
    "13980": {
      "fn": "ERC1155._burn",
      "offset": [
        10183,
        10189
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13981": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FE5"
    },
    "13984": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13985": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13986": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13988": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13989": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13990": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13992": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "ADD",
      "path": "5"
    },
    "13993": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13995": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13996": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13997": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13999": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14000": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14001": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "POP",
      "path": "5"
    },
    "14002": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10110
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C7"
    },
    "14005": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14006": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14007": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 131,
      "value": "0x36FD"
    },
    "14010": {
      "fn": "ERC1155._burn",
      "offset": [
        10271,
        10277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14011": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14013": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14014": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14015": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14017": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14018": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14020": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14021": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14022": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14024": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14025": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14026": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14028": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14029": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50B6"
    },
    "14032": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14034": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14035": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14036": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14038": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14039": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14040": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14041": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14043": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14045": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14046": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14047": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14048": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14050": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14051": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14052": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14059": {
      "op": "SHL"
    },
    "14060": {
      "op": "SUB"
    },
    "14061": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP12",
      "path": "5"
    },
    "14062": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "AND",
      "path": "5"
    },
    "14063": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14064": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14065": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14066": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14067": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14068": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14069": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14070": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "14071": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14072": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14073": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38D9"
    },
    "14076": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14077": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14078": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14080": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14081": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14082": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14083": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14085": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14087": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14088": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14089": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14090": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14092": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14093": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14094": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14101": {
      "op": "SHL"
    },
    "14102": {
      "op": "SUB"
    },
    "14103": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14104": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP11",
      "path": "5"
    },
    "14105": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "AND",
      "path": "5"
    },
    "14106": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14107": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14108": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14109": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14110": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14111": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14112": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14113": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14114": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14115": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14116": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14117": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14118": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "14119": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 132
    },
    "14120": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14121": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP9",
      "path": "5"
    },
    "14122": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14123": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14124": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14125": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14126": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14127": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14128": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14129": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14130": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14131": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14132": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14133": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14134": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14135": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14136": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14137": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14138": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "AND",
      "path": "5"
    },
    "14139": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14140": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "14173": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14174": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14175": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14176": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14177": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SUB",
      "path": "5"
    },
    "14178": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14179": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14180": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "LOG4",
      "path": "5"
    },
    "14181": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14182": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14183": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14184": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14185": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14186": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14187": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14189": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 133
    },
    "14190": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14191": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "3"
    },
    "14192": {
      "branch": 275,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14193": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C1"
    },
    "14196": {
      "branch": 275,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14197": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14199": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14200": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14207": {
      "op": "SHL"
    },
    "14208": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14209": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14210": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14212": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14214": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14215": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14216": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14217": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "14219": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "14221": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14222": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14223": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14224": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "14257": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "14259": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14260": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14261": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14262": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14263": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14264": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14265": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14266": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14267": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "3"
    },
    "14268": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "14270": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14271": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14272": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14273": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14274": {
      "op": "POP"
    },
    "14275": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 134
    },
    "14276": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "3"
    },
    "14277": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14278": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14279": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21689,
        22393
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14280": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21920,
        21986
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 135,
      "value": "0x37D5"
    },
    "14283": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21947,
        21955
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14284": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21957,
        21961
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14285": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21963,
        21965
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14286": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21967,
        21970
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14287": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21972,
        21979
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14288": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21981,
        21985
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14289": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21920,
        21946
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1CC8"
    },
    "14292": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        21920,
        21986
      ],
      "op": "JUMP",
      "path": "25"
    },
    "14293": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21920,
        21986
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14294": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22002,
        22011
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14296": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14297": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22021,
        22024
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14298": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22021,
        22031
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14299": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22017,
        22018
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14300": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22017,
        22031
      ],
      "op": "LT",
      "path": "25"
    },
    "14301": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14302": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x342D"
    },
    "14305": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14306": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14308": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22144
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14309": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22145,
        22146
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14310": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14311": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14312": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14313": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "LT",
      "path": "25"
    },
    "14314": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37EF"
    },
    "14317": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14318": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14319": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14320": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14322": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "MUL",
      "path": "25"
    },
    "14323": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14325": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "ADD",
      "path": "25"
    },
    "14326": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "ADD",
      "path": "25"
    },
    "14327": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22147
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14328": {
      "branch": 240,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22169
      ],
      "op": "GT",
      "path": "25"
    },
    "14329": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "DUP1",
      "path": "25"
    },
    "14330": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14331": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3818"
    },
    "14334": {
      "branch": 240,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14335": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "POP",
      "path": "25"
    },
    "14336": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "14338": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22176
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14339": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22177,
        22178
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14340": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14341": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14342": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14343": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "LT",
      "path": "25"
    },
    "14344": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x380D"
    },
    "14347": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14348": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14349": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14350": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14352": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "MUL",
      "path": "25"
    },
    "14353": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14355": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "ADD",
      "path": "25"
    },
    "14356": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "ADD",
      "path": "25"
    },
    "14357": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22179
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14358": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22203
      ],
      "op": "GT",
      "path": "25"
    },
    "14359": {
      "branch": 241,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22173,
        22203
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14360": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22141,
        22203
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14361": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22137,
        22272
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14362": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22137,
        22272
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3869"
    },
    "14365": {
      "branch": 241,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22137,
        22272
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14366": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22254,
        22256
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 136
    },
    "14367": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22235
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "14369": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14371": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22239
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14372": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22240,
        22241
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14373": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14374": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14375": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14376": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "LT",
      "path": "25"
    },
    "14377": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x382E"
    },
    "14380": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14381": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14382": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14383": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14385": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "MUL",
      "path": "25"
    },
    "14386": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14388": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "ADD",
      "path": "25"
    },
    "14389": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "ADD",
      "path": "25"
    },
    "14390": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22236,
        22242
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14391": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14392": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14393": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14395": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "ADD",
      "path": "25"
    },
    "14396": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14397": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14398": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14399": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14401": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "ADD",
      "path": "25"
    },
    "14402": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14404": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "14405": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22243
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14407": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "14410": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "EXP",
      "path": "25"
    },
    "14411": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14412": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "14413": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14420": {
      "op": "SHL"
    },
    "14421": {
      "op": "SUB"
    },
    "14422": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "MUL",
      "path": "25"
    },
    "14423": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "NOT",
      "path": "25"
    },
    "14424": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "AND",
      "path": "25"
    },
    "14425": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14426": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14433": {
      "op": "SHL"
    },
    "14434": {
      "op": "SUB"
    },
    "14435": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "AND",
      "path": "25"
    },
    "14436": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "MUL",
      "path": "25"
    },
    "14437": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "OR",
      "path": "25"
    },
    "14438": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14439": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "14440": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22223,
        22257
      ],
      "op": "POP",
      "path": "25"
    },
    "14441": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22137,
        22272
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14442": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "14444": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22292
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14445": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22293,
        22294
      ],
      "op": "DUP3",
      "path": "25"
    },
    "14446": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14447": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14448": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14449": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "LT",
      "path": "25"
    },
    "14450": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3877"
    },
    "14453": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14454": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14455": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14456": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14458": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "MUL",
      "path": "25"
    },
    "14459": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14461": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "ADD",
      "path": "25"
    },
    "14462": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "ADD",
      "path": "25"
    },
    "14463": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22295
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14464": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22289,
        22318
      ],
      "op": "GT",
      "path": "25"
    },
    "14465": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22285,
        22377
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "14466": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22285,
        22377
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x38D1"
    },
    "14469": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22285,
        22377
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14470": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22360,
        22362
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 137
    },
    "14471": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22349
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xB"
    },
    "14473": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14475": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22353
      ],
      "op": "DUP7",
      "path": "25"
    },
    "14476": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22354,
        22355
      ],
      "op": "DUP5",
      "path": "25"
    },
    "14477": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14478": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14479": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14480": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "LT",
      "path": "25"
    },
    "14481": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3896"
    },
    "14484": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "14485": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "INVALID",
      "path": "25"
    },
    "14486": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14487": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14489": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "MUL",
      "path": "25"
    },
    "14490": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14492": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "ADD",
      "path": "25"
    },
    "14493": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "ADD",
      "path": "25"
    },
    "14494": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22350,
        22356
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "14495": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14496": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14497": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14499": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "ADD",
      "path": "25"
    },
    "14500": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14501": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14502": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "14503": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "14505": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "ADD",
      "path": "25"
    },
    "14506": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14508": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "14509": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22357
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14511": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "14514": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "EXP",
      "path": "25"
    },
    "14515": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14516": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "14517": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "DUP2",
      "path": "25"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14524": {
      "op": "SHL"
    },
    "14525": {
      "op": "SUB"
    },
    "14526": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "MUL",
      "path": "25"
    },
    "14527": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "NOT",
      "path": "25"
    },
    "14528": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "AND",
      "path": "25"
    },
    "14529": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14530": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "DUP4",
      "path": "25"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14537": {
      "op": "SHL"
    },
    "14538": {
      "op": "SUB"
    },
    "14539": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "AND",
      "path": "25"
    },
    "14540": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "MUL",
      "path": "25"
    },
    "14541": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "OR",
      "path": "25"
    },
    "14542": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "14543": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "14544": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22338,
        22362
      ],
      "op": "POP",
      "path": "25"
    },
    "14545": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22285,
        22377
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "14546": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22033,
        22036
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 138,
      "value": "0x1"
    },
    "14548": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22033,
        22036
      ],
      "op": "ADD",
      "path": "25"
    },
    "14549": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x37D8"
    },
    "14552": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21997,
        22387
      ],
      "op": "JUMP",
      "path": "25"
    },
    "14553": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14554": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14556": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 139
    },
    "14557": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14558": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14559": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "3"
    },
    "14560": {
      "branch": 276,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14561": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3968"
    },
    "14564": {
      "branch": 276,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14565": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14567": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14574": {
      "op": "SHL"
    },
    "14575": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14576": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14577": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14579": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14580": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14581": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14582": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14584": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14585": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14586": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14587": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14588": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14589": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14590": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14591": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14592": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14593": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14594": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14595": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14596": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14598": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14599": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14600": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14601": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14602": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14603": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14604": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14606": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14607": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14608": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14609": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14610": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14611": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14613": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14614": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14615": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14616": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "3"
    },
    "14617": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14618": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x392D"
    },
    "14621": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14622": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14623": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14624": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14625": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14626": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14627": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14628": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14629": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14630": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14632": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14633": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3915"
    },
    "14636": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14637": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14638": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14639": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14640": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14641": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14642": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14643": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14644": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14645": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14646": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14647": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14648": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "14650": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14651": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14652": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14653": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x395A"
    },
    "14656": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14657": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14658": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14659": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14660": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14661": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14662": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "14664": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14665": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14667": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14668": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "14671": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "3"
    },
    "14672": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14673": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "3"
    },
    "14674": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "14675": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14676": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14677": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14679": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14680": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14681": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14682": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14683": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14684": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "14685": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14686": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14687": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14688": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14690": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14691": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14692": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14693": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14694": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14695": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14696": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14697": {
      "op": "POP"
    },
    "14698": {
      "op": "POP"
    },
    "14699": {
      "op": "POP"
    },
    "14700": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 140
    },
    "14701": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "3"
    },
    "14702": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14703": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14704": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13240,
        14018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14705": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3982"
    },
    "14708": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13486
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14715": {
      "op": "SHL"
    },
    "14716": {
      "op": "SUB"
    },
    "14717": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "AND",
      "path": "5"
    },
    "14718": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424E"
    },
    "14721": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14722": {
      "branch": 267,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14723": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14724": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CC8"
    },
    "14727": {
      "branch": 267,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14728": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13536,
        13538
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14735": {
      "op": "SHL"
    },
    "14736": {
      "op": "SUB"
    },
    "14737": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "AND",
      "path": "5"
    },
    "14738": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBC197C81"
    },
    "14743": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13563,
        13571
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14744": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13573,
        13577
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14745": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13579,
        13582
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14746": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13584,
        13591
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14747": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13593,
        13597
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14748": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14750": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14751": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14752": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "14757": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14758": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "14760": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SHL",
      "path": "5"
    },
    "14761": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14762": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14763": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14765": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14766": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14767": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14774": {
      "op": "SHL"
    },
    "14775": {
      "op": "SUB"
    },
    "14776": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14777": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14778": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14779": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14781": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14782": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14789": {
      "op": "SHL"
    },
    "14790": {
      "op": "SUB"
    },
    "14791": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "14792": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14793": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14794": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14796": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14797": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14798": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14800": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14801": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14802": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14804": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14805": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14806": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14808": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14809": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14810": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14811": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14812": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14813": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14814": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14815": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14816": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14817": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14818": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14819": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14820": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14822": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14823": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14824": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14825": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14826": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14827": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14828": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14830": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14831": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14832": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14834": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "14835": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14836": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14837": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14838": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14840": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14841": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14842": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14843": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14844": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14845": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A10"
    },
    "14848": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14849": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14850": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14851": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14852": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14853": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14854": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14855": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14856": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14857": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14859": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14860": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39F8"
    },
    "14863": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14864": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14865": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14866": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14867": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14868": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14869": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14870": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14871": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14872": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14873": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14874": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14875": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14876": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14877": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14878": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14879": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14880": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14881": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14882": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14883": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14885": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14886": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14887": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14888": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14889": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14890": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14891": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14893": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14894": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14895": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14897": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "14898": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14899": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14900": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14901": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14903": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14904": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14905": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14906": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14907": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14908": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A4F"
    },
    "14911": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14912": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14913": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14914": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14915": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14916": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14917": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14918": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14919": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14920": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14922": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14923": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A37"
    },
    "14926": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14927": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14928": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14929": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14930": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14931": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14932": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14933": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14934": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14935": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14936": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14937": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "14938": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14939": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14940": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14941": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14942": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14943": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14944": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14945": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14946": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14948": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14949": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14950": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14951": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14952": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14953": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14954": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14956": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14957": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14958": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14959": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14960": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14961": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14963": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14964": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14965": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14966": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "14967": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14968": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A8B"
    },
    "14971": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14972": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14973": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14974": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14975": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14976": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14977": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14978": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14979": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14980": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14982": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14983": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A73"
    },
    "14986": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14987": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14988": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14989": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14990": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14991": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14992": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14993": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "14994": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14995": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14996": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "14997": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14998": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "15000": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15001": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15002": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15003": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AB8"
    },
    "15006": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15007": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15008": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15009": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15010": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15011": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15012": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15014": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15015": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15017": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15018": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "15021": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXP",
      "path": "5"
    },
    "15022": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15023": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "NOT",
      "path": "5"
    },
    "15024": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15025": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15026": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15027": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15029": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15030": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15031": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15032": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15033": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15034": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "15035": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15036": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15037": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15038": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15039": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15040": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15041": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15042": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15043": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15044": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15046": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15048": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15049": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15050": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15051": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15052": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15053": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15055": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15056": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15057": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "15058": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15059": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15060": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15061": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ADD"
    },
    "15064": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15065": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15067": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15068": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15069": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15070": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15071": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "GAS",
      "path": "5"
    },
    "15072": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "CALL",
      "path": "5"
    },
    "15073": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15074": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15075": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15076": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15077": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15078": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15079": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B02"
    },
    "15082": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15083": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15084": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15086": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15087": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "15088": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15090": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15091": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15092": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15093": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AFD"
    },
    "15096": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15097": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15099": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15100": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15101": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15102": {
      "op": "POP"
    },
    "15103": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15104": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15106": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15107": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B97"
    },
    "15110": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15111": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B0E"
    },
    "15114": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F38"
    },
    "15117": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15118": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15119": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15120": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B19"
    },
    "15123": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15124": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "15125": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B60"
    },
    "15128": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15129": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15130": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 141,
      "value": "0x40"
    },
    "15132": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15139": {
      "op": "SHL"
    },
    "15140": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15141": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15142": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15144": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15146": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15147": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15148": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15149": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15150": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15151": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15152": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15153": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "15155": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15156": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15157": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15158": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15159": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15160": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15161": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "15162": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15163": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15164": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15165": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15166": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "15168": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15169": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15170": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15171": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15172": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15173": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15174": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15175": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15176": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15177": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15179": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15180": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15181": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392D"
    },
    "15184": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15185": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15186": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15187": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15188": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15189": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15190": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15191": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15192": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15193": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15195": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15196": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3915"
    },
    "15199": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15200": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15201": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 142,
      "value": "0x40"
    },
    "15203": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15210": {
      "op": "SHL"
    },
    "15211": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15212": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15213": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15215": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15216": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15217": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15218": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15220": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15221": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15222": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15223": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15224": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15225": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15226": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15228": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15229": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15230": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15232": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15233": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15234": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FDE"
    },
    "15237": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15239": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15240": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15241": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15243": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15244": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15245": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15246": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15247": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15249": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15250": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15251": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15252": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15253": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15254": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15255": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15262": {
      "op": "SHL"
    },
    "15263": {
      "op": "SUB"
    },
    "15264": {
      "op": "NOT"
    },
    "15265": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15266": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "AND",
      "path": "5"
    },
    "15267": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "15272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15274": {
      "op": "SHL"
    },
    "15275": {
      "branch": 268,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "EQ",
      "path": "5"
    },
    "15276": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342D"
    },
    "15279": {
      "branch": 268,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15280": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 143,
      "value": "0x40"
    },
    "15282": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15289": {
      "op": "SHL"
    },
    "15290": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15291": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15292": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15294": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15295": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15296": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15297": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15299": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15300": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15301": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15302": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15303": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15304": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15305": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15307": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15308": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15309": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15311": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15312": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15313": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5034"
    },
    "15316": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15318": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15319": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15320": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15322": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15323": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15324": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15325": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15326": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15328": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15329": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15330": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15331": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15332": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15333": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15334": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7337,
        7457
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15335": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7426
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 144,
      "value": "0x3BF0"
    },
    "15338": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7409,
        7413
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15339": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7415,
        7425
      ],
      "op": "CALLER",
      "path": "25"
    },
    "15340": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7408
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BBE"
    },
    "15343": {
      "fn": "CryptoChampions._hasRole",
      "jump": "i",
      "offset": [
        7401,
        7426
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15344": {
      "branch": 243,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7401,
        7426
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15345": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3634"
    },
    "15348": {
      "branch": 243,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15349": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15351": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15352": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7393,
        7427
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15353": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15354": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15356": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15357": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15358": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15359": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15361": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15362": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15363": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15364": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15366": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15367": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15368": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C11"
    },
    "15371": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15372": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15373": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3436"
    },
    "15376": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15377": {
      "branch": 253,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15378": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15379": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE9"
    },
    "15382": {
      "branch": 253,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15383": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 145,
      "value": "0x3C1E"
    },
    "15386": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34BA"
    },
    "15389": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15390": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15397": {
      "op": "SHL"
    },
    "15398": {
      "op": "SUB"
    },
    "15399": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15400": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15407": {
      "op": "SHL"
    },
    "15408": {
      "op": "SUB"
    },
    "15409": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15410": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15411": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "15444": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15446": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15447": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15449": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15450": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15451": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15452": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "15453": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15454": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15455": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15456": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15457": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15458": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15459": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15461": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15462": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15463": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15464": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15466": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15467": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15468": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15469": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15471": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15472": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15473": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C7A"
    },
    "15476": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15477": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15478": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4254"
    },
    "15481": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15482": {
      "branch": 254,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15483": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15484": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE9"
    },
    "15487": {
      "branch": 254,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15488": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 146,
      "value": "0x3C87"
    },
    "15491": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34BA"
    },
    "15494": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15495": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15502": {
      "op": "SHL"
    },
    "15503": {
      "op": "SUB"
    },
    "15504": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15505": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15512": {
      "op": "SHL"
    },
    "15513": {
      "op": "SUB"
    },
    "15514": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15515": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15516": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "15549": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15551": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15552": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15554": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15555": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15556": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15557": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "15558": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15559": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15560": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15561": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15562": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15563": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13758,
        14424
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15564": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13892,
        13904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15566": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13892,
        13904
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15567": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13820,
        13824
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15569": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15570": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15571": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15572": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13891
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15574": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15576": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15577": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15578": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15579": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15581": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15582": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15583": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13905
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15584": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15585": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15586": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15587": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15588": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15589": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15590": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15591": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15592": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13874,
        13914
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15593": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13917,
        13918
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "15595": {
      "op": "GT"
    },
    "15596": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13870,
        13956
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15597": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13870,
        13956
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3CF8"
    },
    "15600": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13870,
        13956
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15601": {
      "op": "POP"
    },
    "15602": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13941,
        13945
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 147,
      "value": "0x1"
    },
    "15604": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13934,
        13945
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x136A"
    },
    "15607": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13934,
        13945
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15608": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13870,
        13956
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15609": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14079,
        14091
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15611": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14079,
        14091
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15612": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14031,
        14058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15614": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15615": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15616": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15617": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14078
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15619": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15621": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15622": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15623": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15624": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15626": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15627": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15628": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14092
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15629": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "DUP6",
      "path": "25"
    },
    "15630": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15631": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15632": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15633": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15634": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15635": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15636": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15637": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14061,
        14101
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15638": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14128,
        14129
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "15640": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15641": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14136,
        14148
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "15643": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14136,
        14148
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15644": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14131,
        14132
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15645": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14131,
        14148
      ],
      "op": "GT",
      "path": "25"
    },
    "15646": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D6D"
    },
    "15649": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15650": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14191,
        14203
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15652": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14191,
        14203
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15653": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15655": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15656": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15657": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15658": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15660": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15662": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15663": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15664": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15665": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15667": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15668": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15669": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14204
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15670": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15671": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15672": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15673": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15674": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15675": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15676": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15677": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15678": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14207
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15679": {
      "branch": 244,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14173,
        14229
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15680": {
      "op": "GT"
    },
    "15681": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14169,
        14320
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15682": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14169,
        14320
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D65"
    },
    "15685": {
      "branch": 244,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14169,
        14320
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15686": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14289,
        14301
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 148,
      "value": "0xF"
    },
    "15688": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14289,
        14301
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15689": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15691": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15692": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15693": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15694": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15696": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15698": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15699": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15700": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15701": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15703": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15704": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15705": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14302
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15706": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15707": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15708": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15709": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15710": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15711": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15712": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15713": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15714": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15715": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14271,
        14305
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15716": {
      "op": "POP"
    },
    "15717": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14169,
        14320
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15718": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14150,
        14153
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 149,
      "value": "0x1"
    },
    "15720": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14150,
        14153
      ],
      "op": "ADD",
      "path": "25"
    },
    "15721": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D18"
    },
    "15724": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15725": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14111,
        14330
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15726": {
      "op": "POP"
    },
    "15727": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14391,
        14417
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 150,
      "value": "0x3D79"
    },
    "15730": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14391,
        14410
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15731": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14415,
        14416
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "15733": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14391,
        14414
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E58"
    },
    "15736": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "i",
      "offset": [
        14391,
        14417
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15737": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14391,
        14417
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15738": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14365,
        14377
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xF"
    },
    "15740": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14365,
        14377
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15741": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15743": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15744": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15745": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15746": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14364
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xD"
    },
    "15748": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15750": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15751": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15752": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15753": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15755": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15756": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15757": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14378
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15758": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "DUP8",
      "path": "25"
    },
    "15759": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15760": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15761": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15762": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15763": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15764": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15765": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "15766": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14387
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15767": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14417
      ],
      "op": "GT",
      "path": "25"
    },
    "15768": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14417
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15769": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14347,
        14417
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15770": {
      "op": "POP"
    },
    "15771": {
      "op": "POP"
    },
    "15772": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13758,
        14424
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15773": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13758,
        14424
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "15774": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13758,
        14424
      ],
      "op": "POP",
      "path": "25"
    },
    "15775": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "o",
      "offset": [
        13758,
        14424
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15776": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6453,
        6725
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15777": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15779": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6593,
        6597
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 151,
      "value": "0x13"
    },
    "15781": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6593,
        6597
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15782": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6564
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "15815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15821": {
      "op": "SHL"
    },
    "15822": {
      "op": "SUB"
    },
    "15823": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6574
      ],
      "op": "AND",
      "path": "25"
    },
    "15824": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6574
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x70A08231"
    },
    "15829": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6583,
        6587
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "15830": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15832": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15833": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15834": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "15839": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "AND",
      "path": "25"
    },
    "15840": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "15842": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SHL",
      "path": "25"
    },
    "15843": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15844": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15845": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "15847": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ADD",
      "path": "25"
    },
    "15848": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15849": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP3",
      "path": "25"
    },
    "15850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15856": {
      "op": "SHL"
    },
    "15857": {
      "op": "SUB"
    },
    "15858": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "AND",
      "path": "25"
    },
    "15859": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15860": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "15861": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15863": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ADD",
      "path": "25"
    },
    "15864": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "15865": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15866": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15867": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15869": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15871": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15872": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15873": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP4",
      "path": "25"
    },
    "15874": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "SUB",
      "path": "25"
    },
    "15875": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15876": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP7",
      "path": "25"
    },
    "15877": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15878": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "15879": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15880": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15881": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15882": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E12"
    },
    "15885": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15886": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15888": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15889": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15890": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15891": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15892": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "GAS",
      "path": "25"
    },
    "15893": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "15894": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15895": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15896": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15897": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E26"
    },
    "15900": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15901": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "15902": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15904": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15905": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "15906": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "15907": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15909": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15910": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15911": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15912": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15913": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15914": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "POP",
      "path": "25"
    },
    "15915": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "15917": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15918": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "15919": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "15921": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP2",
      "path": "25"
    },
    "15922": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "LT",
      "path": "25"
    },
    "15923": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15924": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E3C"
    },
    "15927": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15928": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15930": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15931": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15932": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15933": {
      "op": "POP"
    },
    "15934": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6589
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "15935": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6597
      ],
      "op": "LT",
      "path": "25"
    },
    "15936": {
      "branch": 245,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6560,
        6597
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "15937": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E49"
    },
    "15940": {
      "branch": 245,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "15941": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15943": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15944": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "REVERT",
      "path": "25"
    },
    "15945": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6552,
        6598
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "15946": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6667,
        6718
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 152,
      "value": "0x1346"
    },
    "15949": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x12"
    },
    "15951": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6685,
        6693
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15952": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6695,
        6699
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x13"
    },
    "15954": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6695,
        6699
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "15955": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6701,
        6717
      ],
      "op": "DUP5",
      "path": "25"
    },
    "15956": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6667,
        6684
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4269"
    },
    "15959": {
      "fn": "CryptoChampions._getRandomNumber",
      "jump": "i",
      "offset": [
        6667,
        6718
      ],
      "op": "JUMP",
      "path": "25"
    },
    "15960": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15961": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15963": {
      "branch": 277,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15964": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E67"
    },
    "15967": {
      "branch": 277,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15968": {
      "op": "POP"
    },
    "15969": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 153,
      "value": "0x0"
    },
    "15971": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1346"
    },
    "15974": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15975": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15976": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15977": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15978": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "3"
    },
    "15979": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15980": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "3"
    },
    "15981": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15982": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15983": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 154,
      "value": "0x3E74"
    },
    "15986": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15987": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "3"
    },
    "15988": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15989": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "3"
    },
    "15990": {
      "branch": 278,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "3"
    },
    "15991": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BB2"
    },
    "15994": {
      "branch": 278,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15995": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15997": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16004": {
      "op": "SHL"
    },
    "16005": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16006": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16007": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16009": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16010": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16011": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16012": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16014": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16015": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16016": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16017": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "16018": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16019": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16020": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "16022": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16023": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16024": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16026": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16027": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16028": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51F7"
    },
    "16031": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "16033": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16034": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "16035": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16037": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16038": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16039": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "16040": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "16041": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16043": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16044": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16045": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16046": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "16047": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16048": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16049": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16050": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16052": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 155
    },
    "16053": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16054": {
      "branch": 279,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "3"
    },
    "16055": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F07"
    },
    "16058": {
      "branch": 279,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16059": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16061": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16062": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16069": {
      "op": "SHL"
    },
    "16070": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16071": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16072": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16074": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16076": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16077": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16078": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16079": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "16081": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "16083": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16084": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16085": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16086": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "16119": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "16121": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16122": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16123": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16124": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16125": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16126": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16127": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16128": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16129": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "3"
    },
    "16130": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "16132": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16133": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16134": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16135": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16136": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 156
    },
    "16137": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "16138": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16139": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F10"
    },
    "16142": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16143": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "3"
    },
    "16144": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16145": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "3"
    },
    "16146": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "16147": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "16148": {
      "op": "POP"
    },
    "16149": {
      "op": "POP"
    },
    "16150": {
      "op": "POP"
    },
    "16151": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16152": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16153": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16155": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 157,
      "value": "0x2BB2"
    },
    "16158": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16159": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16160": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4413"
    },
    "16163": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16164": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6874,
        7047
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16165": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 158,
      "value": "0x0"
    },
    "16167": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16168": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16169": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16170": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6985
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "16172": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16174": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16175": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16177": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16178": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        6996
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16179": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16180": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16181": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6968,
        7009
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16182": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        7019,
        7040
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 159,
      "value": "0x1DE9"
    },
    "16185": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6986,
        6995
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16186": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        7019,
        7029
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4477"
    },
    "16189": {
      "fn": "CryptoChampions.fulfillRandomness",
      "jump": "i",
      "offset": [
        7019,
        7040
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16190": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19010,
        19590
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16191": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19077,
        19084
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16192": {
      "offset": [
        1766,
        1767
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16194": {
      "offset": [
        5739,
        5746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16195": {
      "offset": [
        5739,
        5768
      ],
      "op": "GT",
      "path": "25"
    },
    "16196": {
      "offset": [
        5739,
        5803
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16197": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16198": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F50"
    },
    "16201": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16202": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5739,
        5803
      ],
      "op": "POP",
      "path": "25"
    },
    "16203": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "16205": {
      "offset": [
        5772,
        5779
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16206": {
      "offset": [
        5772,
        5803
      ],
      "op": "GT",
      "path": "25"
    },
    "16207": {
      "branch": 246,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5772,
        5803
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "16208": {
      "offset": [
        5739,
        5803
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16209": {
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F59"
    },
    "16212": {
      "branch": 246,
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16213": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16215": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16216": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16217": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5731,
        5804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16218": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 160,
      "value": "0x0"
    },
    "16220": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16221": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16222": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16223": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19117
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "16225": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16227": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16228": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16230": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16231": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19126
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16232": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19132
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16233": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19132
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "16235": {
      "branch": 247,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19104,
        19132
      ],
      "op": "AND",
      "path": "25"
    },
    "16236": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F74"
    },
    "16239": {
      "branch": 247,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "16240": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16242": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16243": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16244": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19096,
        19133
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16245": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 161,
      "value": "0x0"
    },
    "16247": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "DUP3",
      "path": "25"
    },
    "16248": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16249": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16250": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19383
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16252": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16254": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16255": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16257": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16258": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16259": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16260": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19365,
        19405
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3F98"
    },
    "16263": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19365,
        19405
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16270": {
      "op": "SHL"
    },
    "16271": {
      "op": "SUB"
    },
    "16272": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "AND",
      "path": "25"
    },
    "16273": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19384,
        19391
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16274": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19371,
        19392
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "16276": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19365,
        19370
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3637"
    },
    "16279": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19365,
        19405
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16280": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19365,
        19405
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16281": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19486
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 162,
      "value": "0x7"
    },
    "16283": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19486
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16284": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19493
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3FA6"
    },
    "16287": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19493
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16288": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19491,
        19492
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "16290": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19490
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x376A"
    },
    "16293": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19474,
        19493
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16294": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19474,
        19493
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16295": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19459,
        19471
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "16297": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19459,
        19493
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16298": {
      "op": "POP"
    },
    "16299": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19535,
        19536
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 163,
      "value": "0x0"
    },
    "16301": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16302": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16303": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16304": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19515
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "16306": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "16308": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16309": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "DUP2",
      "path": "25"
    },
    "16310": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16311": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "16313": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16314": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16315": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19524
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16316": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19537
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16317": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19537
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16324": {
      "op": "SHL"
    },
    "16325": {
      "op": "SUB"
    },
    "16326": {
      "op": "NOT"
    },
    "16327": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19537
      ],
      "op": "AND",
      "path": "25"
    },
    "16328": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19537
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16329": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19503,
        19537
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16330": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19560
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 164,
      "value": "0x9"
    },
    "16332": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19569
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16333": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19569
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16334": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19569
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "16335": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19569
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16336": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19569
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "16337": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19583
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16338": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19583
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "16339": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16341": {
      "op": "NOT"
    },
    "16342": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19583
      ],
      "op": "AND",
      "path": "25"
    },
    "16343": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19583
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16344": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19547,
        19583
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "16345": {
      "fn": "CryptoChampions._burnElder",
      "jump": "o",
      "offset": [
        19010,
        19590
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16346": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16347": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16349": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 165,
      "value": "0x1346"
    },
    "16352": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16353": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B4E"
    },
    "16356": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16357": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16358": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16360": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16361": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16362": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14157,
        14158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16364": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16365": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16366": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16367": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16368": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16369": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16370": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16371": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "16372": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16373": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "16375": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16376": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16377": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16378": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16379": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16381": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16382": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16383": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16384": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16385": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16386": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "16387": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16388": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "16389": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16390": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16391": {
      "op": "POP"
    },
    "16392": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16393": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16394": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16395": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14180,
        14187
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 166
    },
    "16396": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16397": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14175,
        14176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16399": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16400": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16401": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16402": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "LT",
      "path": "5"
    },
    "16403": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4018"
    },
    "16406": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16407": {
      "dev": "Index out of range",
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "INVALID",
      "path": "5"
    },
    "16408": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16409": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16411": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16412": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16413": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MUL",
      "path": "5"
    },
    "16414": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16415": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16416": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16417": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16418": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16419": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16420": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14205,
        14210
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 167
    },
    "16421": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16422": {
      "op": "POP"
    },
    "16423": {
      "op": "POP"
    },
    "16424": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16425": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12493,
        13234
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16426": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x403B"
    },
    "16429": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16436": {
      "op": "SHL"
    },
    "16437": {
      "op": "SUB"
    },
    "16438": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "AND",
      "path": "5"
    },
    "16439": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424E"
    },
    "16442": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16443": {
      "branch": 269,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16444": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16445": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CC8"
    },
    "16448": {
      "branch": 269,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16449": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12764,
        12766
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16456": {
      "op": "SHL"
    },
    "16457": {
      "op": "SUB"
    },
    "16458": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "AND",
      "path": "5"
    },
    "16459": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF23A6E61"
    },
    "16464": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12786,
        12794
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16465": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12796,
        12800
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16466": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12802,
        12804
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16467": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12806,
        12812
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16468": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12814,
        12818
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16469": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16471": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16472": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16473": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "16478": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16479": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "16481": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SHL",
      "path": "5"
    },
    "16482": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16483": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16484": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "16486": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16487": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16488": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16495": {
      "op": "SHL"
    },
    "16496": {
      "op": "SUB"
    },
    "16497": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16498": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16499": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16500": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16502": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16503": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "16504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16510": {
      "op": "SHL"
    },
    "16511": {
      "op": "SUB"
    },
    "16512": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16513": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16514": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16515": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16517": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16518": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16519": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16520": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16521": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16523": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16524": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16525": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16526": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16527": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16529": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16530": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16531": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16533": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16534": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16535": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16536": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16537": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16538": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16539": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16540": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16541": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16542": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16543": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16544": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16545": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16547": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16548": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16549": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16550": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16551": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16552": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16553": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16555": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16556": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16557": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16558": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16559": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16560": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16562": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16563": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16564": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16565": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "16566": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16567": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40CA"
    },
    "16570": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16571": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16572": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16573": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16574": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16575": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16576": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16577": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16578": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16579": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16581": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16582": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40B2"
    },
    "16585": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16586": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16587": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16588": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16589": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16590": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16591": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16592": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16593": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16594": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16595": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16596": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16597": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "16599": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16600": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16601": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16602": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40F7"
    },
    "16605": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16606": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16607": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16608": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16609": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16610": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16611": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16613": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16614": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16616": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16617": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "16620": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXP",
      "path": "5"
    },
    "16621": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16622": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "NOT",
      "path": "5"
    },
    "16623": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16624": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16625": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16626": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16628": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16629": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16630": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16631": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16632": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16633": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "16634": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16635": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16636": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16637": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16638": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16639": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16640": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16641": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16643": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16645": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16646": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16647": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16648": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16649": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16650": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16652": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16653": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16654": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "16655": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16656": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16657": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16658": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x411A"
    },
    "16661": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16662": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16664": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16665": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16666": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16667": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16668": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "GAS",
      "path": "5"
    },
    "16669": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "CALL",
      "path": "5"
    },
    "16670": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "16671": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16672": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16673": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16674": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16675": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16676": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x413F"
    },
    "16679": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16680": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16681": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16683": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16684": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "16685": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16687": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16688": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "16689": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16690": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x413A"
    },
    "16693": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16694": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16696": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16697": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16698": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16699": {
      "op": "POP"
    },
    "16700": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16701": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16703": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16704": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x414B"
    },
    "16707": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16708": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B0E"
    },
    "16711": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F38"
    },
    "16714": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16715": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16722": {
      "op": "SHL"
    },
    "16723": {
      "op": "SUB"
    },
    "16724": {
      "op": "NOT"
    },
    "16725": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16726": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "AND",
      "path": "5"
    },
    "16727": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "16732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16734": {
      "op": "SHL"
    },
    "16735": {
      "branch": 270,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "EQ",
      "path": "5"
    },
    "16736": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342D"
    },
    "16739": {
      "branch": 270,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16740": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 168,
      "value": "0x40"
    },
    "16742": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16749": {
      "op": "SHL"
    },
    "16750": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16751": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16752": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "16754": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16755": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16756": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16757": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16759": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16760": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16761": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16762": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "16763": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16764": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16765": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "16767": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16768": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16769": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16771": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16772": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16773": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5034"
    },
    "16776": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "16778": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16779": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "16780": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16782": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "16783": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16784": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "16785": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "16786": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16788": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16789": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16790": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16791": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "16792": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16793": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16794": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21360,
        21621
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16795": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21425,
        21432
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "16797": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21425,
        21432
      ],
      "op": "DUP1",
      "path": "25"
    },
    "16798": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21482,
        21483
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "16800": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21538
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 169,
      "value": "0x41C1"
    },
    "16803": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21534,
        21537
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "16805": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21529
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2664"
    },
    "16808": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21527,
        21528
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "16810": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21522
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x41BB"
    },
    "16813": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21510
      ],
      "op": "DUP9",
      "path": "25"
    },
    "16814": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21515,
        21521
      ],
      "op": "PUSH8",
      "path": "25",
      "value": "0xDE0B6B3A7640000"
    },
    "16823": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21514
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E58"
    },
    "16826": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21501,
        21522
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16827": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21522
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16828": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21526
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16829": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21526
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E58"
    },
    "16832": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21501,
        21529
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16833": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21501,
        21538
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16834": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21493,
        21538
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "16835": {
      "op": "POP"
    },
    "16836": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21556,
        21591
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 170,
      "value": "0x41E4"
    },
    "16839": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21566,
        21590
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x41DD"
    },
    "16842": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21587,
        21589
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "16844": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21566,
        21582
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2664"
    },
    "16847": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21566,
        21570
      ],
      "op": "DUP5",
      "path": "25"
    },
    "16848": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21575,
        21581
      ],
      "op": "PUSH8",
      "path": "25",
      "value": "0xDE0B6B3A7640000"
    },
    "16857": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21566,
        21574
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3E58"
    },
    "16860": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21566,
        21582
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16861": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21566,
        21590
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16862": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21556,
        21561
      ],
      "op": "DUP4",
      "path": "25"
    },
    "16863": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21556,
        21561
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "16864": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21556,
        21565
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "16867": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21556,
        21591
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16868": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21556,
        21591
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "16869": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21548,
        21591
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "16870": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21360,
        21621
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "16871": {
      "op": "POP"
    },
    "16872": {
      "op": "POP"
    },
    "16873": {
      "op": "POP"
    },
    "16874": {
      "op": "POP"
    },
    "16875": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "o",
      "offset": [
        21360,
        21621
      ],
      "op": "JUMP",
      "path": "25"
    },
    "16876": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16877": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16879": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41F8"
    },
    "16882": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16883": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16884": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4236"
    },
    "16887": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16888": {
      "branch": 271,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16889": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x422E"
    },
    "16892": {
      "branch": 271,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16893": {
      "op": "POP"
    },
    "16894": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 171
    },
    "16895": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16896": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16898": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16899": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16900": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "16901": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16902": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16903": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16905": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16906": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16907": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16908": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16910": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16911": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16912": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16913": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16914": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "16915": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "16916": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16917": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16918": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16919": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 172
    },
    "16920": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16921": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16922": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16923": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16924": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16925": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "12"
    },
    "16926": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "12"
    },
    "16927": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16928": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "16929": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16930": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16932": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16933": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16934": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16935": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16936": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16937": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16938": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 173,
      "value": "0x1346"
    },
    "16941": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16942": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16943": {
      "op": "POP"
    },
    "16944": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 174,
      "value": "0x0"
    },
    "16946": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1346"
    },
    "16949": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16950": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16951": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16953": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 175
    },
    "16954": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16955": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16956": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16958": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16959": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16960": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16961": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "12"
    },
    "16962": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16964": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16965": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16967": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16968": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16969": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16970": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16971": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16972": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16973": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16974": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16975": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "16976": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "10",
      "statement": 176
    },
    "16977": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "16978": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "16979": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "10"
    },
    "16980": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16981": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16983": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 177,
      "value": "0x2BB2"
    },
    "16986": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16993": {
      "op": "SHL"
    },
    "16994": {
      "op": "SUB"
    },
    "16995": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16996": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "12"
    },
    "16997": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B52"
    },
    "17000": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17001": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7527,
        8617
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17002": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7649,
        7666
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7682
      ],
      "op": "PUSH32",
      "path": "28",
      "statement": 178,
      "value": "0x0"
    },
    "17037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17043": {
      "op": "SHL"
    },
    "17044": {
      "op": "SUB"
    },
    "17045": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "AND",
      "path": "28"
    },
    "17046": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4000AEA0"
    },
    "17051": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7699,
        7713
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x0"
    },
    "17084": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7715,
        7719
      ],
      "op": "DUP6",
      "path": "28"
    },
    "17085": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        7740
      ],
      "op": "DUP8",
      "path": "28"
    },
    "17086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7742,
        7747
      ],
      "op": "DUP7",
      "path": "28"
    },
    "17087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17089": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "17093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17094": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17096": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "17100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17102": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17103": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17105": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "28"
    },
    "17106": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "17107": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "17108": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "17109": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "28"
    },
    "17110": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17112": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17113": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17117": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "28"
    },
    "17118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "28"
    },
    "17119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17120": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "17129": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "17134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "17135": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "17137": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SHL",
      "path": "28"
    },
    "17138": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17139": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "17142": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "17145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17151": {
      "op": "SHL"
    },
    "17152": {
      "op": "SUB"
    },
    "17153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "17154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17158": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17162": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17166": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17171": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "17172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17173": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17176": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17177": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17178": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17179": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17180": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17182": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "17184": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17186": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17187": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17188": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17191": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17192": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17195": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17197": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17200": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "28"
    },
    "17201": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17202": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4345"
    },
    "17205": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "17206": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17208": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17209": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17212": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x432D"
    },
    "17220": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMP",
      "path": "28"
    },
    "17221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17222": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17224": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17225": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17228": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17229": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17230": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17231": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "17234": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "17235": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4372"
    },
    "17240": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "17241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "17244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17246": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "17248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17249": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17251": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "17252": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "17255": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXP",
      "path": "28"
    },
    "17256": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "17257": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "NOT",
      "path": "28"
    },
    "17258": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "28"
    },
    "17259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17260": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17261": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17263": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "28"
    },
    "17264": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "17265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17267": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17268": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "17269": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17270": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17271": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17272": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17273": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17274": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17276": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17278": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17279": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17280": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "28"
    },
    "17281": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "28"
    },
    "17282": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17283": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17285": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP8",
      "path": "28"
    },
    "17286": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17287": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "17288": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17289": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17290": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17291": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4393"
    },
    "17294": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "17295": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17297": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17298": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "17299": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17300": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17301": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "GAS",
      "path": "28"
    },
    "17302": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "CALL",
      "path": "28"
    },
    "17303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17304": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17305": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43A7"
    },
    "17309": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "17310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "17311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "17315": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "17316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17318": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "17319": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17321": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17322": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "28"
    },
    "17324": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "17327": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "17328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "28"
    },
    "17332": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "17333": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43BD"
    },
    "17336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "17337": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17339": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "28"
    },
    "17340": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "28"
    },
    "17341": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17342": {
      "op": "POP"
    },
    "17343": {
      "op": "POP"
    },
    "17344": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17346": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP5",
      "path": "28"
    },
    "17347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17349": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8069
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "17351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17353": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17354": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17356": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "17358": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "17359": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43DD"
    },
    "17362": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17363": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "DUP7",
      "path": "28"
    },
    "17364": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "DUP6",
      "path": "28"
    },
    "17366": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17367": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "17368": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17369": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8030
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C18"
    },
    "17372": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMP",
      "path": "28"
    },
    "17373": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 179,
      "value": "0x0"
    },
    "17376": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP7",
      "path": "28"
    },
    "17377": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17378": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17379": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8544
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "17381": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17383": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17384": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17386": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17387": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "17388": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "17389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "17391": {
      "op": "POP"
    },
    "17392": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43FA"
    },
    "17395": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17396": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8559,
        8560
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "17398": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8558
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3460"
    },
    "17401": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMP",
      "path": "28"
    },
    "17402": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "17405": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP7",
      "path": "28"
    },
    "17406": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP2",
      "path": "28"
    },
    "17407": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17408": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8525
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "17410": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "17412": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "17413": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "17415": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "17416": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "17417": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8561
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "17418": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8610
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 180,
      "value": "0x3220"
    },
    "17421": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8526,
        8534
      ],
      "op": "DUP6",
      "path": "28"
    },
    "17422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP3",
      "path": "28"
    },
    "17423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8591
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C5F"
    },
    "17426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8578,
        8610
      ],
      "op": "JUMP",
      "path": "28"
    },
    "17427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17428": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 181
    },
    "17429": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17430": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17433": {
      "branch": 272,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17434": {
      "op": "LT"
    },
    "17435": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4455"
    },
    "17438": {
      "branch": 272,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17439": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17441": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "17442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17448": {
      "op": "SHL"
    },
    "17449": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17450": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17451": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17453": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17454": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17455": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17456": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17458": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17459": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17460": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17461": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "17462": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17463": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17464": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "17466": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17467": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17468": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17470": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17471": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17472": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5012"
    },
    "17475": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "17477": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17478": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "17479": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17481": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17482": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17483": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "17484": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "17485": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17487": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "17488": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17489": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17490": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "17491": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17492": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "REVERT",
      "path": "12"
    },
    "17493": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17494": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 182
    },
    "17495": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17497": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "12"
    },
    "17498": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17499": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17500": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17501": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17502": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "12"
    },
    "17503": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4464"
    },
    "17506": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17507": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "12"
    },
    "17508": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17509": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17510": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17512": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17513": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17515": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17517": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17518": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "12"
    },
    "17519": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17520": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17521": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "12"
    },
    "17522": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17523": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17524": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "17525": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "17526": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17527": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14536,
        17285
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17528": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17530": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17531": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17532": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17533": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14614
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "17535": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17537": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17538": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17540": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17541": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17542": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14596,
        14625
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17543": {
      "offset": [
        2135,
        2136
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "17545": {
      "offset": [
        5914,
        5943
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17546": {
      "branch": 248,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5914,
        5943
      ],
      "op": "GT",
      "path": "25"
    },
    "17547": {
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4493"
    },
    "17550": {
      "branch": 248,
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "17551": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17553": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17554": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "REVERT",
      "path": "25"
    },
    "17555": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5906,
        5944
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17556": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17558": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17559": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17560": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17561": {
      "offset": [
        5993,
        6000
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17563": {
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17566": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17568": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17569": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6008
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17570": {
      "offset": [
        5993,
        6014
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17571": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6014
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17573": {
      "branch": 249,
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5993,
        6014
      ],
      "op": "AND",
      "path": "25"
    },
    "17574": {
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x44AE"
    },
    "17577": {
      "branch": 249,
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "17578": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17580": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17581": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "REVERT",
      "path": "25"
    },
    "17582": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        5985,
        6015
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17583": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14637,
        14651
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17585": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17586": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17587": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17588": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14672
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x14"
    },
    "17590": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17592": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17593": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17594": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17595": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17597": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17598": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "DUP4",
      "path": "25"
    },
    "17599": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17600": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17601": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14733
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "17603": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "DUP4",
      "path": "25"
    },
    "17604": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17605": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17606": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "DUP5",
      "path": "25"
    },
    "17607": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17608": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17609": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 183
    },
    "17610": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17611": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17612": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17614": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17615": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17616": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17617": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17618": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "DUP4",
      "path": "25"
    },
    "17619": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14803
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17620": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14809
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17622": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14809
      ],
      "op": "ADD",
      "path": "25"
    },
    "17623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17624": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17625": {
      "op": "PUSH10",
      "value": "0xFF000000000000000000"
    },
    "17636": {
      "op": "NOT"
    },
    "17637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "AND",
      "path": "25"
    },
    "17638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17640": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "17642": {
      "op": "SHL"
    },
    "17643": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "OR",
      "path": "25"
    },
    "17644": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17645": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14788,
        14813
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17646": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14654,
        14683
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17647": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14887,
        14913
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 184,
      "value": "0x44F9"
    },
    "17650": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14897,
        14898
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "17652": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14716,
        14744
      ],
      "op": "DUP4",
      "path": "25"
    },
    "17653": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14887,
        14896
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17656": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        14887,
        14913
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17657": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14887,
        14913
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17658": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17660": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17661": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17662": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17663": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14847
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17665": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17667": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17668": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17670": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17671": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14855
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17672": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14866
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17674": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14840,
        14866
      ],
      "op": "ADD",
      "path": "25"
    },
    "17675": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17676": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17677": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17679": {
      "op": "NOT"
    },
    "17680": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "AND",
      "path": "25"
    },
    "17681": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17683": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17684": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17685": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "AND",
      "path": "25"
    },
    "17687": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17688": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17689": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17690": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "OR",
      "path": "25"
    },
    "17691": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17692": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17693": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17694": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17695": {
      "op": "POP"
    },
    "17696": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14982,
        15011
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 185,
      "value": "0x452A"
    },
    "17699": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14992,
        14993
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "17701": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14839,
        14913
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17702": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14982,
        14991
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17705": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        14982,
        15011
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17706": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14982,
        15011
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17707": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17709": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17710": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17711": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17712": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14946
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17714": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17716": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17717": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17719": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17720": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14954
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17721": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14961
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17723": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14939,
        14961
      ],
      "op": "ADD",
      "path": "25"
    },
    "17724": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17725": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17726": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17728": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17729": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17730": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "AND",
      "path": "25"
    },
    "17731": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "17734": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "MUL",
      "path": "25"
    },
    "17735": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "17738": {
      "op": "NOT"
    },
    "17739": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17740": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17741": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "AND",
      "path": "25"
    },
    "17742": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17743": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17745": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "OR",
      "path": "25"
    },
    "17746": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17747": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17749": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17750": {
      "op": "POP"
    },
    "17751": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15079,
        15108
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 186,
      "value": "0x4561"
    },
    "17754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15089,
        15090
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "17756": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        14938,
        15011
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17757": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15079,
        15088
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17760": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15079,
        15108
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17761": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15079,
        15108
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17762": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17764": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17765": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17766": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17767": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15043
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17769": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17771": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17772": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17774": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17775": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15051
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17776": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17778": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15036,
        15058
      ],
      "op": "ADD",
      "path": "25"
    },
    "17779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17780": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17781": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17783": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17784": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17785": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "AND",
      "path": "25"
    },
    "17786": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "PUSH3",
      "path": "25",
      "value": "0x10000"
    },
    "17790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "MUL",
      "path": "25"
    },
    "17791": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "17795": {
      "op": "NOT"
    },
    "17796": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17797": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17798": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "AND",
      "path": "25"
    },
    "17799": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17800": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17801": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17802": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "OR",
      "path": "25"
    },
    "17803": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17804": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17805": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17806": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17807": {
      "op": "POP"
    },
    "17808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15176,
        15205
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 187,
      "value": "0x459A"
    },
    "17811": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15186,
        15187
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "17813": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15035,
        15108
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17814": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15176,
        15185
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17817": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15176,
        15205
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17818": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15176,
        15205
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17819": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17821": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17822": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17824": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15140
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17826": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17828": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17829": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17831": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17832": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15148
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17833": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15155
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17835": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15133,
        15155
      ],
      "op": "ADD",
      "path": "25"
    },
    "17836": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17837": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17838": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17840": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17841": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17842": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "AND",
      "path": "25"
    },
    "17843": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1000000"
    },
    "17848": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "MUL",
      "path": "25"
    },
    "17849": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "17854": {
      "op": "NOT"
    },
    "17855": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17856": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17857": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "AND",
      "path": "25"
    },
    "17858": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17859": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17860": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17861": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "OR",
      "path": "25"
    },
    "17862": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17863": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17864": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17865": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17866": {
      "op": "POP"
    },
    "17867": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15273,
        15302
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 188,
      "value": "0x45D5"
    },
    "17870": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15283,
        15284
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "17872": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15132,
        15205
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17873": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15273,
        15282
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17876": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15273,
        15302
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17877": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15273,
        15302
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17878": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17880": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17881": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17882": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17883": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15237
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17885": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17887": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17888": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17890": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17891": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15245
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17892": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15252
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17894": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15230,
        15252
      ],
      "op": "ADD",
      "path": "25"
    },
    "17895": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17896": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17897": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17899": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17900": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17901": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "AND",
      "path": "25"
    },
    "17902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17906": {
      "op": "SHL"
    },
    "17907": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "MUL",
      "path": "25"
    },
    "17908": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "17914": {
      "op": "NOT"
    },
    "17915": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17916": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17917": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "AND",
      "path": "25"
    },
    "17918": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17919": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17920": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17921": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "OR",
      "path": "25"
    },
    "17922": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17923": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17924": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17925": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17926": {
      "op": "POP"
    },
    "17927": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15374,
        15403
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 189,
      "value": "0x4611"
    },
    "17930": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15384,
        15385
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "17932": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15229,
        15302
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17933": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15374,
        15383
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17936": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15374,
        15403
      ],
      "op": "JUMP",
      "path": "25"
    },
    "17937": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15374,
        15403
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17938": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "17940": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "DUP6",
      "path": "25"
    },
    "17941": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "DUP2",
      "path": "25"
    },
    "17942": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17943": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15335
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "17945": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "17947": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "17948": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "17950": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17951": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15343
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "17952": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15353
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "17954": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15328,
        15353
      ],
      "op": "ADD",
      "path": "25"
    },
    "17955": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "DUP1",
      "path": "25"
    },
    "17956": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "17957": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "17959": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17960": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17961": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "AND",
      "path": "25"
    },
    "17962": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "PUSH6",
      "path": "25",
      "value": "0x10000000000"
    },
    "17969": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "MUL",
      "path": "25"
    },
    "17970": {
      "op": "PUSH6",
      "value": "0xFF0000000000"
    },
    "17977": {
      "op": "NOT"
    },
    "17978": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17979": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "17980": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "AND",
      "path": "25"
    },
    "17981": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17982": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17983": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "17984": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "OR",
      "path": "25"
    },
    "17985": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17986": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "17987": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "17988": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "17989": {
      "op": "POP"
    },
    "17990": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15475,
        15505
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 190,
      "value": "0x4650"
    },
    "17993": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15485,
        15487
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1E"
    },
    "17995": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15327,
        15403
      ],
      "op": "DUP3",
      "path": "25"
    },
    "17996": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15475,
        15484
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "17999": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15475,
        15505
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18000": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15475,
        15505
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18001": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18003": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18004": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18005": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18006": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15435
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18008": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18010": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18011": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18013": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18014": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15443
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18015": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15454
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18017": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15428,
        15454
      ],
      "op": "ADD",
      "path": "25"
    },
    "18018": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18019": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18020": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18022": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18023": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18024": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "AND",
      "path": "25"
    },
    "18025": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "PUSH7",
      "path": "25",
      "value": "0x1000000000000"
    },
    "18033": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "MUL",
      "path": "25"
    },
    "18034": {
      "op": "PUSH7",
      "value": "0xFF000000000000"
    },
    "18042": {
      "op": "NOT"
    },
    "18043": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18044": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18045": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "AND",
      "path": "25"
    },
    "18046": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18047": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18048": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18049": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "OR",
      "path": "25"
    },
    "18050": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18051": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18052": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18053": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18054": {
      "op": "POP"
    },
    "18055": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15576,
        15606
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 191,
      "value": "0x4691"
    },
    "18058": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15586,
        15588
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x18"
    },
    "18060": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15427,
        15505
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18061": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15576,
        15585
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18064": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15576,
        15606
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18065": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15576,
        15606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18066": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18068": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18069": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18070": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18071": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15538
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18073": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18075": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18076": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18078": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18079": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15546
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18080": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18082": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15555
      ],
      "op": "ADD",
      "path": "25"
    },
    "18083": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18084": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18085": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18087": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18088": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18089": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "AND",
      "path": "25"
    },
    "18090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18092": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "18094": {
      "op": "SHL"
    },
    "18095": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "MUL",
      "path": "25"
    },
    "18096": {
      "op": "PUSH8",
      "value": "0xFF00000000000000"
    },
    "18105": {
      "op": "NOT"
    },
    "18106": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18108": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "AND",
      "path": "25"
    },
    "18109": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18110": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18111": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18112": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "OR",
      "path": "25"
    },
    "18113": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18114": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18115": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18116": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18117": {
      "op": "POP"
    },
    "18118": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15676,
        15705
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 192,
      "value": "0x46D0"
    },
    "18121": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15531,
        15555
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x7"
    },
    "18123": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15530,
        15606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18124": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18127": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15676,
        15705
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18128": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15676,
        15705
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18129": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18131": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18132": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18133": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18134": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15639
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18136": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18138": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18139": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18141": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18142": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15647
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18143": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15655
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18145": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15632,
        15655
      ],
      "op": "ADD",
      "path": "25"
    },
    "18146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18147": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18148": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18150": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18151": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18152": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "AND",
      "path": "25"
    },
    "18153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18157": {
      "op": "SHL"
    },
    "18158": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "MUL",
      "path": "25"
    },
    "18159": {
      "op": "PUSH9",
      "value": "0xFF0000000000000000"
    },
    "18169": {
      "op": "NOT"
    },
    "18170": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18172": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "AND",
      "path": "25"
    },
    "18173": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18174": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18176": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "OR",
      "path": "25"
    },
    "18177": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18178": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18179": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18180": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18181": {
      "op": "POP"
    },
    "18182": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15770,
        15800
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 193,
      "value": "0x4710"
    },
    "18185": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15780,
        15782
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "18187": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15631,
        15705
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18188": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15770,
        15779
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18191": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15770,
        15800
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18192": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15770,
        15800
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18193": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18197": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18198": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15738
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18200": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18203": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18205": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18206": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15746
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18207": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15749
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18209": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15731,
        15749
      ],
      "op": "ADD",
      "path": "25"
    },
    "18210": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18211": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18212": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18214": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18216": {
      "op": "SHL"
    },
    "18217": {
      "op": "NOT"
    },
    "18218": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "AND",
      "path": "25"
    },
    "18219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18221": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18223": {
      "op": "SHL"
    },
    "18224": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18226": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18227": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "AND",
      "path": "25"
    },
    "18229": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18230": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "MUL",
      "path": "25"
    },
    "18231": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18233": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18234": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "OR",
      "path": "25"
    },
    "18235": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18236": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18237": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18238": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18239": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18240": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15730,
        15800
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18241": {
      "op": "POP"
    },
    "18242": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15876
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 194,
      "value": "0x4750"
    },
    "18245": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15876
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18246": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15869
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18247": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15869
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18248": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15869
      ],
      "op": "DIV",
      "path": "25"
    },
    "18249": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15869
      ],
      "op": "AND",
      "path": "25"
    },
    "18250": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15874,
        15875
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "18252": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15873
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18255": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15851,
        15876
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18256": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15851,
        15876
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18257": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18259": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18260": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18261": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18262": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15831
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18266": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18267": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18269": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18270": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15839
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18271": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15842
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18273": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15842
      ],
      "op": "ADD",
      "path": "25"
    },
    "18274": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18275": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18276": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18278": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18279": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18280": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18281": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "AND",
      "path": "25"
    },
    "18282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18284": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18286": {
      "op": "SHL"
    },
    "18287": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "MUL",
      "path": "25"
    },
    "18288": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18290": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "18292": {
      "op": "SHL"
    },
    "18293": {
      "op": "NOT"
    },
    "18294": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18295": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18296": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "AND",
      "path": "25"
    },
    "18297": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18298": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18299": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18300": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "OR",
      "path": "25"
    },
    "18301": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18302": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15824,
        15877
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18303": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15929,
        15959
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 195,
      "value": "0x4789"
    },
    "18306": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15939,
        15941
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x15"
    },
    "18308": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15943,
        15958
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18309": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15929,
        15938
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18312": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        15929,
        15959
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18313": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15929,
        15959
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18314": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18316": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18317": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18318": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18319": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15895
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18321": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18323": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18324": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18326": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18327": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15903
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18328": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15908
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18330": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15888,
        15908
      ],
      "op": "ADD",
      "path": "25"
    },
    "18331": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18332": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18333": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18335": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18337": {
      "op": "SHL"
    },
    "18338": {
      "op": "NOT"
    },
    "18339": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "AND",
      "path": "25"
    },
    "18340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18342": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18344": {
      "op": "SHL"
    },
    "18345": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18347": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18348": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18349": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "AND",
      "path": "25"
    },
    "18350": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18351": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "MUL",
      "path": "25"
    },
    "18352": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18353": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18354": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18355": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "OR",
      "path": "25"
    },
    "18356": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18357": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18358": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18359": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18360": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18361": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15887,
        15959
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18362": {
      "op": "POP"
    },
    "18363": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16039
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 196,
      "value": "0x47C9"
    },
    "18366": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16039
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18367": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16032
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18368": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16032
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18369": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16032
      ],
      "op": "DIV",
      "path": "25"
    },
    "18370": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16032
      ],
      "op": "AND",
      "path": "25"
    },
    "18371": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16037,
        16038
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "18373": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16036
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18376": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16012,
        16039
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18377": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16012,
        16039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18378": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18380": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18381": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18382": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18383": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15990
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18385": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18387": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18388": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18390": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18391": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        15998
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18392": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16003
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18394": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16003
      ],
      "op": "ADD",
      "path": "25"
    },
    "18395": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18396": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18397": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18399": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18400": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18401": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18402": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "AND",
      "path": "25"
    },
    "18403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18405": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18407": {
      "op": "SHL"
    },
    "18408": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "MUL",
      "path": "25"
    },
    "18409": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "18413": {
      "op": "SHL"
    },
    "18414": {
      "op": "NOT"
    },
    "18415": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18416": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18417": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "AND",
      "path": "25"
    },
    "18418": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18419": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18420": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18421": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "OR",
      "path": "25"
    },
    "18422": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18423": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        15983,
        16040
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18424": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16095,
        16125
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 197,
      "value": "0x4802"
    },
    "18427": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16105,
        16107
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "18429": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16109,
        16124
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18430": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16095,
        16104
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18433": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16095,
        16125
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18434": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16095,
        16125
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18435": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18437": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18438": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18439": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18440": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18442": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18444": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18445": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18447": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18448": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16066
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18449": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16074
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18451": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16051,
        16074
      ],
      "op": "ADD",
      "path": "25"
    },
    "18452": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18453": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18454": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18458": {
      "op": "SHL"
    },
    "18459": {
      "op": "NOT"
    },
    "18460": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "AND",
      "path": "25"
    },
    "18461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18465": {
      "op": "SHL"
    },
    "18466": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18468": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18469": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18470": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "AND",
      "path": "25"
    },
    "18471": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18472": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "MUL",
      "path": "25"
    },
    "18473": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18474": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18475": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18476": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "OR",
      "path": "25"
    },
    "18477": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18478": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18479": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18480": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18481": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18482": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16050,
        16125
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18483": {
      "op": "POP"
    },
    "18484": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16211
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 198,
      "value": "0x4842"
    },
    "18487": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16211
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18488": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16204
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18489": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16204
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18490": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16204
      ],
      "op": "DIV",
      "path": "25"
    },
    "18491": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16204
      ],
      "op": "AND",
      "path": "25"
    },
    "18492": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16209,
        16210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x9"
    },
    "18494": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16208
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18497": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16181,
        16211
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18498": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16181,
        16211
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18499": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18501": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18502": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18503": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18504": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16156
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18506": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18508": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18509": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18511": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18512": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16164
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18513": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16172
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18515": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16172
      ],
      "op": "ADD",
      "path": "25"
    },
    "18516": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18517": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18518": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18520": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18521": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18522": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18523": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "AND",
      "path": "25"
    },
    "18524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18526": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18528": {
      "op": "SHL"
    },
    "18529": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "MUL",
      "path": "25"
    },
    "18530": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18532": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18534": {
      "op": "SHL"
    },
    "18535": {
      "op": "NOT"
    },
    "18536": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18537": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18538": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "AND",
      "path": "25"
    },
    "18539": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18540": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18541": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18542": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "OR",
      "path": "25"
    },
    "18543": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18544": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16149,
        16212
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18545": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16269,
        16299
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 199,
      "value": "0x487B"
    },
    "18548": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16279,
        16281
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "18550": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16283,
        16298
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18551": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16269,
        16278
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18554": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16269,
        16299
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18555": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16269,
        16299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18556": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18558": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18559": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18560": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18561": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16231
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18563": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18565": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18566": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18568": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18569": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16239
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18570": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16248
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18572": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16224,
        16248
      ],
      "op": "ADD",
      "path": "25"
    },
    "18573": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18574": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18575": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18577": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18579": {
      "op": "SHL"
    },
    "18580": {
      "op": "NOT"
    },
    "18581": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "AND",
      "path": "25"
    },
    "18582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18584": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18586": {
      "op": "SHL"
    },
    "18587": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18589": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18590": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18591": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "AND",
      "path": "25"
    },
    "18592": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18593": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "MUL",
      "path": "25"
    },
    "18594": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18595": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18596": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18597": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "OR",
      "path": "25"
    },
    "18598": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18599": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18600": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18601": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18602": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18603": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16223,
        16299
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18604": {
      "op": "POP"
    },
    "18605": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16386
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 200,
      "value": "0x48BB"
    },
    "18608": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16386
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18609": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16379
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18610": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16379
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18611": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16379
      ],
      "op": "DIV",
      "path": "25"
    },
    "18612": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16379
      ],
      "op": "AND",
      "path": "25"
    },
    "18613": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16384,
        16385
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "18615": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16383
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18618": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16355,
        16386
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18619": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16355,
        16386
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18620": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18622": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18623": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18624": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18625": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16329
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18627": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18629": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18630": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18632": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18633": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16337
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18634": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16346
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18636": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16346
      ],
      "op": "ADD",
      "path": "25"
    },
    "18637": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18638": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18639": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18641": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18642": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18643": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18644": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "AND",
      "path": "25"
    },
    "18645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18647": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18649": {
      "op": "SHL"
    },
    "18650": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "MUL",
      "path": "25"
    },
    "18651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18653": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "18655": {
      "op": "SHL"
    },
    "18656": {
      "op": "NOT"
    },
    "18657": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18658": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18659": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "AND",
      "path": "25"
    },
    "18660": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18661": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18662": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18663": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "OR",
      "path": "25"
    },
    "18664": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18665": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16322,
        16387
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18666": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16444,
        16474
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 201,
      "value": "0x48F4"
    },
    "18669": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16454,
        16456
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "18671": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16458,
        16473
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18672": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16444,
        16453
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18675": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16444,
        16474
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18676": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16444,
        16474
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18677": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18679": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18680": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18681": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18682": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16405
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18684": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18686": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18687": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18689": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18690": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16413
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18691": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18693": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16398,
        16423
      ],
      "op": "ADD",
      "path": "25"
    },
    "18694": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18695": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18696": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18698": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18700": {
      "op": "SHL"
    },
    "18701": {
      "op": "NOT"
    },
    "18702": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "AND",
      "path": "25"
    },
    "18703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18705": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18707": {
      "op": "SHL"
    },
    "18708": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18710": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18711": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18712": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "AND",
      "path": "25"
    },
    "18713": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18714": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "MUL",
      "path": "25"
    },
    "18715": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18716": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18717": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18718": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "OR",
      "path": "25"
    },
    "18719": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18720": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18721": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18722": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18723": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18724": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16397,
        16474
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18725": {
      "op": "POP"
    },
    "18726": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16563
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 202,
      "value": "0x4934"
    },
    "18729": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16563
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18730": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16556
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18731": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16556
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18732": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16556
      ],
      "op": "DIV",
      "path": "25"
    },
    "18733": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16556
      ],
      "op": "AND",
      "path": "25"
    },
    "18734": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16561,
        16562
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "18736": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18739": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16531,
        16563
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18740": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16531,
        16563
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18741": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18743": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18744": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18745": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18746": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16504
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18748": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18750": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18751": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18753": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18754": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16512
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18755": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16522
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18757": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16522
      ],
      "op": "ADD",
      "path": "25"
    },
    "18758": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18759": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18760": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18762": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18763": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18764": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18765": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "AND",
      "path": "25"
    },
    "18766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18768": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18770": {
      "op": "SHL"
    },
    "18771": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "MUL",
      "path": "25"
    },
    "18772": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18774": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "18776": {
      "op": "SHL"
    },
    "18777": {
      "op": "NOT"
    },
    "18778": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18779": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18780": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "AND",
      "path": "25"
    },
    "18781": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18782": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18783": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18784": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "OR",
      "path": "25"
    },
    "18785": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18786": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16497,
        16564
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18787": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16624,
        16654
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 203,
      "value": "0x496D"
    },
    "18790": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16634,
        16636
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "18792": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16638,
        16653
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18793": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16624,
        16633
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18796": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16624,
        16654
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18797": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16624,
        16654
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18798": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18800": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18801": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18802": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18803": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16582
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18805": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18807": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18808": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18810": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18811": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16590
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18812": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16603
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18814": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16575,
        16603
      ],
      "op": "ADD",
      "path": "25"
    },
    "18815": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18816": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18817": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18819": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18821": {
      "op": "SHL"
    },
    "18822": {
      "op": "NOT"
    },
    "18823": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "AND",
      "path": "25"
    },
    "18824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18826": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18828": {
      "op": "SHL"
    },
    "18829": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18831": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18832": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18833": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "AND",
      "path": "25"
    },
    "18834": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18835": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "MUL",
      "path": "25"
    },
    "18836": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18837": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18838": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18839": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "OR",
      "path": "25"
    },
    "18840": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18841": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18842": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18843": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18844": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18845": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16574,
        16654
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18846": {
      "op": "POP"
    },
    "18847": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16749
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 204,
      "value": "0x49AD"
    },
    "18850": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16749
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18851": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16742
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18852": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16742
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18853": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16742
      ],
      "op": "DIV",
      "path": "25"
    },
    "18854": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16742
      ],
      "op": "AND",
      "path": "25"
    },
    "18855": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16747,
        16748
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "18857": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18860": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16714,
        16749
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18861": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16714,
        16749
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18862": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18864": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18865": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18866": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18867": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16684
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18869": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18871": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18872": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18874": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18875": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16692
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18876": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16705
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18878": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16705
      ],
      "op": "ADD",
      "path": "25"
    },
    "18879": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18880": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18881": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18883": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18884": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18885": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18886": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "AND",
      "path": "25"
    },
    "18887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18889": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18891": {
      "op": "SHL"
    },
    "18892": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "MUL",
      "path": "25"
    },
    "18893": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18895": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "18897": {
      "op": "SHL"
    },
    "18898": {
      "op": "NOT"
    },
    "18899": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18900": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18901": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "AND",
      "path": "25"
    },
    "18902": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18903": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18904": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18905": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "OR",
      "path": "25"
    },
    "18906": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18907": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16677,
        16750
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18908": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16810,
        16840
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 205,
      "value": "0x49E6"
    },
    "18911": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16820,
        16822
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "18913": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16824,
        16839
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18914": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16810,
        16819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "18917": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16810,
        16840
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18918": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16810,
        16840
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18919": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18921": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18922": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18923": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18924": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16768
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18926": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18928": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18929": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18931": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18932": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16776
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18933": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16789
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18935": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16761,
        16789
      ],
      "op": "ADD",
      "path": "25"
    },
    "18936": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "DUP1",
      "path": "25"
    },
    "18937": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "18938": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18942": {
      "op": "SHL"
    },
    "18943": {
      "op": "NOT"
    },
    "18944": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "AND",
      "path": "25"
    },
    "18945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18947": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18949": {
      "op": "SHL"
    },
    "18950": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "18952": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "18953": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "DUP6",
      "path": "25"
    },
    "18954": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "AND",
      "path": "25"
    },
    "18955": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18956": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "MUL",
      "path": "25"
    },
    "18957": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18958": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18959": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18960": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "OR",
      "path": "25"
    },
    "18961": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18962": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "DUP3",
      "path": "25"
    },
    "18963": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18964": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "18965": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18966": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16760,
        16840
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "18967": {
      "op": "POP"
    },
    "18968": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16935
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 206,
      "value": "0x4A26"
    },
    "18971": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16935
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "18972": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16928
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "18973": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16928
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18974": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16928
      ],
      "op": "DIV",
      "path": "25"
    },
    "18975": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16928
      ],
      "op": "AND",
      "path": "25"
    },
    "18976": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16933,
        16934
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "18978": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16932
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "18981": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16900,
        16935
      ],
      "op": "JUMP",
      "path": "25"
    },
    "18982": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16900,
        16935
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "18983": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "18985": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "DUP5",
      "path": "25"
    },
    "18986": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "DUP2",
      "path": "25"
    },
    "18987": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18988": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16870
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "18990": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "18992": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "18993": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "18995": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "18996": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16878
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "18997": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16891
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "18999": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16891
      ],
      "op": "ADD",
      "path": "25"
    },
    "19000": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19001": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "19002": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19004": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19005": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19006": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19007": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "AND",
      "path": "25"
    },
    "19008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19010": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19012": {
      "op": "SHL"
    },
    "19013": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "MUL",
      "path": "25"
    },
    "19014": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19016": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19018": {
      "op": "SHL"
    },
    "19019": {
      "op": "NOT"
    },
    "19020": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19021": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19022": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "AND",
      "path": "25"
    },
    "19023": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19024": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19025": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19026": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "OR",
      "path": "25"
    },
    "19027": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19028": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16936
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "19029": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16990,
        17020
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 207,
      "value": "0x4A5F"
    },
    "19032": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16863,
        16891
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "19034": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17004,
        17019
      ],
      "op": "DUP3",
      "path": "25"
    },
    "19035": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16990,
        16999
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "19038": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        16990,
        17020
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19039": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16990,
        17020
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19040": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19042": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19043": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "DUP2",
      "path": "25"
    },
    "19044": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19045": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16954
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "19047": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "19049": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19050": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "19052": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19053": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16962
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "19054": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16969
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "19056": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16947,
        16969
      ],
      "op": "ADD",
      "path": "25"
    },
    "19057": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19058": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "19059": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19061": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19063": {
      "op": "SHL"
    },
    "19064": {
      "op": "NOT"
    },
    "19065": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "AND",
      "path": "25"
    },
    "19066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19068": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19070": {
      "op": "SHL"
    },
    "19071": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19073": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "19074": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19075": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "AND",
      "path": "25"
    },
    "19076": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "DUP2",
      "path": "25"
    },
    "19077": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "MUL",
      "path": "25"
    },
    "19078": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19079": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19080": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19081": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "OR",
      "path": "25"
    },
    "19082": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19083": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "DUP3",
      "path": "25"
    },
    "19084": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19085": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "19086": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19087": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        16946,
        17020
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19088": {
      "op": "POP"
    },
    "19089": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17103
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 208,
      "value": "0x4A9F"
    },
    "19092": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17103
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19093": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19094": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19095": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "DIV",
      "path": "25"
    },
    "19096": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17096
      ],
      "op": "AND",
      "path": "25"
    },
    "19097": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17101,
        17102
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "19099": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17100
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "19102": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17074,
        17103
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19103": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17074,
        17103
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19104": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19106": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "DUP5",
      "path": "25"
    },
    "19107": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "DUP2",
      "path": "25"
    },
    "19108": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19109": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "19111": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "19113": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19114": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "19116": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19117": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17058
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "19118": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17065
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "19120": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17065
      ],
      "op": "ADD",
      "path": "25"
    },
    "19121": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19122": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "19123": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19125": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19126": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19127": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19128": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "AND",
      "path": "25"
    },
    "19129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19131": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19133": {
      "op": "SHL"
    },
    "19134": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "MUL",
      "path": "25"
    },
    "19135": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19137": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "19139": {
      "op": "SHL"
    },
    "19140": {
      "op": "NOT"
    },
    "19141": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19142": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19143": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "AND",
      "path": "25"
    },
    "19144": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19145": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19146": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19147": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "OR",
      "path": "25"
    },
    "19148": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19149": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17043,
        17104
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "19150": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17160,
        17190
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 209,
      "value": "0x4AD8"
    },
    "19153": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17170,
        17172
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x10"
    },
    "19155": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17174,
        17189
      ],
      "op": "DUP3",
      "path": "25"
    },
    "19156": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17160,
        17169
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C8B"
    },
    "19159": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17160,
        17190
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19160": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17160,
        17190
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19161": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19163": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19164": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "DUP2",
      "path": "25"
    },
    "19165": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19166": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17122
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "19168": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "19170": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19171": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "19173": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19174": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17130
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "19175": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17139
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "19177": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17115,
        17139
      ],
      "op": "ADD",
      "path": "25"
    },
    "19178": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19179": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "19180": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19182": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19184": {
      "op": "SHL"
    },
    "19185": {
      "op": "NOT"
    },
    "19186": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "AND",
      "path": "25"
    },
    "19187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19189": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19191": {
      "op": "SHL"
    },
    "19192": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19194": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "19195": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19196": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "AND",
      "path": "25"
    },
    "19197": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "DUP2",
      "path": "25"
    },
    "19198": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "MUL",
      "path": "25"
    },
    "19199": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19200": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19201": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19202": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "OR",
      "path": "25"
    },
    "19203": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19204": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "DUP3",
      "path": "25"
    },
    "19205": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19206": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "19207": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19208": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17114,
        17190
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19209": {
      "op": "POP"
    },
    "19210": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17277
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 210,
      "value": "0x4B18"
    },
    "19213": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17277
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19214": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17270
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19215": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17270
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19216": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17270
      ],
      "op": "DIV",
      "path": "25"
    },
    "19217": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17270
      ],
      "op": "AND",
      "path": "25"
    },
    "19218": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17275,
        17276
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "19220": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17274
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "19223": {
      "fn": "CryptoChampions._trainHero",
      "jump": "i",
      "offset": [
        17246,
        17277
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19224": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17246,
        17277
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19225": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19227": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19228": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "DUP5",
      "path": "25"
    },
    "19229": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19230": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17220
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC"
    },
    "19232": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "19234": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "19235": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "19237": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19238": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19239": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17228
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "19240": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17237
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x8"
    },
    "19242": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17237
      ],
      "op": "ADD",
      "path": "25"
    },
    "19243": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19244": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "19245": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19247": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "19248": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19249": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "19250": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "AND",
      "path": "25"
    },
    "19251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19253": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19255": {
      "op": "SHL"
    },
    "19256": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "MUL",
      "path": "25"
    },
    "19257": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19259": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "19261": {
      "op": "SHL"
    },
    "19262": {
      "op": "NOT"
    },
    "19263": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19264": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "19265": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "AND",
      "path": "25"
    },
    "19266": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19267": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19268": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "19269": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "OR",
      "path": "25"
    },
    "19270": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19271": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19272": {
      "fn": "CryptoChampions._trainHero",
      "offset": [
        17213,
        17278
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "19273": {
      "op": "POP"
    },
    "19274": {
      "op": "POP"
    },
    "19275": {
      "op": "POP"
    },
    "19276": {
      "op": "POP"
    },
    "19277": {
      "fn": "CryptoChampions._trainHero",
      "jump": "o",
      "offset": [
        14536,
        17285
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19278": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19279": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "12",
      "statement": 211
    },
    "19280": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19281": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19282": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19283": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19285": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19286": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19287": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19288": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19290": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19291": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "12"
    },
    "19292": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19294": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19295": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19297": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19298": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19299": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19301": {
      "branch": 273,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "19302": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C0E"
    },
    "19305": {
      "branch": 273,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19306": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19307": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19310": {
      "op": "NOT"
    },
    "19311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19312": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "12"
    },
    "19314": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19316": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19317": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "12"
    },
    "19318": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19319": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19321": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19322": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19323": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19324": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19325": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19326": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19327": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "12"
    },
    "19328": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B85"
    },
    "19331": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19332": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19333": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19337": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19338": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19342": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19343": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "12"
    },
    "19344": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19345": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19346": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "12"
    },
    "19347": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 212
    },
    "19348": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19349": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19351": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "12"
    },
    "19352": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19353": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19354": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19355": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19356": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "12"
    },
    "19357": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BA2"
    },
    "19360": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19361": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19362": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19363": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19365": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19366": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "12"
    },
    "19367": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19368": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19370": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19371": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "19372": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19373": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19374": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19375": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "12"
    },
    "19376": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19377": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19378": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19379": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19380": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 213
    },
    "19381": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19382": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19383": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19385": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "12"
    },
    "19386": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19387": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "12"
    },
    "19388": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19389": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "19390": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19391": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "19393": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19394": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19395": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19396": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "12"
    },
    "19397": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "12"
    },
    "19398": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19399": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19400": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 214
    },
    "19401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "19402": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19403": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "19405": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BD2"
    },
    "19408": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "19409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "12"
    },
    "19410": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19414": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "12"
    },
    "19415": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19416": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19417": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19418": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19420": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19421": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19423": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19425": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19426": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "12"
    },
    "19427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19429": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19430": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19431": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19432": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19433": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 215
    },
    "19434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "19436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "19437": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19439": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "12"
    },
    "19440": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19441": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19442": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "19445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19446": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "19447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "19448": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "19450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "19451": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "19454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "19456": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "19457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "19458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 216,
      "value": "0x1"
    },
    "19460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "19461": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "19466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1346"
    },
    "19469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19470": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "19471": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 217,
      "value": "0x0"
    },
    "19473": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "19474": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "19475": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "19476": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1346"
    },
    "19479": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "19480": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        826,
        1090
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "19481": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 218,
      "value": "0x40"
    },
    "19483": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19484": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19485": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "19487": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19488": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19489": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19490": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "19491": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19492": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "19493": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19494": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19495": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19496": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19497": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19498": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19499": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19500": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19507": {
      "op": "SHL"
    },
    "19508": {
      "op": "SUB"
    },
    "19509": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19510": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19511": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19512": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "AND",
      "path": "29"
    },
    "19513": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "19515": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19516": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19517": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19518": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "19520": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19521": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19522": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19523": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19524": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19525": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19526": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19527": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19528": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19529": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19530": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "29"
    },
    "19531": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SUB",
      "path": "29"
    },
    "19532": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19533": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19534": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19535": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19536": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19537": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "19539": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19540": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19541": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "29"
    },
    "19542": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19543": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19544": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19545": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19546": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19547": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "ADD",
      "path": "29"
    },
    "19548": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "19549": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19550": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "jump": "o",
      "offset": [
        826,
        1090
      ],
      "op": "JUMP",
      "path": "29"
    },
    "19551": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "19552": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 219,
      "value": "0x40"
    },
    "19554": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19555": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19556": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "19558": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19559": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19560": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19561": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19562": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19563": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "19564": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19565": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19566": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19567": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19568": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19569": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19570": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19571": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19572": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19573": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19574": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19575": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP4",
      "path": "29"
    },
    "19576": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SUB",
      "path": "29"
    },
    "19577": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "29"
    },
    "19578": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19579": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP2",
      "path": "29"
    },
    "19580": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19581": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "19583": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19584": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "19585": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "29"
    },
    "19586": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19587": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "19588": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "DUP1",
      "path": "29"
    },
    "19589": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "19590": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "19591": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "ADD",
      "path": "29"
    },
    "19592": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "19593": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "19594": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "jump": "o",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMP",
      "path": "29"
    },
    "19595": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19596": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17630,
        17635
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "19598": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17630,
        17635
      ],
      "op": "DUP1",
      "path": "25"
    },
    "19599": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17704
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 220,
      "value": "0x4CA6"
    },
    "19602": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17702,
        17703
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "19604": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17697
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4CA0"
    },
    "19607": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17682
      ],
      "op": "DUP6",
      "path": "25"
    },
    "19608": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17697
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "19610": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17697
      ],
      "op": "DUP9",
      "path": "25"
    },
    "19611": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17697
      ],
      "op": "AND",
      "path": "25"
    },
    "19612": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17686
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4CBC"
    },
    "19615": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17670,
        17697
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19616": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17697
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19617": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17701
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19618": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17701
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3460"
    },
    "19621": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17670,
        17704
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19622": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17670,
        17704
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19623": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17707,
        17727
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4CB1"
    },
    "19626": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17707,
        17719
      ],
      "op": "DUP5",
      "path": "25"
    },
    "19627": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17724,
        17726
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA"
    },
    "19629": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17707,
        17723
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3EB1"
    },
    "19632": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17707,
        17727
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19633": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17707,
        17727
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "19634": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17656,
        17728
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19635": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17656,
        17728
      ],
      "op": "POP",
      "path": "25"
    },
    "19636": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17656,
        17728
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "19637": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17656,
        17728
      ],
      "op": "POP",
      "path": "25"
    },
    "19638": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19639": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "POP",
      "path": "25"
    },
    "19640": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "19641": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "19642": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17549,
        17735
      ],
      "op": "POP",
      "path": "25"
    },
    "19643": {
      "fn": "CryptoChampions._rollDice",
      "jump": "o",
      "offset": [
        17549,
        17735
      ],
      "op": "JUMP",
      "path": "25"
    },
    "19644": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19645": {
      "fn": "SafeMath.mod",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "19647": {
      "fn": "SafeMath.mod",
      "offset": [
        4909,
        4910
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 221
    },
    "19648": {
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19649": {
      "branch": 280,
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4910
      ],
      "op": "GT",
      "path": "3"
    },
    "19650": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D12"
    },
    "19653": {
      "branch": 280,
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19654": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "19656": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "19657": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19664": {
      "op": "SHL"
    },
    "19665": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19666": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19667": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "19669": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19671": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19672": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19673": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19674": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "19676": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "19678": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19679": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19680": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19681": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
    },
    "19714": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "19716": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "19717": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19718": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "19719": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19720": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "19721": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19722": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19723": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19724": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SUB",
      "path": "3"
    },
    "19725": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "19727": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "19728": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "19729": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "REVERT",
      "path": "3"
    },
    "19730": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19731": {
      "fn": "SafeMath.mod",
      "offset": [
        4960,
        4961
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 222
    },
    "19732": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "19733": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "19734": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D1B"
    },
    "19737": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "19738": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "INVALID",
      "path": "3"
    },
    "19739": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "19740": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "MOD",
      "path": "3"
    },
    "19741": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "19742": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "19743": {
      "op": "POP"
    },
    "19744": {
      "op": "POP"
    },
    "19745": {
      "op": "POP"
    },
    "19746": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMP",
      "path": "3"
    },
    "19747": {
      "op": "JUMPDEST"
    },
    "19748": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19750": {
      "op": "MLOAD"
    },
    "19751": {
      "op": "DUP1"
    },
    "19752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19754": {
      "op": "ADD"
    },
    "19755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19757": {
      "op": "MSTORE"
    },
    "19758": {
      "op": "DUP1"
    },
    "19759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19761": {
      "op": "ISZERO"
    },
    "19762": {
      "op": "ISZERO"
    },
    "19763": {
      "op": "DUP2"
    },
    "19764": {
      "op": "MSTORE"
    },
    "19765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19767": {
      "op": "ADD"
    },
    "19768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19770": {
      "op": "DUP2"
    },
    "19771": {
      "op": "MSTORE"
    },
    "19772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19774": {
      "op": "ADD"
    },
    "19775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19777": {
      "op": "DUP2"
    },
    "19778": {
      "op": "MSTORE"
    },
    "19779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19781": {
      "op": "ADD"
    },
    "19782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19784": {
      "op": "DUP2"
    },
    "19785": {
      "op": "MSTORE"
    },
    "19786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19788": {
      "op": "ADD"
    },
    "19789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19791": {
      "op": "DUP2"
    },
    "19792": {
      "op": "MSTORE"
    },
    "19793": {
      "op": "POP"
    },
    "19794": {
      "op": "SWAP1"
    },
    "19795": {
      "op": "JUMP"
    },
    "19796": {
      "op": "JUMPDEST"
    },
    "19797": {
      "op": "DUP3"
    },
    "19798": {
      "op": "DUP1"
    },
    "19799": {
      "op": "SLOAD"
    },
    "19800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19802": {
      "op": "DUP2"
    },
    "19803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19805": {
      "op": "AND"
    },
    "19806": {
      "op": "ISZERO"
    },
    "19807": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19810": {
      "op": "MUL"
    },
    "19811": {
      "op": "SUB"
    },
    "19812": {
      "op": "AND"
    },
    "19813": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "19815": {
      "op": "SWAP1"
    },
    "19816": {
      "op": "DIV"
    },
    "19817": {
      "op": "SWAP1"
    },
    "19818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19820": {
      "op": "MSTORE"
    },
    "19821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19825": {
      "op": "KECCAK256"
    },
    "19826": {
      "op": "SWAP1"
    },
    "19827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19829": {
      "op": "ADD"
    },
    "19830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19832": {
      "op": "SWAP1"
    },
    "19833": {
      "op": "DIV"
    },
    "19834": {
      "op": "DUP2"
    },
    "19835": {
      "op": "ADD"
    },
    "19836": {
      "op": "SWAP3"
    },
    "19837": {
      "op": "DUP3"
    },
    "19838": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19840": {
      "op": "LT"
    },
    "19841": {
      "op": "PUSH2",
      "value": "0x4D95"
    },
    "19844": {
      "op": "JUMPI"
    },
    "19845": {
      "op": "DUP1"
    },
    "19846": {
      "op": "MLOAD"
    },
    "19847": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19849": {
      "op": "NOT"
    },
    "19850": {
      "op": "AND"
    },
    "19851": {
      "op": "DUP4"
    },
    "19852": {
      "op": "DUP1"
    },
    "19853": {
      "op": "ADD"
    },
    "19854": {
      "op": "OR"
    },
    "19855": {
      "op": "DUP6"
    },
    "19856": {
      "op": "SSTORE"
    },
    "19857": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "19860": {
      "op": "JUMP"
    },
    "19861": {
      "op": "JUMPDEST"
    },
    "19862": {
      "op": "DUP3"
    },
    "19863": {
      "op": "DUP1"
    },
    "19864": {
      "op": "ADD"
    },
    "19865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19867": {
      "op": "ADD"
    },
    "19868": {
      "op": "DUP6"
    },
    "19869": {
      "op": "SSTORE"
    },
    "19870": {
      "op": "DUP3"
    },
    "19871": {
      "op": "ISZERO"
    },
    "19872": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "19875": {
      "op": "JUMPI"
    },
    "19876": {
      "op": "SWAP2"
    },
    "19877": {
      "op": "DUP3"
    },
    "19878": {
      "op": "ADD"
    },
    "19879": {
      "op": "JUMPDEST"
    },
    "19880": {
      "op": "DUP3"
    },
    "19881": {
      "op": "DUP2"
    },
    "19882": {
      "op": "GT"
    },
    "19883": {
      "op": "ISZERO"
    },
    "19884": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "19887": {
      "op": "JUMPI"
    },
    "19888": {
      "op": "DUP3"
    },
    "19889": {
      "op": "MLOAD"
    },
    "19890": {
      "op": "DUP3"
    },
    "19891": {
      "op": "SSTORE"
    },
    "19892": {
      "op": "SWAP2"
    },
    "19893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19895": {
      "op": "ADD"
    },
    "19896": {
      "op": "SWAP2"
    },
    "19897": {
      "op": "SWAP1"
    },
    "19898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19900": {
      "op": "ADD"
    },
    "19901": {
      "op": "SWAP1"
    },
    "19902": {
      "op": "PUSH2",
      "value": "0x4DA7"
    },
    "19905": {
      "op": "JUMP"
    },
    "19906": {
      "op": "JUMPDEST"
    },
    "19907": {
      "op": "POP"
    },
    "19908": {
      "op": "PUSH2",
      "value": "0x4DCE"
    },
    "19911": {
      "op": "SWAP3"
    },
    "19912": {
      "op": "SWAP2"
    },
    "19913": {
      "op": "POP"
    },
    "19914": {
      "op": "PUSH2",
      "value": "0x4F1D"
    },
    "19917": {
      "op": "JUMP"
    },
    "19918": {
      "op": "JUMPDEST"
    },
    "19919": {
      "op": "POP"
    },
    "19920": {
      "op": "SWAP1"
    },
    "19921": {
      "op": "JUMP"
    },
    "19922": {
      "op": "JUMPDEST"
    },
    "19923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19925": {
      "op": "DUP1"
    },
    "19926": {
      "op": "MLOAD"
    },
    "19927": {
      "op": "PUSH2",
      "value": "0x360"
    },
    "19930": {
      "op": "DUP2"
    },
    "19931": {
      "op": "ADD"
    },
    "19932": {
      "op": "DUP3"
    },
    "19933": {
      "op": "MSTORE"
    },
    "19934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19936": {
      "op": "DUP1"
    },
    "19937": {
      "op": "DUP3"
    },
    "19938": {
      "op": "MSTORE"
    },
    "19939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19943": {
      "op": "DUP4"
    },
    "19944": {
      "op": "ADD"
    },
    "19945": {
      "op": "DUP2"
    },
    "19946": {
      "op": "SWAP1"
    },
    "19947": {
      "op": "MSTORE"
    },
    "19948": {
      "op": "SWAP3"
    },
    "19949": {
      "op": "DUP3"
    },
    "19950": {
      "op": "ADD"
    },
    "19951": {
      "op": "DUP4"
    },
    "19952": {
      "op": "SWAP1"
    },
    "19953": {
      "op": "MSTORE"
    },
    "19954": {
      "op": "SWAP2"
    },
    "19955": {
      "op": "DUP2"
    },
    "19956": {
      "op": "ADD"
    },
    "19957": {
      "op": "DUP3"
    },
    "19958": {
      "op": "SWAP1"
    },
    "19959": {
      "op": "MSTORE"
    },
    "19960": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19962": {
      "op": "DUP2"
    },
    "19963": {
      "op": "ADD"
    },
    "19964": {
      "op": "DUP3"
    },
    "19965": {
      "op": "SWAP1"
    },
    "19966": {
      "op": "MSTORE"
    },
    "19967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19969": {
      "op": "DUP2"
    },
    "19970": {
      "op": "ADD"
    },
    "19971": {
      "op": "DUP3"
    },
    "19972": {
      "op": "SWAP1"
    },
    "19973": {
      "op": "MSTORE"
    },
    "19974": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "19976": {
      "op": "DUP2"
    },
    "19977": {
      "op": "ADD"
    },
    "19978": {
      "op": "DUP3"
    },
    "19979": {
      "op": "SWAP1"
    },
    "19980": {
      "op": "MSTORE"
    },
    "19981": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19983": {
      "op": "DUP2"
    },
    "19984": {
      "op": "ADD"
    },
    "19985": {
      "op": "DUP3"
    },
    "19986": {
      "op": "SWAP1"
    },
    "19987": {
      "op": "MSTORE"
    },
    "19988": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19991": {
      "op": "DUP2"
    },
    "19992": {
      "op": "ADD"
    },
    "19993": {
      "op": "DUP3"
    },
    "19994": {
      "op": "SWAP1"
    },
    "19995": {
      "op": "MSTORE"
    },
    "19996": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "19999": {
      "op": "DUP2"
    },
    "20000": {
      "op": "ADD"
    },
    "20001": {
      "op": "DUP3"
    },
    "20002": {
      "op": "SWAP1"
    },
    "20003": {
      "op": "MSTORE"
    },
    "20004": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "20007": {
      "op": "DUP2"
    },
    "20008": {
      "op": "ADD"
    },
    "20009": {
      "op": "DUP3"
    },
    "20010": {
      "op": "SWAP1"
    },
    "20011": {
      "op": "MSTORE"
    },
    "20012": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "20015": {
      "op": "DUP2"
    },
    "20016": {
      "op": "ADD"
    },
    "20017": {
      "op": "DUP3"
    },
    "20018": {
      "op": "SWAP1"
    },
    "20019": {
      "op": "MSTORE"
    },
    "20020": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "20023": {
      "op": "DUP2"
    },
    "20024": {
      "op": "ADD"
    },
    "20025": {
      "op": "DUP3"
    },
    "20026": {
      "op": "SWAP1"
    },
    "20027": {
      "op": "MSTORE"
    },
    "20028": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "20031": {
      "op": "DUP2"
    },
    "20032": {
      "op": "ADD"
    },
    "20033": {
      "op": "DUP3"
    },
    "20034": {
      "op": "SWAP1"
    },
    "20035": {
      "op": "MSTORE"
    },
    "20036": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "20039": {
      "op": "DUP2"
    },
    "20040": {
      "op": "ADD"
    },
    "20041": {
      "op": "DUP3"
    },
    "20042": {
      "op": "SWAP1"
    },
    "20043": {
      "op": "MSTORE"
    },
    "20044": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "20047": {
      "op": "DUP2"
    },
    "20048": {
      "op": "ADD"
    },
    "20049": {
      "op": "DUP3"
    },
    "20050": {
      "op": "SWAP1"
    },
    "20051": {
      "op": "MSTORE"
    },
    "20052": {
      "op": "PUSH2",
      "value": "0x200"
    },
    "20055": {
      "op": "DUP2"
    },
    "20056": {
      "op": "ADD"
    },
    "20057": {
      "op": "DUP3"
    },
    "20058": {
      "op": "SWAP1"
    },
    "20059": {
      "op": "MSTORE"
    },
    "20060": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "20063": {
      "op": "DUP2"
    },
    "20064": {
      "op": "ADD"
    },
    "20065": {
      "op": "DUP3"
    },
    "20066": {
      "op": "SWAP1"
    },
    "20067": {
      "op": "MSTORE"
    },
    "20068": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "20071": {
      "op": "DUP2"
    },
    "20072": {
      "op": "ADD"
    },
    "20073": {
      "op": "DUP3"
    },
    "20074": {
      "op": "SWAP1"
    },
    "20075": {
      "op": "MSTORE"
    },
    "20076": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "20079": {
      "op": "DUP2"
    },
    "20080": {
      "op": "ADD"
    },
    "20081": {
      "op": "DUP3"
    },
    "20082": {
      "op": "SWAP1"
    },
    "20083": {
      "op": "MSTORE"
    },
    "20084": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "20087": {
      "op": "DUP2"
    },
    "20088": {
      "op": "ADD"
    },
    "20089": {
      "op": "DUP3"
    },
    "20090": {
      "op": "SWAP1"
    },
    "20091": {
      "op": "MSTORE"
    },
    "20092": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "20095": {
      "op": "DUP2"
    },
    "20096": {
      "op": "ADD"
    },
    "20097": {
      "op": "DUP3"
    },
    "20098": {
      "op": "SWAP1"
    },
    "20099": {
      "op": "MSTORE"
    },
    "20100": {
      "op": "PUSH2",
      "value": "0x2C0"
    },
    "20103": {
      "op": "DUP2"
    },
    "20104": {
      "op": "ADD"
    },
    "20105": {
      "op": "DUP3"
    },
    "20106": {
      "op": "SWAP1"
    },
    "20107": {
      "op": "MSTORE"
    },
    "20108": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "20111": {
      "op": "DUP2"
    },
    "20112": {
      "op": "ADD"
    },
    "20113": {
      "op": "DUP3"
    },
    "20114": {
      "op": "SWAP1"
    },
    "20115": {
      "op": "MSTORE"
    },
    "20116": {
      "op": "PUSH2",
      "value": "0x300"
    },
    "20119": {
      "op": "DUP2"
    },
    "20120": {
      "op": "ADD"
    },
    "20121": {
      "op": "DUP3"
    },
    "20122": {
      "op": "SWAP1"
    },
    "20123": {
      "op": "MSTORE"
    },
    "20124": {
      "op": "PUSH2",
      "value": "0x320"
    },
    "20127": {
      "op": "DUP2"
    },
    "20128": {
      "op": "ADD"
    },
    "20129": {
      "op": "DUP3"
    },
    "20130": {
      "op": "SWAP1"
    },
    "20131": {
      "op": "MSTORE"
    },
    "20132": {
      "op": "PUSH2",
      "value": "0x340"
    },
    "20135": {
      "op": "DUP2"
    },
    "20136": {
      "op": "ADD"
    },
    "20137": {
      "op": "SWAP2"
    },
    "20138": {
      "op": "SWAP1"
    },
    "20139": {
      "op": "SWAP2"
    },
    "20140": {
      "op": "MSTORE"
    },
    "20141": {
      "op": "SWAP1"
    },
    "20142": {
      "op": "JUMP"
    },
    "20143": {
      "op": "JUMPDEST"
    },
    "20144": {
      "op": "DUP3"
    },
    "20145": {
      "op": "DUP1"
    },
    "20146": {
      "op": "SLOAD"
    },
    "20147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20149": {
      "op": "DUP2"
    },
    "20150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20152": {
      "op": "AND"
    },
    "20153": {
      "op": "ISZERO"
    },
    "20154": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "20157": {
      "op": "MUL"
    },
    "20158": {
      "op": "SUB"
    },
    "20159": {
      "op": "AND"
    },
    "20160": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "20162": {
      "op": "SWAP1"
    },
    "20163": {
      "op": "DIV"
    },
    "20164": {
      "op": "SWAP1"
    },
    "20165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20167": {
      "op": "MSTORE"
    },
    "20168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20172": {
      "op": "KECCAK256"
    },
    "20173": {
      "op": "SWAP1"
    },
    "20174": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20176": {
      "op": "ADD"
    },
    "20177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20179": {
      "op": "SWAP1"
    },
    "20180": {
      "op": "DIV"
    },
    "20181": {
      "op": "DUP2"
    },
    "20182": {
      "op": "ADD"
    },
    "20183": {
      "op": "SWAP3"
    },
    "20184": {
      "op": "DUP3"
    },
    "20185": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20187": {
      "op": "LT"
    },
    "20188": {
      "op": "PUSH2",
      "value": "0x4EF0"
    },
    "20191": {
      "op": "JUMPI"
    },
    "20192": {
      "op": "DUP3"
    },
    "20193": {
      "op": "DUP1"
    },
    "20194": {
      "op": "ADD"
    },
    "20195": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "20197": {
      "op": "NOT"
    },
    "20198": {
      "op": "DUP3"
    },
    "20199": {
      "op": "CALLDATALOAD"
    },
    "20200": {
      "op": "AND"
    },
    "20201": {
      "op": "OR"
    },
    "20202": {
      "op": "DUP6"
    },
    "20203": {
      "op": "SSTORE"
    },
    "20204": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "20207": {
      "op": "JUMP"
    },
    "20208": {
      "op": "JUMPDEST"
    },
    "20209": {
      "op": "DUP3"
    },
    "20210": {
      "op": "DUP1"
    },
    "20211": {
      "op": "ADD"
    },
    "20212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20214": {
      "op": "ADD"
    },
    "20215": {
      "op": "DUP6"
    },
    "20216": {
      "op": "SSTORE"
    },
    "20217": {
      "op": "DUP3"
    },
    "20218": {
      "op": "ISZERO"
    },
    "20219": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "20222": {
      "op": "JUMPI"
    },
    "20223": {
      "op": "SWAP2"
    },
    "20224": {
      "op": "DUP3"
    },
    "20225": {
      "op": "ADD"
    },
    "20226": {
      "op": "JUMPDEST"
    },
    "20227": {
      "op": "DUP3"
    },
    "20228": {
      "op": "DUP2"
    },
    "20229": {
      "op": "GT"
    },
    "20230": {
      "op": "ISZERO"
    },
    "20231": {
      "op": "PUSH2",
      "value": "0x4DC2"
    },
    "20234": {
      "op": "JUMPI"
    },
    "20235": {
      "op": "DUP3"
    },
    "20236": {
      "op": "CALLDATALOAD"
    },
    "20237": {
      "op": "DUP3"
    },
    "20238": {
      "op": "SSTORE"
    },
    "20239": {
      "op": "SWAP2"
    },
    "20240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20242": {
      "op": "ADD"
    },
    "20243": {
      "op": "SWAP2"
    },
    "20244": {
      "op": "SWAP1"
    },
    "20245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20247": {
      "op": "ADD"
    },
    "20248": {
      "op": "SWAP1"
    },
    "20249": {
      "op": "PUSH2",
      "value": "0x4F02"
    },
    "20252": {
      "op": "JUMP"
    },
    "20253": {
      "op": "JUMPDEST"
    },
    "20254": {
      "op": "JUMPDEST"
    },
    "20255": {
      "op": "DUP1"
    },
    "20256": {
      "op": "DUP3"
    },
    "20257": {
      "op": "GT"
    },
    "20258": {
      "op": "ISZERO"
    },
    "20259": {
      "op": "PUSH2",
      "value": "0x4DCE"
    },
    "20262": {
      "op": "JUMPI"
    },
    "20263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20265": {
      "op": "DUP2"
    },
    "20266": {
      "op": "SSTORE"
    },
    "20267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20269": {
      "op": "ADD"
    },
    "20270": {
      "op": "PUSH2",
      "value": "0x4F1E"
    },
    "20273": {
      "op": "JUMP"
    },
    "20274": {
      "op": "JUMPDEST"
    },
    "20275": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20277": {
      "op": "SHR"
    },
    "20278": {
      "op": "SWAP1"
    },
    "20279": {
      "op": "JUMP"
    },
    "20280": {
      "op": "JUMPDEST"
    },
    "20281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20283": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20285": {
      "op": "RETURNDATASIZE"
    },
    "20286": {
      "op": "LT"
    },
    "20287": {
      "op": "ISZERO"
    },
    "20288": {
      "op": "PUSH2",
      "value": "0x4F48"
    },
    "20291": {
      "op": "JUMPI"
    },
    "20292": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "20295": {
      "op": "JUMP"
    },
    "20296": {
      "op": "JUMPDEST"
    },
    "20297": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20299": {
      "op": "DUP2"
    },
    "20300": {
      "op": "DUP3"
    },
    "20301": {
      "op": "RETURNDATACOPY"
    },
    "20302": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "20307": {
      "op": "PUSH2",
      "value": "0x4F5C"
    },
    "20310": {
      "op": "DUP3"
    },
    "20311": {
      "op": "MLOAD"
    },
    "20312": {
      "op": "PUSH2",
      "value": "0x4F32"
    },
    "20315": {
      "op": "JUMP"
    },
    "20316": {
      "op": "JUMPDEST"
    },
    "20317": {
      "op": "EQ"
    },
    "20318": {
      "op": "PUSH2",
      "value": "0x4F66"
    },
    "20321": {
      "op": "JUMPI"
    },
    "20322": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "20325": {
      "op": "JUMP"
    },
    "20326": {
      "op": "JUMPDEST"
    },
    "20327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20329": {
      "op": "MLOAD"
    },
    "20330": {
      "op": "RETURNDATASIZE"
    },
    "20331": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20333": {
      "op": "NOT"
    },
    "20334": {
      "op": "ADD"
    },
    "20335": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20337": {
      "op": "DUP3"
    },
    "20338": {
      "op": "RETURNDATACOPY"
    },
    "20339": {
      "op": "DUP1"
    },
    "20340": {
      "op": "MLOAD"
    },
    "20341": {
      "op": "RETURNDATASIZE"
    },
    "20342": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "20351": {
      "op": "DUP2"
    },
    "20352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20354": {
      "op": "DUP5"
    },
    "20355": {
      "op": "ADD"
    },
    "20356": {
      "op": "GT"
    },
    "20357": {
      "op": "DUP2"
    },
    "20358": {
      "op": "DUP5"
    },
    "20359": {
      "op": "GT"
    },
    "20360": {
      "op": "OR"
    },
    "20361": {
      "op": "ISZERO"
    },
    "20362": {
      "op": "PUSH2",
      "value": "0x4F96"
    },
    "20365": {
      "op": "JUMPI"
    },
    "20366": {
      "op": "POP"
    },
    "20367": {
      "op": "POP"
    },
    "20368": {
      "op": "POP"
    },
    "20369": {
      "op": "POP"
    },
    "20370": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "20373": {
      "op": "JUMP"
    },
    "20374": {
      "op": "JUMPDEST"
    },
    "20375": {
      "op": "DUP3"
    },
    "20376": {
      "op": "DUP5"
    },
    "20377": {
      "op": "ADD"
    },
    "20378": {
      "op": "SWAP3"
    },
    "20379": {
      "op": "POP"
    },
    "20380": {
      "op": "DUP3"
    },
    "20381": {
      "op": "MLOAD"
    },
    "20382": {
      "op": "SWAP2"
    },
    "20383": {
      "op": "POP"
    },
    "20384": {
      "op": "DUP1"
    },
    "20385": {
      "op": "DUP3"
    },
    "20386": {
      "op": "GT"
    },
    "20387": {
      "op": "ISZERO"
    },
    "20388": {
      "op": "PUSH2",
      "value": "0x4FB0"
    },
    "20391": {
      "op": "JUMPI"
    },
    "20392": {
      "op": "POP"
    },
    "20393": {
      "op": "POP"
    },
    "20394": {
      "op": "POP"
    },
    "20395": {
      "op": "POP"
    },
    "20396": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "20399": {
      "op": "JUMP"
    },
    "20400": {
      "op": "JUMPDEST"
    },
    "20401": {
      "op": "POP"
    },
    "20402": {
      "op": "RETURNDATASIZE"
    },
    "20403": {
      "op": "DUP4"
    },
    "20404": {
      "op": "ADD"
    },
    "20405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20407": {
      "op": "DUP3"
    },
    "20408": {
      "op": "DUP5"
    },
    "20409": {
      "op": "ADD"
    },
    "20410": {
      "op": "ADD"
    },
    "20411": {
      "op": "GT"
    },
    "20412": {
      "op": "ISZERO"
    },
    "20413": {
      "op": "PUSH2",
      "value": "0x4FC8"
    },
    "20416": {
      "op": "JUMPI"
    },
    "20417": {
      "op": "POP"
    },
    "20418": {
      "op": "POP"
    },
    "20419": {
      "op": "POP"
    },
    "20420": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "20423": {
      "op": "JUMP"
    },
    "20424": {
      "op": "JUMPDEST"
    },
    "20425": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20427": {
      "op": "ADD"
    },
    "20428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20430": {
      "op": "NOT"
    },
    "20431": {
      "op": "AND"
    },
    "20432": {
      "op": "DUP2"
    },
    "20433": {
      "op": "ADD"
    },
    "20434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20436": {
      "op": "ADD"
    },
    "20437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20439": {
      "op": "MSTORE"
    },
    "20440": {
      "op": "SWAP2"
    },
    "20441": {
      "op": "POP"
    },
    "20442": {
      "op": "POP"
    },
    "20443": {
      "op": "SWAP1"
    },
    "20444": {
      "op": "JUMP"
    }
  },
  "sha1": "b33b67ace7dd8cc8771bc29f77ae03efa70b899e",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport \"../interfaces/ICryptoChampions.sol\";\nimport \"../interfaces/IMinigameFactoryRegistry.sol\";\nimport \"./chainlink_contracts/AggregatorV3Interface.sol\";\nimport \"./chainlink_contracts/VRFConsumerBase.sol\";\nimport \"./minigames/games/priceWars/PriceWarsFactory.sol\";\nimport \"./minigames/games/priceWars/PriceWars.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol\";\n\n/// @title Crypto Champions Interface\n/// @author Oozyx\n/// @notice This is the crypto champions class\ncontract CryptoChampions is ICryptoChampions, AccessControl, ERC1155, VRFConsumerBase {\n    using SafeMath for uint256;\n    using SafeMath for uint8;\n\n    // Possible phases the contract can be in.  Phase one is when users can mint elder spirits and two is when they can mint heros.\n    enum Phase { MINT_ELDER, MINT_HERO }\n\n    // The current phase the contract is in.\n    Phase public currentPhase;\n\n    // Number of tokens minted whenever a user mints a hero\n    uint256 internal constant NUM_TOKENS_MINTED = 500 * 10**18;\n\n    // The owner role is used to globally govern the contract\n    bytes32 internal constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\n\n    // The admin role is used for administrator duties and reports to the owner\n    bytes32 internal constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\");\n\n    // The role to declare round winners\n    bytes32 internal constant ROLE_GAME_ADMIN = keccak256(\"ROLE_GAME_ADMIN\");\n\n    // Reserved id for the in game currency\n    uint256 internal constant IN_GAME_CURRENCY_ID = 0;\n\n    // Constants used to determine fee proportions.\n    // Usage: fee.mul(proportion).div(10)\n    uint8 internal constant HERO_MINT_ROYALTY_PROPORTION = 8;\n\n    // The identifier for the price wars game\n    string internal constant PRICE_WARS_ID = \"PRICE_WARS\";\n\n    // The max amount of elders that can be minted\n    uint256 public constant MAX_NUMBER_OF_ELDERS = 7;\n\n    // The amount of elders minted\n    // This amount cannot be greater than MAX_NUMBER_OF_ELDERS\n    uint256 public eldersInGame = 0;\n\n    // The mapping of elder id to elder owner, ids can only be in the range of [1, MAX_NUMBER OF ELDERS]\n    mapping(uint256 => address) internal _elderOwners;\n\n    // The mapping of elder id to the elder spirit\n    mapping(uint256 => ElderSpirit) internal _elderSpirits;\n\n    // The amount of heros minted\n    uint256 public heroesMinted = 0;\n\n    // The mapping of hero id to owner, ids can only be in the range of\n    // [1 + MAX_NUMBER_OF_ELDERS, ]\n    mapping(uint256 => address) internal _heroOwners;\n\n    // The mapping of hero id to the hero\n    mapping(uint256 => Hero) internal _heroes;\n\n    // The mapping of the round played to the elder spawns mapping\n    mapping(uint256 => mapping(uint256 => uint256)) internal _roundElderSpawns;\n\n    // The mint price for elders and heroes\n    uint256 public elderMintPrice;\n\n    // The current round index\n    uint256 public currentRound;\n\n    // The mapping of affinities (token ticker) to price feed address\n    mapping(string => address) internal _affinities;\n\n    // List of available affinities\n    string[] public affinities;\n\n    // The key hash used for VRF\n    bytes32 internal _keyHash;\n\n    // The fee in LINK for VRF\n    uint256 internal _fee;\n\n    // Mapping of request id to hero id\n    mapping(bytes32 => uint256) internal _heroRandomRequest;\n\n    // Mapping of request id to random result\n    mapping(bytes32 => uint256) internal _randomResultsVRF;\n\n    // The list of affinities that won in a round\n    string[] public winningAffinitiesByRound;\n\n    // The registry of minigame factories\n    IMinigameFactoryRegistry internal _minigameFactoryRegistry;\n\n    /// @notice Triggered when an elder spirit gets minted\n    /// @param elderId The elder id belonging to the minted elder\n    /// @param owner The address of the owner\n    event ElderSpiritMinted(uint256 elderId, address owner);\n\n    /// @notice Triggered when a hero gets minted\n    /// @param heroId The hero id belonging to the hero that was minted\n    /// @param owner The address of the owner\n    event HeroMinted(uint256 heroId, address owner);\n\n    /// @notice Triggered when the elder spirits have been burned\n    event ElderSpiritsBurned();\n\n    /// @notice Triggered when a hero has been burned\n    /// @param heroId The hero id of the hero that was burned\n    event HeroBurned(uint256 heroId);\n\n    // Initializes a new CryptoChampions contract\n    // TODO: need to provide the proper uri\n    constructor(\n        bytes32 keyhash,\n        address vrfCoordinator,\n        address linkToken,\n        address minigameFactoryRegistry\n    ) public ERC1155(\"uri\") VRFConsumerBase(vrfCoordinator, linkToken) {\n        // Set up administrative roles\n        _setRoleAdmin(ROLE_OWNER, ROLE_OWNER);\n        _setRoleAdmin(ROLE_ADMIN, ROLE_OWNER);\n        _setRoleAdmin(ROLE_GAME_ADMIN, ROLE_OWNER);\n\n        // Set up the deployer as the owner and give admin rights\n        _setupRole(ROLE_OWNER, msg.sender);\n        grantRole(ROLE_ADMIN, msg.sender);\n\n        // Set initial elder mint price\n        elderMintPrice = 0.271 ether;\n\n        // Set the initial round to 0\n        currentRound = 0;\n\n        // Set initial phase to phase one\n        currentPhase = Phase.MINT_ELDER;\n\n        // Set VRF fields\n        _keyHash = keyhash;\n        _fee = 0.1 * 10**18; // 0.1 LINK\n\n        _minigameFactoryRegistry = IMinigameFactoryRegistry(minigameFactoryRegistry);\n    }\n\n    modifier isValidElderSpiritId(uint256 elderId) {\n        require(elderId > IN_GAME_CURRENCY_ID && elderId <= MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        _;\n    }\n\n    modifier isValidHero(uint256 heroId) {\n        require(heroId > MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        require(_heroes[heroId].valid); // dev: Hero is not valid.\n        _;\n    }\n\n    // Restrict to only price war addresses\n    modifier onlyGameAdmin {\n        _hasRole(ROLE_GAME_ADMIN);\n        _;\n    }\n\n    // Restrict to only admins\n    modifier onlyAdmin {\n        _hasRole(ROLE_ADMIN);\n        _;\n    }\n\n    /// @notice Makes a request for a random number\n    /// @param userProvidedSeed The seed for the random request\n    /// @return requestId The request id\n    function _getRandomNumber(uint256 userProvidedSeed) internal returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= _fee); // dev: Not enough LINK - fill contract with faucet\n        return requestRandomness(_keyHash, _fee, userProvidedSeed);\n    }\n\n    /// @notice Callback function used by the VRF coordinator\n    /// @param requestId The request id\n    /// @param randomness The randomness\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        _randomResultsVRF[requestId] = randomness;\n        _trainHero(requestId);\n    }\n\n    /// @notice Sets the contract's phase\n    /// @param phase The phase the contract should be set to\n    function setPhase(Phase phase) external onlyAdmin {\n        currentPhase = phase;\n    }\n\n    /// @notice Check if msg.sender has the role\n    /// @param role The role to verify\n    function _hasRole(bytes32 role) internal view {\n        require(hasRole(role, msg.sender)); // dev: Access denied.\n    }\n\n    /// @notice Creates a new token affinity\n    /// @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n    /// remove affinity function as well.\n    /// @param tokenTicker The token ticker of the affinity\n    /// @param feedAddress The price feed address\n    function createAffinity(string calldata tokenTicker, address feedAddress) external override onlyAdmin {\n        _affinities[tokenTicker] = feedAddress;\n        affinities.push(tokenTicker);\n    }\n\n    /// @notice Sets the elder mint price\n    /// @dev Can only be called by an admin address\n    /// @param price The new elder mint price\n    function setElderMintPrice(uint256 price) external override onlyAdmin {\n        elderMintPrice = price;\n    }\n\n    /// @notice Mints an elder spirit\n    /// @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n    /// probably be public constants defined in the crypto champions contract, this is subject to change.\n    /// @param raceId The race id\n    /// @param classId The class id\n    /// @param affinity The affinity of the minted hero\n    /// @return The elder spirit id\n    function mintElderSpirit(\n        uint256 raceId,\n        uint256 classId,\n        string calldata affinity\n    ) external payable override returns (uint256) {\n        require(currentPhase == Phase.MINT_ELDER); // dev: Can only mint elders in phase one\n        require(eldersInGame < MAX_NUMBER_OF_ELDERS); // dev: Max number of elders already minted.\n        require(msg.value >= elderMintPrice); // dev: Insufficient payment.\n        require(_affinities[affinity] != address(0)); // dev: Affinity does not exist.\n\n        // Generate the elderId and make sure it doesn't already exists\n        uint256 elderId = eldersInGame.add(1);\n        assert(_elderOwners[elderId] == address(0)); // dev: Elder with id already has owner.\n        assert(_elderSpirits[elderId].valid == false); // dev: Elder spirit with id has already been generated.\n\n        // Get the price data of affinity\n        int256 affinityPrice;\n        (, affinityPrice, , , ) = AggregatorV3Interface(_affinities[affinity]).latestRoundData();\n\n        // Create the elder spirit\n        ElderSpirit memory elder;\n        elder.valid = true;\n        elder.raceId = raceId;\n        elder.classId = classId;\n        elder.affinity = affinity;\n        elder.affinityPrice = affinityPrice;\n\n        // Mint the NFT\n        _mint(_msgSender(), elderId, 1, \"\"); // TODO: give the URI\n\n        // Assign the elder id with the owner and its spirit\n        _elderOwners[elderId] = _msgSender();\n        _elderSpirits[elderId] = elder;\n\n        // Increment elders minted\n        eldersInGame = eldersInGame.add(1);\n\n        // Refund if user sent too much\n        _refundSender(elderMintPrice);\n\n        emit ElderSpiritMinted(elderId, _msgSender());\n\n        return elderId;\n    }\n\n    /// @notice Gets the elder owner for the given elder id\n    /// @param elderId The elder id\n    /// @return The owner of the elder\n    function getElderOwner(uint256 elderId) public view override isValidElderSpiritId(elderId) returns (address) {\n        require(_elderOwners[elderId] != address(0)); // dev: Given elder id has not been minted.\n\n        return _elderOwners[elderId];\n    }\n\n    /// @notice Mints a hero based on an elder spirit\n    /// @param elderId The id of the elder spirit this hero is based on\n    /// @return The hero id\n    function mintHero(uint256 elderId, string calldata heroName)\n        external\n        payable\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(currentPhase == Phase.MINT_HERO); //dev: Can only mint hero in phase 2.\n        require(_elderSpirits[elderId].valid); // dev: Elder with id doesn't exists or not valid.\n\n        require(_canMintHero(elderId)); // dev: Can't mint hero. Too mnay heroes minted for elder.\n\n        uint256 mintPrice = getHeroMintPrice(currentRound, elderId);\n        require(msg.value >= mintPrice); // dev: Insufficient payment.\n\n        // Generate the hero id\n        uint256 heroId = heroesMinted.add(1) + MAX_NUMBER_OF_ELDERS;\n        assert(_heroOwners[heroId] == address(0)); // dev: Hero with id already has an owner.\n        assert(_heroes[heroId].valid == false); // dev: Hero with id has already been generated.\n\n        // Create the hero\n        Hero memory hero;\n        hero.valid = true;\n        hero.name = heroName;\n        hero.roundMinted = currentRound;\n        hero.elderId = elderId;\n        hero.raceId = _elderSpirits[elderId].raceId;\n        hero.classId = _elderSpirits[elderId].classId;\n        hero.affinity = _elderSpirits[elderId].affinity;\n        _heroes[heroId] = hero;\n\n        // Request the random number and set hero attributes\n        bytes32 requestId = _getRandomNumber(heroId);\n        _heroRandomRequest[requestId] = heroId;\n\n        // Mint the NFT\n        _mint(_msgSender(), heroId, 1, \"\"); // TODO: give the URI\n\n        // Mint in game currency tokens\n        _mint(_msgSender(), IN_GAME_CURRENCY_ID, NUM_TOKENS_MINTED, \"\");\n\n        // Assign the hero id with the owner and with the hero\n        _heroOwners[heroId] = _msgSender();\n\n        // Increment the heroes minted and the elder spawns\n        heroesMinted = heroesMinted.add(1);\n        _roundElderSpawns[currentRound][elderId] = _roundElderSpawns[currentRound][elderId].add(1);\n\n        // Disburse royalties\n        uint256 royaltyFee = mintPrice.mul(HERO_MINT_ROYALTY_PROPORTION).div(10);\n        address seedOwner = _elderOwners[elderId];\n        (bool success, ) = seedOwner.call{ value: royaltyFee }(\"\");\n        require(success, \"Payment failed\");\n        // Remaining 20% kept for contract/Treum\n\n        // Refund if user sent too much\n        _refundSender(mintPrice);\n\n        emit HeroMinted(heroId, _msgSender());\n\n        return heroId;\n    }\n\n    /// @notice Checks to see if a hero can be minted for a given elder\n    /// @dev (n < 4) || (n <= 2 * m)\n    ///     n is number of champions already minted for elder\n    ///     m is number of champions already minted for elder with least amount of champions\n    /// @param elderId The elder id\n    /// @return True if hero can be minted, false otherwise\n    function _canMintHero(uint256 elderId) internal view returns (bool) {\n        // Verify first condition\n        if (_roundElderSpawns[currentRound][elderId] < 4) {\n            return true;\n        }\n\n        // Find the elder with the least amount of heroes minted\n        uint256 smallestElderAmount = _roundElderSpawns[currentRound][elderId];\n        for (uint256 i = 1; i <= eldersInGame; ++i) {\n            if (_roundElderSpawns[currentRound][i] < smallestElderAmount) {\n                smallestElderAmount = _roundElderSpawns[currentRound][i];\n            }\n        }\n\n        return _roundElderSpawns[currentRound][elderId] <= smallestElderAmount.mul(2);\n    }\n\n    /// @notice Sets the hero attributes\n    /// @param requestId The request id that is mapped to a hero\n    function _trainHero(bytes32 requestId) internal isValidHero(_heroRandomRequest[requestId]) {\n        uint256 heroId = _heroRandomRequest[requestId];\n        uint256 randomNumber = _randomResultsVRF[requestId];\n        uint256 newRandomNumber;\n\n        _heroes[heroId].level = 1; // 1 by default\n        (_heroes[heroId].appearance, newRandomNumber) = _rollDice(2, randomNumber); // 1 out of 2\n\n        (_heroes[heroId].trait1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].trait2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n\n        (_heroes[heroId].alignment, newRandomNumber) = _rollDice(9, newRandomNumber); // 1 out of 9\n        (_heroes[heroId].background, newRandomNumber) = _rollDice(30, newRandomNumber); // 1 out of 30\n        (_heroes[heroId].hometown, newRandomNumber) = _rollDice(24, newRandomNumber); // 1 out of 24\n        (_heroes[heroId].weather, newRandomNumber) = _rollDice(7, newRandomNumber); // 1 ouf of 7\n\n        (_heroes[heroId].hp, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].hp = uint8(_heroes[heroId].hp.add(9));\n        (_heroes[heroId].mana, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].mana = uint8(_heroes[heroId].mana.add(9));\n        (_heroes[heroId].stamina, newRandomNumber) = _rollDice(31, newRandomNumber); // Roll 10-40\n        _heroes[heroId].stamina = uint8(_heroes[heroId].stamina.add(9));\n\n        (_heroes[heroId].strength, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].strength = uint8(_heroes[heroId].strength.add(2));\n        (_heroes[heroId].dexterity, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].dexterity = uint8(_heroes[heroId].dexterity.add(2));\n        (_heroes[heroId].constitution, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].constitution = uint8(_heroes[heroId].constitution.add(2));\n        (_heroes[heroId].intelligence, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].intelligence = uint8(_heroes[heroId].intelligence.add(2));\n        (_heroes[heroId].wisdom, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].wisdom = uint8(_heroes[heroId].wisdom.add(2));\n        (_heroes[heroId].charisma, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].charisma = uint8(_heroes[heroId].charisma.add(2));\n    }\n\n    /// @notice Simulates rolling dice\n    /// @param maxNumber The max number of the dice (e.g. regular die is 6)\n    /// @param randomNumber The random number\n    /// @return The result of the dice roll and a new random number to use for another dice roll\n    function _rollDice(uint8 maxNumber, uint256 randomNumber) internal pure returns (uint8, uint256) {\n        return (uint8(randomNumber.mod(maxNumber).add(1)), randomNumber.div(10));\n    }\n\n    /// @notice Get the hero owner for the given hero id\n    /// @param heroId The hero id\n    /// @return The owner address\n    function getHeroOwner(uint256 heroId) public view override isValidHero(heroId) returns (address) {\n        require(_heroOwners[heroId] != address(0)); // dev: Given hero id has not been minted.\n\n        return _heroOwners[heroId];\n    }\n\n    /// @notice Disburses the rewards evenly among the heroes of the winning affinity\n    /// @dev This will be called from a priviledged address\n    /// @param winningAffinity The winning affinity token ticker\n    function disburseRewards(string calldata winningAffinity) external override onlyAdmin {}\n\n    /// @notice Burns all the elder spirits in game\n    function burnElders() external override onlyAdmin {\n        require(eldersInGame > 0); // dev: No elders have been minted.\n        for (uint256 i = 1; i <= MAX_NUMBER_OF_ELDERS; ++i) {\n            if (_elderSpirits[i].valid) {\n                _burnElder(i);\n            }\n        }\n\n        // Increment the round\n        currentRound = currentRound.add(1);\n\n        emit ElderSpiritsBurned();\n    }\n\n    /// @notice Burns the elder spirit\n    /// @dev This will only be able to be called by the contract\n    /// @param elderId The elder id\n    function _burnElder(uint256 elderId) internal isValidElderSpiritId(elderId) {\n        require(_elderSpirits[elderId].valid); // dev: Cannot burn elder that does not exist.\n\n        // TODO: need to make sure _elderOwners[elderId] can never be address(0).\n        //     Check recipient before every token send so that we never send to address(0).\n        _burn(_elderOwners[elderId], elderId, 1);\n\n        // Reset elder values for elder id\n        eldersInGame = eldersInGame.sub(1);\n        _elderOwners[elderId] = address(0);\n        _elderSpirits[elderId].valid = false;\n    }\n\n    /// @notice Burns the hero for a refund\n    /// @dev This will only be able to be called from the owner of the hero\n    /// @param heroId The hero id to burn\n    function burnHero(uint256 heroId) external override isValidHero(heroId) {\n        require(_heroes[heroId].valid); // dev: Cannot burn hero that does not exist.\n        require(_heroOwners[heroId] == _msgSender()); // dev: Cannot burn hero that is not yours.\n\n        _burn(_heroOwners[heroId], heroId, 1);\n\n        // Decrement the amount of spawns for the hero's elder\n        uint256 elderId = _heroes[heroId].elderId;\n        uint256 heroRound = _heroes[heroId].roundMinted;\n        _roundElderSpawns[heroRound][elderId] = _roundElderSpawns[heroRound][elderId].sub(1);\n\n        // Reset hero values for hero id\n        _heroOwners[heroId] = address(0);\n        _heroes[heroId].valid = false;\n\n        emit HeroBurned(heroId);\n    }\n\n    /// @notice Gets the minting price of a hero based on specified elder spirit\n    /// @param round The round of the hero to be minted\n    /// @param elderId The elder id for which the hero will be based on\n    /// @return The hero mint price\n    function getHeroMintPrice(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Cannot get price round has not started.\n        uint256 heroAmount = _roundElderSpawns[round][elderId].add(1);\n\n        return _priceFormula(heroAmount);\n    }\n\n    /// @notice The bounding curve function that calculates price for the new supply\n    /// @dev price = 0.02*(heroes minted) + 0.1\n    /// @param newSupply The new supply after a burn or mint\n    /// @return The calculated price\n    function _priceFormula(uint256 newSupply) internal pure returns (uint256) {\n        uint256 price;\n        uint256 base = 1;\n        price = newSupply.mul(10**18).mul(2).div(100);\n        price = price.add(base.mul(10**18).div(10));\n\n        return price;\n    }\n\n    /// @dev Hook function called before every token transfer\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            // If token is an elder spirit, update owners so can send them royalties\n            if (ids[i] > IN_GAME_CURRENCY_ID && ids[i] <= MAX_NUMBER_OF_ELDERS) {\n                _elderOwners[ids[i]] = payable(to);\n            }\n            if (ids[i] > MAX_NUMBER_OF_ELDERS) {\n                _heroOwners[ids[i]] = to;\n            }\n        }\n    }\n\n    /// @notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n    /// @param round The round the elder was created\n    /// @param elderId The elder id\n    /// @return The amount of heroes spawned from the elder\n    function getElderSpawnsAmount(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Invalid round.\n        return _roundElderSpawns[round][elderId];\n    }\n\n    /// @notice Refunds the sender if they sent too much\n    /// @param cost The cost\n    function _refundSender(uint256 cost) internal {\n        if (msg.value.sub(cost) > 0) {\n            (bool success, ) = msg.sender.call{ value: msg.value.sub(cost) }(\"\");\n            require(success); // dev: Refund failed.\n        }\n    }\n\n    /// @notice Fetches the data of a single elder spirit\n    /// @param elderId The id of the elder being searched for\n    /// @return The elder's attributes in the following order (valid, raceId, classId, affinity)\n    function getElderSpirit(uint256 elderId)\n        external\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (\n            bool,\n            uint256,\n            uint256,\n            string memory,\n            int256\n        )\n    {\n        ElderSpirit memory elderSpirit = _elderSpirits[elderId];\n        return (\n            elderSpirit.valid,\n            elderSpirit.raceId,\n            elderSpirit.classId,\n            elderSpirit.affinity,\n            elderSpirit.affinityPrice\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return valid, affinity, affinity price, round minted, elder id\n    function getHeroGameData(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            bool, // valid\n            string memory, // affinity\n            int256, // affinity price\n            uint256, // round minted\n            uint256 // elder id\n        )\n    {\n        return (\n            _heroes[heroId].valid,\n            _heroes[heroId].affinity,\n            _heroes[heroId].affinityPrice,\n            _heroes[heroId].roundMinted,\n            _heroes[heroId].elderId\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return name, race id, class id, appearance\n    function getHeroVisuals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            string memory, // name\n            uint256, // race id\n            uint256, // class id\n            uint8 // appearance\n        )\n    {\n        return (_heroes[heroId].name, _heroes[heroId].raceId, _heroes[heroId].classId, _heroes[heroId].appearance);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return trait 1, trait 2, skill 1, skill 2\n    function getHeroTraitsSkills(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // trait 1\n            uint8, // trait 2\n            uint8, // skill 1\n            uint8 // skill 2\n        )\n    {\n        return (_heroes[heroId].trait1, _heroes[heroId].trait2, _heroes[heroId].skill1, _heroes[heroId].skill2);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return alignment, background, hometown, weather\n    function getHeroLore(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // alignment\n            uint8, // background\n            uint8, // hometown\n            uint8 // weather\n        )\n    {\n        return (\n            _heroes[heroId].alignment,\n            _heroes[heroId].background,\n            _heroes[heroId].hometown,\n            _heroes[heroId].weather\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return level, hp, mana\n    function getHeroVitals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // level\n            uint8, // hp\n            uint8, // mana\n            uint8 // stamina\n        )\n    {\n        return (_heroes[heroId].level, _heroes[heroId].hp, _heroes[heroId].mana, _heroes[heroId].stamina);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma\n    function getHeroStats(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint8, // strength\n            uint8, // dexterity\n            uint8, // constitution\n            uint8, // intelligence\n            uint8, // wisdom\n            uint8 // charisma\n        )\n    {\n        return (\n            _heroes[heroId].strength,\n            _heroes[heroId].dexterity,\n            _heroes[heroId].constitution,\n            _heroes[heroId].intelligence,\n            _heroes[heroId].wisdom,\n            _heroes[heroId].charisma\n        );\n    }\n\n    /// @notice Fetches the feed address for a given affinity\n    /// @param affinity The affinity being searched for\n    /// @return The address of the affinity's feed address\n    function getAffinityFeedAddress(string calldata affinity) external view override returns (address) {\n        return _affinities[affinity];\n    }\n\n    /// @notice Fetches the number of elders currently in the game\n    /// @return The current number of elders in the game\n    function getNumEldersInGame() external view override returns (uint256) {\n        return eldersInGame;\n    }\n\n    /// @notice Declares a winning affinity for a round\n    /// @dev This can only be called by a game admin contract\n    /// @param winningAffinity The affinity that won the game\n    function declareRoundWinner(string calldata winningAffinity) external override onlyGameAdmin {\n        winningAffinitiesByRound.push(winningAffinity);\n    }\n\n    /// @notice Starts a new price game\n    /// @dev This can only be called by the admin of the contract\n    function startNewPriceGame() external override onlyAdmin {\n        address priceWarsFactoryAddress = _minigameFactoryRegistry.getFactory(PRICE_WARS_ID);\n        PriceWarsFactory priceWarsFactory = PriceWarsFactory(priceWarsFactoryAddress);\n        PriceWars priceWar = priceWarsFactory.createPriceWar(address(this));\n        grantRole(ROLE_GAME_ADMIN, address(priceWar));\n        priceWar.startGame();\n    }\n\n    /// @notice Transfers in game currenct tokens from one address to another\n    function transferInGameTokens(address to, uint256 amount) external override {\n        bytes memory data;\n        safeTransferFrom(msg.sender, to, IN_GAME_CURRENCY_ID, amount, data);\n    }\n}\n",
  "sourceMap": "743:28585:25:-:0;;;2271:1;2241:31;;2616:1;2586:31;;4703:965;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4703:965:25;;;;;;;;;;;;;;;;;1976:354:5;;;;;;;;;;;-1:-1:-1;;;1976:354:5;;;;;;;4703:965:25;;;;;;;;;;;768:40:1;-1:-1:-1;;;768:18:1;:40::i;:::-;2026:13:5;2034:4;2026:7;:13::i;:::-;2128:41;-1:-1:-1;;;2128:18:5;:41::i;:::-;2269:54;-1:-1:-1;;;2269:18:5;:54::i;:::-;-1:-1:-1;;;;;;;9212:32:28;;;;;;;;9254;;;;;4960:37:25::2;-1:-1:-1::0;;;;;;;;;;;1375:23:25;4960:13:::2;:37::i;:::-;5007;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;5007:13:25::2;:37::i;:::-;5054:42;1639:28;-1:-1:-1::0;;;;;;;;;;;5054:13:25::2;:42::i;:::-;5173:34;-1:-1:-1::0;;;;;;;;;;;5196:10:25::2;5173;:34::i;:::-;5217:33;-1:-1:-1::0;;;;;;;;;;;5239:10:25::2;5217:9;:33::i;:::-;5318:11;5301:14;:28:::0;5393:1:::2;5378:12;:16:::0;5447:12:::2;:31:::0;;-1:-1:-1;;5447:31:25::2;::::0;;5515:8:::2;:18:::0;;;;-1:-1:-1;;5550:12:25::2;5543:4;:19:::0;5585:24:::2;:76:::0;;-1:-1:-1;;;;;;5585:76:25::2;-1:-1:-1::0;;;;;5585:76:25;;::::2;::::0;;;::::2;::::0;;743:28585;;1507:198:1;-1:-1:-1;;;;;;1590:25:1;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:1;;;;;1694:4;1658:33;;;;;;;;:40;;-1:-1:-1;;1658:40:1;;;;;;1507:198::o;7541:86:5:-;7607:13;;;;:4;;:13;;;;;:::i;:::-;;7541:86;:::o;6823:196:0:-;6934:6;:12;;;;;;;;;;;:22;;;6911:57;;6958:9;;6941:4;;6911:57;;6934:6;6911:57;6978:6;:12;;;;;;;;;;;:22;;:34;6823:196::o;6588:110::-;6666:25;6677:4;6683:7;6666:10;:25::i;4644:223::-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:184;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;598:104:11:-;685:10;598:104;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;;3042:29;;;;;:38;;:::i;:::-;3035:45;;2950:137;;;;;:::o;6429:150:12:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:12;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:12;;7087:9;:55::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;743:28585:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:28585:25;;;-1:-1:-1;743:28585:25;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CryptoChampions.sol",
  "type": "contract"
}