{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "linkToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minigameFactoryRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ElderSpiritMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ElderSpiritsBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "HeroBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "HeroMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUMBER_OF_ELDERS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "affinities",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnElders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "burnHero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenTicker",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "feedAddress",
          "type": "address"
        }
      ],
      "name": "createAffinity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "declareRoundWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "winningAffinity",
          "type": "string"
        }
      ],
      "name": "disburseRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "elderMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "getAffinityFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpawnsAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getElderSpirit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroGameData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroLore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "round",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        }
      ],
      "name": "getHeroMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroTraitsSkills",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVisuals",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "getHeroVitals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumEldersInGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heroesMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raceId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "affinity",
          "type": "string"
        }
      ],
      "name": "mintElderSpirit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elderId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "heroName",
          "type": "string"
        }
      ],
      "name": "mintHero",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setElderMintPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptoChampions.Phase",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "name": "setPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startNewPriceGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        }
      ],
      "name": "trainHero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningAffinitiesByRound",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
    "1": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "10": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "11": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "12": "contracts/CryptoChampions.sol",
    "13": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
    "14": "contracts/chainlink_contracts/LinkTokenInterface.sol",
    "15": "contracts/chainlink_contracts/VRFConsumerBase.sol",
    "16": "contracts/chainlink_contracts/VRFRequestIDBase.sol",
    "17": "contracts/minigames/Minigame.sol",
    "18": "contracts/minigames/games/priceWars/PriceWars.sol",
    "19": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
    "2": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "21": "interfaces/ICryptoChampions.sol",
    "22": "interfaces/IMinigameFactoryRegistry.sol",
    "3": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "4": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SignedSafeMath.sol",
    "5": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
    "6": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155.sol",
    "7": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155MetadataURI.sol",
    "8": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "9": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptoChampions.sol",
    "exportedSymbols": {
      "CryptoChampions": [
        2064
      ]
    },
    "id": 2065,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:12"
      },
      {
        "absolutePath": "interfaces/ICryptoChampions.sol",
        "file": "../interfaces/ICryptoChampions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 4417,
        "src": "64:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMinigameFactoryRegistry.sol",
        "file": "../interfaces/IMinigameFactoryRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 4434,
        "src": "109:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/AggregatorV3Interface.sol",
        "file": "./chainlink_contracts/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 3847,
        "src": "162:57:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/VRFConsumerBase.sol",
        "file": "./chainlink_contracts/VRFConsumerBase.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 3970,
        "src": "220:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWarsFactory.sol",
        "file": "./minigames/games/priceWars/PriceWarsFactory.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 4147,
        "src": "272:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/minigames/games/priceWars/PriceWars.sol",
        "file": "./minigames/games/priceWars/PriceWars.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 4109,
        "src": "331:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 2438,
        "src": "384:86:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 2793,
        "src": "471:79:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cds95/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 2065,
        "sourceUnit": 3801,
        "src": "551:87:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ICryptoChampions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4416,
              "src": "771:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICryptoChampions_$4416",
                "typeString": "contract ICryptoChampions"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "771:16:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2437,
              "src": "789:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$2437",
                "typeString": "contract AccessControl"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "789:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3800,
              "src": "804:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$3800",
                "typeString": "contract ERC1155"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "804:7:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "VRFConsumerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3969,
              "src": "813:15:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFConsumerBase_$3969",
                "typeString": "contract VRFConsumerBase"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "813:15:12"
          }
        ],
        "contractDependencies": [
          2437,
          3800,
          3969,
          4416,
          4752,
          5301,
          5423,
          5438,
          5624,
          5974
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11,
          "nodeType": "StructuredDocumentation",
          "src": "640:103:12",
          "text": "@title Crypto Champions Interface\n @author Oozyx\n @notice This is the crypto champions class"
        },
        "fullyImplemented": true,
        "id": 2064,
        "linearizedBaseContracts": [
          2064,
          3969,
          5624,
          3800,
          5438,
          5423,
          5301,
          5974,
          2437,
          4752,
          4416
        ],
        "name": "CryptoChampions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2792,
              "src": "841:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2792",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "835:27:12",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "CryptoChampions.Phase",
            "id": 25,
            "members": [
              {
                "id": 23,
                "name": "MINT_ELDER",
                "nodeType": "EnumValue",
                "src": "1013:10:12"
              },
              {
                "id": 24,
                "name": "MINT_HERO",
                "nodeType": "EnumValue",
                "src": "1025:9:12"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1000:36:12"
          },
          {
            "constant": false,
            "functionSelector": "055ad42e",
            "id": 27,
            "mutability": "mutable",
            "name": "currentPhase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1087:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Phase_$25",
              "typeString": "enum CryptoChampions.Phase"
            },
            "typeName": {
              "contractScope": null,
              "id": 26,
              "name": "Phase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25,
              "src": "1087:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Phase_$25",
                "typeString": "enum CryptoChampions.Phase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 32,
            "mutability": "constant",
            "name": "ROLE_OWNER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1181:62:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 28,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1181:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f4f574e4552",
                  "id": 30,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1230:12:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  },
                  "value": "ROLE_OWNER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
                    "typeString": "literal_string \"ROLE_OWNER\""
                  }
                ],
                "id": 29,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1220:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1220:23:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 37,
            "mutability": "constant",
            "name": "ROLE_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1330:62:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 33,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1330:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f41444d494e",
                  "id": 35,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1379:12:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  },
                  "value": "ROLE_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
                    "typeString": "literal_string \"ROLE_ADMIN\""
                  }
                ],
                "id": 34,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1369:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1369:23:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 42,
            "mutability": "constant",
            "name": "ROLE_GAME_ADMIN",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1440:72:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 38,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1440:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "524f4c455f47414d455f41444d494e",
                  "id": 40,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1494:17:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  },
                  "value": "ROLE_GAME_ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3",
                    "typeString": "literal_string \"ROLE_GAME_ADMIN\""
                  }
                ],
                "id": 39,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1484:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1484:28:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 45,
            "mutability": "constant",
            "name": "IN_GAME_CURRENCY_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1563:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1563:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1611:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 48,
            "mutability": "constant",
            "name": "HERO_MINT_ROYALTY_PROPORTION",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1713:56:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 46,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1713:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "38",
              "id": 47,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1768:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 51,
            "mutability": "constant",
            "name": "PRICE_WARS_ID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1822:53:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 49,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1822:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50524943455f57415253",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1863:12:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b6cec68f785839f995f869881592b008194e95f206e81883d1180a68c36101a2",
                "typeString": "literal_string \"PRICE_WARS\""
              },
              "value": "PRICE_WARS"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "90ded47e",
            "id": 54,
            "mutability": "constant",
            "name": "MAX_NUMBER_OF_ELDERS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "1933:48:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1933:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "37",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1980:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf61211f",
            "id": 57,
            "mutability": "mutable",
            "name": "eldersInGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2086:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2086:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2116:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "_elderOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2229:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2237:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2229:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2248:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "_elderSpirits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2336:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
              "typeString": "mapping(uint256 => struct ElderSpirit)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2344:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2336:31:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                "typeString": "mapping(uint256 => struct ElderSpirit)"
              },
              "valueType": {
                "contractScope": null,
                "id": 63,
                "name": "ElderSpirit",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4159,
                "src": "2355:11:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage_ptr",
                  "typeString": "struct ElderSpirit"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "caab7ef8",
            "id": 68,
            "mutability": "mutable",
            "name": "heroesMinted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2431:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2431:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2461:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "_heroOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2577:48:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 69,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2585:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2577:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2596:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 76,
            "mutability": "mutable",
            "name": "_heroes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2674:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
              "typeString": "mapping(uint256 => struct Hero)"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2682:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2674:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                "typeString": "mapping(uint256 => struct Hero)"
              },
              "valueType": {
                "contractScope": null,
                "id": 74,
                "name": "Hero",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4214,
                "src": "2693:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Hero_$4214_storage_ptr",
                  "typeString": "struct Hero"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 82,
            "mutability": "mutable",
            "name": "_roundElderSpawns",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2789:74:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2797:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2789:47:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 80,
                "keyType": {
                  "id": 78,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2816:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2808:27:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 79,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2827:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "79935fe0",
            "id": 84,
            "mutability": "mutable",
            "name": "elderMintPrice",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2914:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2914:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a19c8bc",
            "id": 86,
            "mutability": "mutable",
            "name": "currentRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "2981:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2981:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 90,
            "mutability": "mutable",
            "name": "_affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3085:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 89,
              "keyType": {
                "id": 87,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3093:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3085:26:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 88,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3103:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e5b0a993",
            "id": 93,
            "mutability": "mutable",
            "name": "affinities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3175:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 91,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3175:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 92,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3175:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 95,
            "mutability": "mutable",
            "name": "_keyHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3241:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 94,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3241:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 97,
            "mutability": "mutable",
            "name": "_fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3304:21:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 96,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3304:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "_heroRandomRequest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3372:55:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 100,
              "keyType": {
                "id": 98,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3380:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3372:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 99,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3391:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "_randomResultsVRF",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3480:54:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 104,
              "keyType": {
                "id": 102,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3488:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3480:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3499:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de51353",
            "id": 108,
            "mutability": "mutable",
            "name": "winningAffinitiesByRound",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3591:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 106,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3591:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 107,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3591:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 110,
            "mutability": "mutable",
            "name": "_minigameFactoryRegistry",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2064,
            "src": "3680:58:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
              "typeString": "contract IMinigameFactoryRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 109,
              "name": "IMinigameFactoryRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4433,
              "src": "3680:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
                "typeString": "contract IMinigameFactoryRegistry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "3745:166:12",
              "text": "@notice Triggered when an elder spirit gets minted\n @param elderId The elder id belonging to the minted elder\n @param owner The address of the owner"
            },
            "id": 117,
            "name": "ElderSpiritMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3940:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 117,
                  "src": "3957:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3939:32:12"
            },
            "src": "3916:56:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "3978:163:12",
              "text": "@notice Triggered when a hero gets minted\n @param heroId The hero id belonging to the hero that was minted\n @param owner The address of the owner"
            },
            "id": 124,
            "name": "HeroMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 124,
                  "src": "4163:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 124,
                  "src": "4179:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4179:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4162:31:12"
            },
            "src": "4146:48:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 125,
              "nodeType": "StructuredDocumentation",
              "src": "4200:61:12",
              "text": "@notice Triggered when the elder spirits have been burned"
            },
            "id": 127,
            "name": "ElderSpiritsBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4290:2:12"
            },
            "src": "4266:27:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "4299:111:12",
              "text": "@notice Triggered when a hero has been burned\n @param heroId The hero id of the hero that was burned"
            },
            "id": 132,
            "name": "HeroBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 132,
                  "src": "4432:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4432:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4431:16:12"
            },
            "src": "4415:33:12"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "4756:757:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4819:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4831:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 150,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "4805:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4805:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4866:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4878:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 155,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "4852:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "4913:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4930:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 160,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "4899:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "ROLE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5029:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5041:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5041:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 165,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "5018:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "5018:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5072:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5084:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5084:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 171,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "5062:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:33:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "5146:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "302e323731",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5163:11:12",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_271000000000000000_by_1",
                        "typeString": "int_const 271000000000000000"
                      },
                      "value": "0.271"
                    },
                    "src": "5146:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "5146:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "5223:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5238:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5223:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "5223:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "5292:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$25",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "5307:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
                          "typeString": "type(enum CryptoChampions.Phase)"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "MINT_ELDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5307:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$25",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "5292:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$25",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "5360:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5371:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5360:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "5360:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "5388:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "302e31",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5395:3:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5401:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5405:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "5401:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "5395:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "5388:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "5388:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "_minigameFactoryRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "5430:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 204,
                          "name": "minigameFactoryRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "5482:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 203,
                        "name": "IMinigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4433,
                        "src": "5457:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IMinigameFactoryRegistry_$4433_$",
                          "typeString": "type(contract IMinigameFactoryRegistry)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5457:49:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
                        "typeString": "contract IMinigameFactoryRegistry"
                      }
                    },
                    "src": "5430:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
                      "typeString": "contract IMinigameFactoryRegistry"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "5430:76:12"
                }
              ]
            },
            "documentation": null,
            "id": 209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "757269",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4706:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_96ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1",
                      "typeString": "literal_string \"uri\""
                    },
                    "value": "uri"
                  }
                ],
                "id": 144,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3800,
                  "src": "4698:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$3800_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4698:14:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 146,
                    "name": "vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 136,
                    "src": "4729:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 147,
                    "name": "linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138,
                    "src": "4745:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 145,
                  "name": "VRFConsumerBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3969,
                  "src": "4713:15:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$3969_$",
                    "typeString": "type(contract VRFConsumerBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4713:42:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "keyhash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "4569:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "vrfCoordinator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "4594:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4594:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "linkToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "4626:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4626:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "minigameFactoryRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 209,
                  "src": "4653:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4653:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4559:131:12"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4756:0:12"
            },
            "scope": 2064,
            "src": "4548:965:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "5566:132:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "5584:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 215,
                            "name": "IN_GAME_CURRENCY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "5594:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5584:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 217,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "5617:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 218,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "5628:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5617:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5584:64:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5576:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5576:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "5576:73:12"
                },
                {
                  "id": 223,
                  "nodeType": "PlaceholderStatement",
                  "src": "5690:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 225,
            "name": "isValidElderSpiritId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 225,
                  "src": "5549:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5549:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5548:17:12"
            },
            "src": "5519:179:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "5741:164:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "5759:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5768:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5759:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5751:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "5838:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "5846:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5838:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4161,
                        "src": "5838:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5830:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5830:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "5830:30:12"
                },
                {
                  "id": 242,
                  "nodeType": "PlaceholderStatement",
                  "src": "5897:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 244,
            "name": "isValidHero",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 244,
                  "src": "5725:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5725:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5724:16:12"
            },
            "src": "5704:201:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "5978:53:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 247,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5997:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 246,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "5988:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5988:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "5988:25:12"
                },
                {
                  "id": 250,
                  "nodeType": "PlaceholderStatement",
                  "src": "6023:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 252,
            "name": "onlyGameAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5978:0:12"
            },
            "src": "5955:76:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "6087:48:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "6106:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 254,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "6097:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6097:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "6097:20:12"
                },
                {
                  "id": 258,
                  "nodeType": "PlaceholderStatement",
                  "src": "6127:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6087:0:12"
            },
            "src": "6068:67:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "6387:183:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 273,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6428:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2064",
                                    "typeString": "contract CryptoChampions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoChampions_$2064",
                                    "typeString": "contract CryptoChampions"
                                  }
                                ],
                                "id": 272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6420:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 271,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6420:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6420:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 269,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "6405:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$5574",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5506,
                            "src": "6405:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6405:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "6438:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6405:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6397:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "6530:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 282,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "6540:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "userProvidedSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "6546:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 280,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3920,
                      "src": "6512:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6512:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 267,
                  "id": 285,
                  "nodeType": "Return",
                  "src": "6505:58:12"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "6141:152:12",
              "text": "@notice Makes a request for a random number\n @param userProvidedSeed The seed for the random request\n @return requestId The request id"
            },
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRandomNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "userProvidedSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 287,
                  "src": "6324:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6323:26:12"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 287,
                  "src": "6368:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6368:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6367:19:12"
            },
            "scope": 2064,
            "src": "6298:272:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3865
            ],
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "6803:58:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_randomResultsVRF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "6813:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 298,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "6831:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6813:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 299,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "6844:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6813:41:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "6813:41:12"
                }
              ]
            },
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "6576:138:12",
              "text": "@notice Callback function used by the VRF coordinator\n @param requestId The request id\n @param randomness The randomness"
            },
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 294,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6794:8:12"
            },
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 303,
                  "src": "6746:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6746:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 303,
                  "src": "6765:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6765:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6745:39:12"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6803:0:12"
            },
            "scope": 2064,
            "src": "6719:142:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "7020:37:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "7030:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$25",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "7045:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$25",
                        "typeString": "enum CryptoChampions.Phase"
                      }
                    },
                    "src": "7030:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$25",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "7030:20:12"
                }
              ]
            },
            "documentation": {
              "id": 304,
              "nodeType": "StructuredDocumentation",
              "src": "6867:98:12",
              "text": "@notice Sets the contract's phase\n @param phase The phase the contract should be set to"
            },
            "functionSelector": "c03afb59",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 309,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "7010:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7010:9:12"
              }
            ],
            "name": "setPhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "phase",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 316,
                  "src": "6988:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$25",
                    "typeString": "enum CryptoChampions.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 305,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "6988:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$25",
                      "typeString": "enum CryptoChampions.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6987:13:12"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7020:0:12"
            },
            "scope": 2064,
            "src": "6970:87:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "7197:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "7223:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 325,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7229:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7229:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 323,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "7215:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7215:25:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7207:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7207:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "7207:34:12"
                }
              ]
            },
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "7063:83:12",
              "text": "@notice Check if msg.sender has the role\n @param role The role to verify"
            },
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "role",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 331,
                  "src": "7169:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7169:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7168:14:12"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7197:0:12"
            },
            "scope": 2064,
            "src": "7151:120:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4221
            ],
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "7693:93:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 342,
                        "name": "_affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "7703:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 344,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "7715:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7703:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 345,
                      "name": "feedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "7730:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7703:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "7703:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "tokenTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "7767:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "affinities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "7751:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7751:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7751:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "7751:28:12"
                }
              ]
            },
            "documentation": {
              "id": 332,
              "nodeType": "StructuredDocumentation",
              "src": "7277:309:12",
              "text": "@notice Creates a new token affinity\n @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n remove affinity function as well.\n @param tokenTicker The token ticker of the affinity\n @param feedAddress The price feed address"
            },
            "functionSelector": "9d5b82c0",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 340,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 339,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "7683:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7683:9:12"
              }
            ],
            "name": "createAffinity",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 338,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7674:8:12"
            },
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "tokenTicker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "7615:27:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7615:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "feedAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 355,
                  "src": "7644:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7644:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7614:50:12"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7693:0:12"
            },
            "scope": 2064,
            "src": "7591:195:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4226
            ],
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "8002:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 364,
                      "name": "elderMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "8012:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 365,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "8029:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8012:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "8012:22:12"
                }
              ]
            },
            "documentation": {
              "id": 356,
              "nodeType": "StructuredDocumentation",
              "src": "7792:135:12",
              "text": "@notice Sets the elder mint price\n @dev Can only be called by an admin address\n @param price The new elder mint price"
            },
            "functionSelector": "e3e98382",
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 361,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "7992:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7992:9:12"
              }
            ],
            "name": "setElderMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 360,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7983:8:12"
            },
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 369,
                  "src": "7959:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7959:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7958:15:12"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8002:0:12"
            },
            "scope": 2064,
            "src": "7932:109:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4237
            ],
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "8629:1582:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$25",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 383,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "8647:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$25",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "8663:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_ELDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8663:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$25",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "8647:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8639:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8639:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "8639:41:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "8740:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "MAX_NUMBER_OF_ELDERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "8755:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8740:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8732:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8732:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "8732:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8839:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8839:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 398,
                          "name": "elderMintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "8852:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8839:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8831:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8831:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "8831:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 403,
                            "name": "_affinities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "8915:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 404,
                            "name": "affinity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "8927:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8915:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8948:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8940:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8940:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8940:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8915:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8907:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8907:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "8907:44:12"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 527,
                      "src": "9067:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 413,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9067:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9102:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "eldersInGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "9085:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2619,
                      "src": "9085:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9085:19:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9067:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 421,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "9121:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 422,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "9134:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9121:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9154:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9146:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 424,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9146:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9146:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9121:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 420,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9114:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9114:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "9114:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 432,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "9215:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 434,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "elderId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "9229:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9215:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4150,
                          "src": "9215:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9247:5:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9215:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 431,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9208:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9208:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "9208:45:12"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "affinityPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 527,
                      "src": "9363:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9363:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 442,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9363:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 443,
                          "name": "affinityPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "9396:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 444,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9393:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
                        "typeString": "tuple(,int256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 446,
                                "name": "_affinities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90,
                                "src": "9441:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 448,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 447,
                                "name": "affinity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 376,
                                "src": "9453:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9441:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 445,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3846,
                            "src": "9419:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$3846_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9419:44:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$3846",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "latestRoundData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3845,
                        "src": "9419:60:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                          "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9419:62:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "src": "9393:88:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:88:12"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "elder",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 527,
                      "src": "9527:24:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 454,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4159,
                        "src": "9527:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9527:24:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 457,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9561:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4150,
                      "src": "9561:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9575:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9561:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "9561:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9589:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4152,
                      "src": "9589:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 466,
                      "name": "raceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "9604:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9589:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "9589:21:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 469,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9620:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4154,
                      "src": "9620:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "classId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "9636:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9620:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "9620:23:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9653:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4156,
                      "src": "9653:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "9670:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "9653:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "9653:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "elder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9688:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                          "typeString": "struct ElderSpirit memory"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinityPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4158,
                      "src": "9688:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 484,
                      "name": "affinityPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "9710:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "9688:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "9688:35:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 488,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4740,
                          "src": "9764:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9764:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "9778:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9787:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9790:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 487,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3348,
                      "src": "9758:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9758:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "9758:35:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "9887:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 497,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "9900:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9887:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 498,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4740,
                        "src": "9911:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9911:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9887:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "9887:36:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 502,
                        "name": "_elderSpirits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "9933:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                          "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                        }
                      },
                      "id": 504,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "9947:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9933:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                        "typeString": "struct ElderSpirit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 505,
                      "name": "elder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "9958:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                        "typeString": "struct ElderSpirit memory"
                      }
                    },
                    "src": "9933:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "9933:30:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "10009:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10041:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 509,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "10024:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "10024:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10024:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10009:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "10009:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "elderMintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "10108:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 515,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1700,
                      "src": "10094:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10094:29:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "10094:29:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "10157:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 521,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4740,
                          "src": "10166:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10166:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 519,
                      "name": "ElderSpiritMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "10139:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10139:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "EmitStatement",
                  "src": "10134:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 525,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 414,
                    "src": "10197:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 381,
                  "id": 526,
                  "nodeType": "Return",
                  "src": "10190:14:12"
                }
              ]
            },
            "documentation": {
              "id": 370,
              "nodeType": "StructuredDocumentation",
              "src": "8047:419:12",
              "text": "@notice Mints an elder spirit\n @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n probably be public constants defined in the crypto champions contract, this is subject to change.\n @param raceId The race id\n @param classId The class id\n @param affinity The affinity of the minted hero\n @return The elder spirit id"
            },
            "functionSelector": "0fbea841",
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 378,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8602:8:12"
            },
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "raceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "8505:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "classId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "8529:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8529:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "8554:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8554:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8495:89:12"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "8620:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8620:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8619:9:12"
            },
            "scope": 2064,
            "src": "8471:1740:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4244
            ],
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "10461:144:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 541,
                            "name": "_elderOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "10479:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 543,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "10492:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10479:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10512:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10504:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 544,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10504:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10504:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10479:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10471:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10471:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "10471:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "10577:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 553,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "10590:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10577:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 539,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "10570:28:12"
                }
              ]
            },
            "documentation": {
              "id": 529,
              "nodeType": "StructuredDocumentation",
              "src": "10217:130:12",
              "text": "@notice Gets the elder owner for the given elder id\n @param elderId The elder id\n @return The owner of the elder"
            },
            "functionSelector": "72eda5bb",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 535,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 531,
                    "src": "10434:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 534,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "10413:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10413:29:12"
              }
            ],
            "name": "getElderOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 533,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10404:8:12"
            },
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 556,
                  "src": "10375:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10375:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10374:17:12"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 556,
                  "src": "10452:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10452:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10451:9:12"
            },
            "scope": 2064,
            "src": "10352:253:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4253
            ],
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "10944:2148:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$25",
                          "typeString": "enum CryptoChampions.Phase"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "10962:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$25",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 572,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10978:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
                              "typeString": "type(enum CryptoChampions.Phase)"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINT_HERO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10978:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$25",
                            "typeString": "enum CryptoChampions.Phase"
                          }
                        },
                        "src": "10962:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10954:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10954:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "10954:40:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "11050:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 579,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "11064:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11050:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4150,
                        "src": "11050:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11042:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11042:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "11042:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 586,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "11162:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 585,
                          "name": "_canMintHero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "11149:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11149:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11141:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11141:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "11141:30:12"
                },
                {
                  "assignments": [
                    591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "mintPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "11241:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 590,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11241:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "11278:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "11292:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 592,
                      "name": "getHeroMintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1508,
                      "src": "11261:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11261:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11241:59:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11318:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11318:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 600,
                          "name": "mintPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "11331:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11318:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11310:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11310:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "11310:31:12"
                },
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "heroId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "11414:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11414:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 612,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11448:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 606,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "11431:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "11431:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11431:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "11453:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11431:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11414:59:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "11490:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 616,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 615,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "11502:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11490:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11521:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11513:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 617,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11513:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11513:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11490:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 613,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11483:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11483:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "11483:41:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 625,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "11584:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 627,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "11592:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11584:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4161,
                          "src": "11584:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11609:5:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11584:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 624,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "11577:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11577:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "11577:38:12"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "hero",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "11702:16:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                        "typeString": "struct Hero"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 633,
                        "name": "Hero",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4214,
                        "src": "11702:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage_ptr",
                          "typeString": "struct Hero"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11702:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11728:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4161,
                      "src": "11728:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11741:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11728:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "11728:17:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11755:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4163,
                      "src": "11755:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "heroName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "11767:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "11755:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "11755:20:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11785:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roundMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4169,
                      "src": "11785:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 651,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "11804:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11785:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "11785:31:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11826:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "elderId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4171,
                      "src": "11826:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 657,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "11841:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11826:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "11826:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11858:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4173,
                      "src": "11858:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 663,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "11872:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 665,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "11886:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11872:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "raceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4152,
                      "src": "11872:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11858:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "11858:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 669,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11911:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4175,
                      "src": "11911:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "11926:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 673,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "11940:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11926:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "classId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4154,
                      "src": "11926:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11911:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "11911:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 678,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11966:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                          "typeString": "struct Hero memory"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4165,
                      "src": "11966:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 681,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "11982:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 683,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "11996:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11982:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "affinity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4156,
                      "src": "11982:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "11966:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "11966:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "12023:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 689,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 688,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12031:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12023:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4214_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 690,
                      "name": "hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "12041:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4214_memory_ptr",
                        "typeString": "struct Hero memory"
                      }
                    },
                    "src": "12023:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hero_$4214_storage",
                      "typeString": "struct Hero storage ref"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "12023:22:12"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "12117:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12117:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 698,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12154:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 695,
                      "name": "_getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "12137:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) returns (bytes32)"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12137:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12117:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "_heroRandomRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "12171:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 701,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 700,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12190:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12171:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 702,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "12200:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12171:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "12171:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 706,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4740,
                          "src": "12250:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12250:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12264:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12272:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12275:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 705,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3348,
                      "src": "12244:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12244:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "12244:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "12374:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12386:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12374:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 716,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4740,
                        "src": "12396:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12396:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12374:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "12374:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 720,
                      "name": "heroesMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "12479:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12511:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 721,
                          "name": "heroesMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "12494:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "12494:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12494:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12479:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "12479:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 727,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "12523:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 730,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 728,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "12541:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12523:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 731,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "12555:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12523:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12611:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 732,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "12566:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 734,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 733,
                              "name": "currentRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "12584:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12566:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 736,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 735,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "12598:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12566:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "12566:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12566:47:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12523:90:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:90:12"
                },
                {
                  "assignments": [
                    743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 743,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "12654:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12654:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 751,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12723:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 746,
                            "name": "HERO_MINT_ROYALTY_PROPORTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "12689:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 744,
                            "name": "mintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "12675:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2675,
                          "src": "12675:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12675:43:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "12675:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12675:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12654:72:12"
                },
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "mutability": "mutable",
                      "name": "seedOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "12736:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12736:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "_elderOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "12756:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "12769:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12756:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12736:41:12"
                },
                {
                  "assignments": [
                    759,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 784,
                      "src": "12788:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12788:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12842:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 760,
                          "name": "seedOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "12806:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12806:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 762,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 743,
                          "src": "12829:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "12806:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12806:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12787:58:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "12863:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061796d656e74206661696c6564",
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12872:16:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        },
                        "value": "Payment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87ec06ce2059ab3cf6fe4dd2fb1218712f1c693016c832faa431271492b69c3e",
                          "typeString": "literal_string \"Payment failed\""
                        }
                      ],
                      "id": 767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12855:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12855:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "12855:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "mintPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "13003:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 772,
                      "name": "_refundSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1700,
                      "src": "12989:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12989:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "12989:24:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 777,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "13040:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 778,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4740,
                          "src": "13048:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13048:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 776,
                      "name": "HeroMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "13029:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13029:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 781,
                  "nodeType": "EmitStatement",
                  "src": "13024:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 782,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 605,
                    "src": "13079:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 569,
                  "id": 783,
                  "nodeType": "Return",
                  "src": "13072:13:12"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "10611:149:12",
              "text": "@notice Mints a hero based on an elder spirit\n @param elderId The id of the elder spirit this hero is based on\n @return The hero id"
            },
            "functionSelector": "498e8219",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 565,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 559,
                    "src": "10905:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 566,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 564,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "10884:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10884:29:12"
              }
            ],
            "name": "mintHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10867:8:12"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 785,
                  "src": "10783:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10783:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "heroName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 785,
                  "src": "10800:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10800:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10782:43:12"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 785,
                  "src": "10931:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10931:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10930:9:12"
            },
            "scope": 2064,
            "src": "10765:2327:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "13526:598:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 793,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "13574:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 795,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 794,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "13592:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13574:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 797,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "13606:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13574:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13617:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "13574:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 803,
                  "nodeType": "IfStatement",
                  "src": "13570:86:12",
                  "trueBody": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "13620:36:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13641:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 792,
                        "id": 801,
                        "nodeType": "Return",
                        "src": "13634:11:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "smallestElderAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 852,
                      "src": "13731:27:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13731:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 806,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "13761:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 808,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 807,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "13779:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13761:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 810,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 809,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "13793:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13761:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13731:70:12"
                },
                {
                  "body": {
                    "id": 839,
                    "nodeType": "Block",
                    "src": "13855:175:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 822,
                                "name": "_roundElderSpawns",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "13873:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 824,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 823,
                                "name": "currentRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "13891:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13873:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 826,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 825,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "13905:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13873:34:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "smallestElderAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 805,
                            "src": "13910:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13873:56:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 838,
                        "nodeType": "IfStatement",
                        "src": "13869:151:12",
                        "trueBody": {
                          "id": 837,
                          "nodeType": "Block",
                          "src": "13931:89:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 829,
                                  "name": "smallestElderAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 805,
                                  "src": "13949:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 830,
                                      "name": "_roundElderSpawns",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82,
                                      "src": "13971:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 832,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 831,
                                      "name": "currentRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86,
                                      "src": "13989:12:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13971:31:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 834,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 833,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "14003:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13971:34:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13949:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 836,
                              "nodeType": "ExpressionStatement",
                              "src": "13949:56:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 816,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "13831:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 817,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "13836:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13831:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 840,
                  "initializationExpression": {
                    "assignments": [
                      813
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 840,
                        "src": "13816:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13816:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 815,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13828:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13816:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "13850:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "13852:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 821,
                    "nodeType": "ExpressionStatement",
                    "src": "13850:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "13811:219:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 841,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "14047:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 843,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 842,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "14065:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14047:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 845,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "14079:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14047:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14115:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 846,
                          "name": "smallestElderAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "14091:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2675,
                        "src": "14091:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14091:26:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14047:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 792,
                  "id": 851,
                  "nodeType": "Return",
                  "src": "14040:77:12"
                }
              ]
            },
            "documentation": {
              "id": 786,
              "nodeType": "StructuredDocumentation",
              "src": "13098:355:12",
              "text": "@notice Checks to see if a hero can be minted for a given elder\n @dev (n < 4) || (n <= 2 * m)\n     n is number of champions already minted for elder\n     m is number of champions already minted for elder with least amount of champions\n @param elderId The elder id\n @return True if hero can be minted, false otherwise"
            },
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMintHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 853,
                  "src": "13480:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13480:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13479:17:12"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 853,
                  "src": "13520:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13520:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13519:6:12"
            },
            "scope": 2064,
            "src": "13458:666:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4258
            ],
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "14278:2778:12",
              "statements": [
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "heroRequestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "14288:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 863,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14288:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 868,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 865,
                      "name": "_heroRandomRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "14312:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 867,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 866,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "14331:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14312:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14288:50:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 870,
                          "name": "heroRequestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "14356:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14373:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14356:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14348:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14348:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "14348:27:12"
                },
                {
                  "assignments": [
                    876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 876,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "14443:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14443:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 880,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "_randomResultsVRF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "14466:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 879,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 878,
                      "name": "heroRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "14484:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14466:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14443:55:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 882,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "14516:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14532:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14516:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14508:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14508:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "14508:26:12"
                },
                {
                  "assignments": [
                    888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 888,
                      "mutability": "mutable",
                      "name": "newRandomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "14588:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 887,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14588:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 889,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14588:23:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 890,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "14622:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 892,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 891,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "14630:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14622:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4195,
                      "src": "14622:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14646:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14622:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "14622:25:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 897,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "14674:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 899,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 898,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "14682:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14674:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "appearance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4177,
                          "src": "14674:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 901,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14702:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 902,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14673:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14731:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "14734:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 903,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "14721:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14721:26:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14673:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "14673:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "14773:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 911,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 910,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "14781:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14773:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4179,
                          "src": "14773:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 913,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14797:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 914,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14772:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14826:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 917,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14829:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 915,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "14816:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14816:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14772:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "14772:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 921,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "14870:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 923,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 922,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "14878:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14870:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "trait2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4181,
                          "src": "14870:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 925,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14894:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 926,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14869:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14923:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 929,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14926:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 927,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "14913:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14913:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14869:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "14869:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "14967:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 935,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 934,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "14975:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14967:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4183,
                          "src": "14967:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 937,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "14991:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 938,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14966:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15020:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 941,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15023:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 939,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15010:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15010:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14966:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "14966:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 945,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15064:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 947,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 946,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15072:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15064:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "skill2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4185,
                          "src": "15064:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 949,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15088:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 950,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15063:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15117:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        {
                          "argumentTypes": null,
                          "id": 953,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15120:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 951,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15107:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15107:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15063:73:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "15063:73:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 957,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15162:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 959,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 958,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15170:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15162:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "alignment",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4187,
                          "src": "15162:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 961,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15189:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 962,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15161:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15218:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        {
                          "argumentTypes": null,
                          "id": 965,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15221:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 963,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15208:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15208:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15161:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 968,
                  "nodeType": "ExpressionStatement",
                  "src": "15161:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 969,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15262:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 971,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 970,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15270:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15262:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "background",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4189,
                          "src": "15262:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 973,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15290:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 974,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15261:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15319:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        {
                          "argumentTypes": null,
                          "id": 977,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15323:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 975,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15309:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15309:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15261:78:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "15261:78:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 981,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15365:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 983,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 982,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15373:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15365:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hometown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4191,
                          "src": "15365:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 985,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15391:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 986,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15364:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3234",
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15420:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        {
                          "argumentTypes": null,
                          "id": 989,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15424:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 987,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15410:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15410:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15364:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "15364:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 993,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15466:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 995,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 994,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15474:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15466:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "weather",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4193,
                          "src": "15466:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 997,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15491:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 998,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15465:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15520:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1001,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15523:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 999,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15510:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15510:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15465:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "15465:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1005,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15565:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1007,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1006,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15573:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15565:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4197,
                          "src": "15565:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1009,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15585:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1010,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15564:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15614:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1013,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15618:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1011,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15604:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15604:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15564:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "15564:70:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1017,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "15658:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1019,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1018,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "15666:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15658:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4197,
                      "src": "15658:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15702:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1021,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15679:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1023,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1022,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15687:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15679:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4197,
                          "src": "15679:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "15679:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15679:25:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15658:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "15658:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1030,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15715:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1032,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1031,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15723:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15715:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "mana",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4199,
                          "src": "15715:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1034,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15737:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1035,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15714:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3231",
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15766:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          "value": "21"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1038,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15770:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_21_by_1",
                            "typeString": "int_const 21"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1036,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15756:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15756:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15714:72:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1041,
                  "nodeType": "ExpressionStatement",
                  "src": "15714:72:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1042,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "15810:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1044,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1043,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "15818:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15810:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mana",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4199,
                      "src": "15810:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15858:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1046,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15833:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1048,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1047,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15841:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15833:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mana",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4199,
                          "src": "15833:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "15833:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15833:27:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15810:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "15810:50:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1055,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15871:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1057,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1056,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "15879:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15871:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4201,
                          "src": "15871:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1059,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15896:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1060,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15870:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3331",
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15925:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1063,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "15929:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1061,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "15915:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15915:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15870:75:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "15870:75:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1067,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "15969:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1069,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1068,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "15977:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15969:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stamina",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4201,
                      "src": "15969:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16023:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1071,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "15995:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1073,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1072,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16003:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15995:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4201,
                          "src": "15995:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "15995:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15995:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15969:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "15969:56:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1080,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16037:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1082,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16045:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16037:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "strength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4203,
                          "src": "16037:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1084,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16063:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1085,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16036:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16092:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1088,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16096:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1086,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16082:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16082:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16036:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "16036:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1092,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16135:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1094,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1093,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16143:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16135:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "strength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4203,
                      "src": "16135:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16191:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1096,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16162:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1098,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1097,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16170:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16162:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "strength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4203,
                          "src": "16162:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "16162:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16162:31:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16135:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "16135:58:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1105,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16204:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1107,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1106,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16212:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16204:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "dexterity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4205,
                          "src": "16204:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1109,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16231:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1110,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16203:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16260:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1113,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16264:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1111,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16250:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16250:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16203:77:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "16203:77:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1117,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16303:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1119,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1118,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16311:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16303:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dexterity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4205,
                      "src": "16303:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16361:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1121,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16331:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1123,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1122,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16339:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16331:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dexterity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4205,
                          "src": "16331:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "16331:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16331:32:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16303:60:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "16303:60:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1130,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16374:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1132,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1131,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16382:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16374:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "constitution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4207,
                          "src": "16374:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1134,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16404:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1135,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16373:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16433:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1138,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16437:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1136,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16423:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16423:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16373:80:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "16373:80:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1142,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16476:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1144,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1143,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16484:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16476:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constitution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4207,
                      "src": "16476:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16540:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1146,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16507:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1148,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1147,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16515:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16507:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "constitution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4207,
                          "src": "16507:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "16507:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16507:35:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16476:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "16476:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1155,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16553:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1157,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1156,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16561:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16553:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "intelligence",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4209,
                          "src": "16553:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1159,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16583:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1160,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16552:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16612:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1163,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16616:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1161,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16602:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16602:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16552:80:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "16552:80:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1167,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16655:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1169,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16663:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16655:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "intelligence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4209,
                      "src": "16655:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16719:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1171,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16686:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1173,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1172,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16694:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16686:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "intelligence",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4209,
                          "src": "16686:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "16686:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16686:35:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16655:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "16655:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1180,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16732:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1182,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1181,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16740:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16732:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "wisdom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4211,
                          "src": "16732:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1184,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16756:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1185,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16731:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16785:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1188,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16789:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1186,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16775:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16775:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16731:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "16731:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16828:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1194,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1193,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16836:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16828:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wisdom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4211,
                      "src": "16828:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16880:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1196,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16853:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1198,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1197,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16861:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16853:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wisdom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4211,
                          "src": "16853:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "16853:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16853:29:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16828:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "16828:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1205,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "16893:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1207,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1206,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "16901:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16893:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "charisma",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4213,
                          "src": "16893:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1209,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16919:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1210,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16892:43:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3136",
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16948:2:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1213,
                          "name": "newRandomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "16952:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1211,
                        "name": "_rollDice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "16938:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16938:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16892:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1216,
                  "nodeType": "ExpressionStatement",
                  "src": "16892:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1217,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "16991:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1219,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1218,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "16999:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16991:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "charisma",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4213,
                      "src": "16991:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17047:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1221,
                              "name": "_heroes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "17018:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                                "typeString": "mapping(uint256 => struct Hero storage ref)"
                              }
                            },
                            "id": 1223,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "heroId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "17026:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17018:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Hero_$4214_storage",
                              "typeString": "struct Hero storage ref"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "charisma",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4213,
                          "src": "17018:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "17018:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17018:31:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16991:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "16991:58:12"
                }
              ]
            },
            "documentation": {
              "id": 854,
              "nodeType": "StructuredDocumentation",
              "src": "14130:70:12",
              "text": "@notice Sets the hero attributes\n @param heroId The hero id"
            },
            "functionSelector": "ad313c24",
            "id": 1231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 860,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 856,
                    "src": "14270:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 861,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 859,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "14258:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14258:19:12"
              }
            ],
            "name": "trainHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 858,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14249:8:12"
            },
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1231,
                  "src": "14224:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14224:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14223:16:12"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14278:0:12"
            },
            "scope": 2064,
            "src": "14205:2851:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1255,
              "nodeType": "Block",
              "src": "17421:79:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1245,
                              "name": "maxNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "17456:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1243,
                              "name": "randomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1236,
                              "src": "17439:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2719,
                            "src": "17439:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17439:27:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17469:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17439:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17489:2:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1249,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1236,
                            "src": "17472:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2697,
                          "src": "17472:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17472:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1253,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17438:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1242,
                  "id": 1254,
                  "nodeType": "Return",
                  "src": "17431:62:12"
                }
              ]
            },
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "17062:253:12",
              "text": "@notice Simulates rolling dice\n @param maxNumber The max number of the dice (e.g. regular die is 6)\n @param randomNumber The random number\n @return The result of the dice roll and a new random number to use for another dice roll"
            },
            "id": 1256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rollDice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "maxNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1256,
                  "src": "17339:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17339:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1256,
                  "src": "17358:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17358:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17338:41:12"
            },
            "returnParameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1256,
                  "src": "17403:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17403:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1256,
                  "src": "17412:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17412:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17402:18:12"
            },
            "scope": 2064,
            "src": "17320:180:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4265
            ],
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "17728:139:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "17746:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1271,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1270,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1259,
                            "src": "17758:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17746:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17777:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17769:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17769:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17769:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "17746:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17738:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17738:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "ExpressionStatement",
                  "src": "17738:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1279,
                      "name": "_heroOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "17841:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1281,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1280,
                      "name": "heroId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "17853:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17841:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1267,
                  "id": 1282,
                  "nodeType": "Return",
                  "src": "17834:26:12"
                }
              ]
            },
            "documentation": {
              "id": 1257,
              "nodeType": "StructuredDocumentation",
              "src": "17506:120:12",
              "text": "@notice Get the hero owner for the given hero id\n @param heroId The hero id\n @return The owner address"
            },
            "functionSelector": "56b4d760",
            "id": 1284,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1263,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1259,
                    "src": "17702:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1264,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1262,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "17690:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17690:19:12"
              }
            ],
            "name": "getHeroOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1261,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17681:8:12"
            },
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1284,
                  "src": "17653:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17653:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17652:16:12"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1284,
                  "src": "17719:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17719:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17718:9:12"
            },
            "scope": 2064,
            "src": "17631:236:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4270
            ],
            "body": {
              "id": 1293,
              "nodeType": "Block",
              "src": "18170:2:12",
              "statements": []
            },
            "documentation": {
              "id": 1285,
              "nodeType": "StructuredDocumentation",
              "src": "17873:206:12",
              "text": "@notice Disburses the rewards evenly among the heroes of the winning affinity\n @dev This will be called from a priviledged address\n @param winningAffinity The winning affinity token ticker"
            },
            "functionSelector": "2efb8874",
            "id": 1294,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1291,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1290,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "18160:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18160:9:12"
              }
            ],
            "name": "disburseRewards",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1289,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18151:8:12"
            },
            "parameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1294,
                  "src": "18109:31:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18109:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18108:33:12"
            },
            "returnParameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18170:0:12"
            },
            "scope": 2064,
            "src": "18084:88:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4273
            ],
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "18280:349:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1302,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "18298:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18313:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18298:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18290:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18290:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "18290:25:12"
                },
                {
                  "body": {
                    "id": 1327,
                    "nodeType": "Block",
                    "src": "18413:98:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1317,
                              "name": "_elderSpirits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "18431:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                                "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                              }
                            },
                            "id": 1319,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1318,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "18445:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18431:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                              "typeString": "struct ElderSpirit storage ref"
                            }
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "valid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4150,
                          "src": "18431:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1326,
                        "nodeType": "IfStatement",
                        "src": "18427:74:12",
                        "trueBody": {
                          "id": 1325,
                          "nodeType": "Block",
                          "src": "18455:46:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1322,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1308,
                                    "src": "18484:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1321,
                                  "name": "_burnElder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "18473:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18473:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1324,
                              "nodeType": "ExpressionStatement",
                              "src": "18473:13:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1311,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "18381:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1312,
                      "name": "MAX_NUMBER_OF_ELDERS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "18386:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18381:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1328,
                  "initializationExpression": {
                    "assignments": [
                      1308
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1328,
                        "src": "18366:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18366:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1310,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18378:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18366:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "18408:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1314,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "18410:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ExpressionStatement",
                    "src": "18408:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "18361:150:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1329,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "18552:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18584:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1330,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "18567:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "18567:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18567:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18552:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "18552:34:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1336,
                      "name": "ElderSpiritsBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "18602:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18602:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "EmitStatement",
                  "src": "18597:25:12"
                }
              ]
            },
            "documentation": {
              "id": 1295,
              "nodeType": "StructuredDocumentation",
              "src": "18178:47:12",
              "text": "@notice Burns all the elder spirits in game"
            },
            "functionSelector": "a4aeec53",
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1299,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1298,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "18270:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18270:9:12"
              }
            ],
            "name": "burnElders",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18261:8:12"
            },
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18249:2:12"
            },
            "returnParameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18280:0:12"
            },
            "scope": 2064,
            "src": "18230:399:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1387,
              "nodeType": "Block",
              "src": "18851:504:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "_elderSpirits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "18869:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                              "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                            }
                          },
                          "id": 1352,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1351,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "18883:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18869:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                            "typeString": "struct ElderSpirit storage ref"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4150,
                        "src": "18869:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18861:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18861:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "18861:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1357,
                          "name": "_elderOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "19136:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1359,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "19149:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19136:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1360,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "19159:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19168:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1356,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "19130:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19130:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "19130:40:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1364,
                      "name": "eldersInGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "19224:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19256:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1365,
                          "name": "eldersInGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "19239:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2641,
                        "src": "19239:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19239:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19224:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1370,
                  "nodeType": "ExpressionStatement",
                  "src": "19224:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "_elderOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "19268:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1373,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1372,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "19281:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19268:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19300:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19292:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19292:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19292:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "19268:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "19268:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1380,
                          "name": "_elderSpirits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "19312:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                            "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                          }
                        },
                        "id": 1382,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1381,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "19326:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19312:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                          "typeString": "struct ElderSpirit storage ref"
                        }
                      },
                      "id": 1383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4150,
                      "src": "19312:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19343:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "19312:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1386,
                  "nodeType": "ExpressionStatement",
                  "src": "19312:36:12"
                }
              ]
            },
            "documentation": {
              "id": 1341,
              "nodeType": "StructuredDocumentation",
              "src": "18635:135:12",
              "text": "@notice Burns the elder spirit\n @dev This will only be able to be called by the contract\n @param elderId The elder id"
            },
            "id": 1388,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1346,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1343,
                    "src": "18842:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1347,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1345,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "18821:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18821:29:12"
              }
            ],
            "name": "_burnElder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1388,
                  "src": "18795:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18795:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18794:17:12"
            },
            "returnParameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18851:0:12"
            },
            "scope": 2064,
            "src": "18775:580:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4278
            ],
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "19595:662:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1399,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "19613:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1401,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1400,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "19621:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19613:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4161,
                        "src": "19613:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19605:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19605:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "19605:30:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1406,
                            "name": "_heroOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "19699:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1408,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1407,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "19711:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19699:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1409,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4740,
                            "src": "19722:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19722:12:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "19699:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19691:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19691:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "19691:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1415,
                          "name": "_heroOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "19796:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 1417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1416,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1391,
                          "src": "19808:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19796:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1418,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "19817:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19825:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1414,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "19790:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19790:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "19790:37:12"
                },
                {
                  "assignments": [
                    1423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1423,
                      "mutability": "mutable",
                      "name": "elderId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1471,
                      "src": "19901:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19901:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1428,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1424,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "19919:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1426,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1425,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "19927:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19919:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4214_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "elderId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4171,
                    "src": "19919:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19901:41:12"
                },
                {
                  "assignments": [
                    1430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "heroRound",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1471,
                      "src": "19952:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19952:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1435,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1431,
                        "name": "_heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "19972:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                          "typeString": "mapping(uint256 => struct Hero storage ref)"
                        }
                      },
                      "id": 1433,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "19980:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19972:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Hero_$4214_storage",
                        "typeString": "struct Hero storage ref"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "roundMinted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4169,
                    "src": "19972:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19952:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1436,
                          "name": "_roundElderSpawns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "20009:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1439,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1437,
                          "name": "heroRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "20027:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20009:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1440,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1438,
                        "name": "elderId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "20038:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20009:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20091:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1441,
                              "name": "_roundElderSpawns",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "20049:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1443,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1442,
                              "name": "heroRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1430,
                              "src": "20067:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20049:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1445,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1444,
                            "name": "elderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "20078:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20049:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2641,
                        "src": "20049:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20049:44:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20009:84:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "20009:84:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1451,
                        "name": "_heroOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "20145:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1453,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1452,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "20157:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20145:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20175:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20167:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20167:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20167:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "20145:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "20145:32:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1460,
                          "name": "_heroes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "20187:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                            "typeString": "mapping(uint256 => struct Hero storage ref)"
                          }
                        },
                        "id": 1462,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1461,
                          "name": "heroId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1391,
                          "src": "20195:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20187:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Hero_$4214_storage",
                          "typeString": "struct Hero storage ref"
                        }
                      },
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4161,
                      "src": "20187:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20211:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "20187:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1466,
                  "nodeType": "ExpressionStatement",
                  "src": "20187:29:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1468,
                        "name": "heroId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "20243:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1467,
                      "name": "HeroBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "20232:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20232:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "EmitStatement",
                  "src": "20227:23:12"
                }
              ]
            },
            "documentation": {
              "id": 1389,
              "nodeType": "StructuredDocumentation",
              "src": "19361:157:12",
              "text": "@notice Burns the hero for a refund\n @dev This will only be able to be called from the owner of the hero\n @param heroId The hero id to burn"
            },
            "functionSelector": "27e50b18",
            "id": 1472,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1395,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1391,
                    "src": "19587:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1394,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "19575:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19575:19:12"
              }
            ],
            "name": "burnHero",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1393,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19566:8:12"
            },
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1472,
                  "src": "19541:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19541:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19540:16:12"
            },
            "returnParameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19595:0:12"
            },
            "scope": 2064,
            "src": "19523:734:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4386
            ],
            "body": {
              "id": 1507,
              "nodeType": "Block",
              "src": "20679:209:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "20697:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1488,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "20706:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20697:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20689:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20689:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "20689:30:12"
                },
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "heroAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1507,
                      "src": "20777:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20777:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20836:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1494,
                            "name": "_roundElderSpawns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "20798:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 1496,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1495,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "20816:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20798:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1498,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1497,
                          "name": "elderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "20823:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20798:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2619,
                      "src": "20798:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20798:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20777:61:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1504,
                        "name": "heroAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "20870:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1503,
                      "name": "_priceFormula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "20856:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20856:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1485,
                  "id": 1506,
                  "nodeType": "Return",
                  "src": "20849:32:12"
                }
              ]
            },
            "documentation": {
              "id": 1473,
              "nodeType": "StructuredDocumentation",
              "src": "20263:240:12",
              "text": "@notice Gets the minting price of a hero based on specified elder spirit\n @param round The round of the hero to be minted\n @param elderId The elder id for which the hero will be based on\n @return The hero mint price"
            },
            "functionSelector": "f32c4974",
            "id": 1508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1481,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1477,
                    "src": "20640:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1480,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "20619:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20619:29:12"
              }
            ],
            "name": "getHeroMintPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20602:8:12"
            },
            "parameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1508,
                  "src": "20534:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20534:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1508,
                  "src": "20549:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20549:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20533:32:12"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1508,
                  "src": "20666:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20666:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20665:9:12"
            },
            "scope": 2064,
            "src": "20508:380:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1555,
              "nodeType": "Block",
              "src": "21199:187:12",
              "statements": [
                {
                  "assignments": [
                    1517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1517,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1555,
                      "src": "21209:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1516,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21209:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1518,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21209:13:12"
                },
                {
                  "assignments": [
                    1520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1520,
                      "mutability": "mutable",
                      "name": "base",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1555,
                      "src": "21232:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21232:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1522,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21247:1:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21232:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1523,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "21258:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21299:3:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21292:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21280:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21284:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21280:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1524,
                                  "name": "newSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1511,
                                  "src": "21266:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2675,
                                "src": "21266:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21266:21:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2675,
                            "src": "21266:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21266:28:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2697,
                        "src": "21266:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21266:37:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21258:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "21258:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1538,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "21313:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21352:2:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 1545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21340:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3138",
                                    "id": 1544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21344:2:12",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "21340:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1541,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1520,
                                  "src": "21331:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2675,
                                "src": "21331:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21331:16:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2697,
                            "src": "21331:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21331:24:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1539,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1517,
                          "src": "21321:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2619,
                        "src": "21321:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21321:35:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21313:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "21313:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1553,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1517,
                    "src": "21374:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1515,
                  "id": 1554,
                  "nodeType": "Return",
                  "src": "21367:12:12"
                }
              ]
            },
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "20894:226:12",
              "text": "@notice The bounding curve function that calculates price for the new supply\n @dev price = 0.02*(heroes minted) + 0.1\n @param newSupply The new supply after a burn or mint\n @return The calculated price"
            },
            "id": 1556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_priceFormula",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1556,
                  "src": "21148:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21148:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21147:19:12"
            },
            "returnParameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1514,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1556,
                  "src": "21190:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21190:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21189:9:12"
            },
            "scope": 2064,
            "src": "21125:261:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3639
            ],
            "body": {
              "id": 1638,
              "nodeType": "Block",
              "src": "21675:483:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1559,
                        "src": "21712:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1561,
                        "src": "21722:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1580,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "21728:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1581,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "21732:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1582,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "21737:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1583,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "21746:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1575,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "21685:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CryptoChampions_$2064",
                          "typeString": "contract super CryptoChampions"
                        }
                      },
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3639,
                      "src": "21685:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21685:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "21685:66:12"
                },
                {
                  "body": {
                    "id": 1636,
                    "nodeType": "Block",
                    "src": "21803:349:12",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1597,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1566,
                                "src": "21906:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1599,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1598,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1587,
                                "src": "21910:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21906:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1600,
                              "name": "IN_GAME_CURRENCY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "21915:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21906:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1602,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1566,
                                "src": "21938:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1604,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1603,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1587,
                                "src": "21942:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21938:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1605,
                              "name": "MAX_NUMBER_OF_ELDERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "21948:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21938:30:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21906:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1620,
                        "nodeType": "IfStatement",
                        "src": "21902:135:12",
                        "trueBody": {
                          "id": 1619,
                          "nodeType": "Block",
                          "src": "21970:67:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1608,
                                    "name": "_elderOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61,
                                    "src": "21988:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1612,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1609,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1566,
                                      "src": "22001:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1611,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1610,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1587,
                                      "src": "22005:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22001:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21988:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1615,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1563,
                                      "src": "22019:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22011:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 1613,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22011:8:12",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22011:11:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "21988:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1618,
                              "nodeType": "ExpressionStatement",
                              "src": "21988:34:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1621,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "22054:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1623,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1622,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "22058:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22054:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1624,
                            "name": "MAX_NUMBER_OF_ELDERS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "22063:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22054:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1635,
                        "nodeType": "IfStatement",
                        "src": "22050:92:12",
                        "trueBody": {
                          "id": 1634,
                          "nodeType": "Block",
                          "src": "22085:57:12",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1626,
                                    "name": "_heroOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "22103:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 1630,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1627,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1566,
                                      "src": "22115:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1629,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1628,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1587,
                                      "src": "22119:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22115:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22103:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1631,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1563,
                                  "src": "22125:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22103:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1633,
                              "nodeType": "ExpressionStatement",
                              "src": "22103:24:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "21782:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "21786:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21786:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21782:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1637,
                  "initializationExpression": {
                    "assignments": [
                      1587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1587,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1637,
                        "src": "21767:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21767:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1589,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21779:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21767:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "21798:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "21798:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1596,
                    "nodeType": "ExpressionStatement",
                    "src": "21798:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "21762:390:12"
                }
              ]
            },
            "documentation": {
              "id": 1557,
              "nodeType": "StructuredDocumentation",
              "src": "21392:57:12",
              "text": "@dev Hook function called before every token transfer"
            },
            "id": 1639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1573,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21666:8:12"
            },
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21493:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21493:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21519:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21519:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21541:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21541:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "ids",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21561:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1564,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21561:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1565,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21561:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21591:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1567,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21591:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1568,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21591:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1639,
                  "src": "21625:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21625:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21483:165:12"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21675:0:12"
            },
            "scope": 2064,
            "src": "21454:704:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4395
            ],
            "body": {
              "id": 1665,
              "nodeType": "Block",
              "src": "22600:120:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1654,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1642,
                          "src": "22618:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1655,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "22627:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22618:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22610:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22610:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1658,
                  "nodeType": "ExpressionStatement",
                  "src": "22610:30:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1659,
                        "name": "_roundElderSpawns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "22680:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 1661,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1660,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1642,
                        "src": "22698:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "22680:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1663,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1662,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "22705:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22680:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1652,
                  "id": 1664,
                  "nodeType": "Return",
                  "src": "22673:40:12"
                }
              ]
            },
            "documentation": {
              "id": 1640,
              "nodeType": "StructuredDocumentation",
              "src": "22164:256:12",
              "text": "@notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n @param round The round the elder was created\n @param elderId The elder id\n @return The amount of heroes spawned from the elder"
            },
            "functionSelector": "59ca19d3",
            "id": 1666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1648,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1644,
                    "src": "22561:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1647,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "22540:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22540:29:12"
              }
            ],
            "name": "getElderSpawnsAmount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22523:8:12"
            },
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "round",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1666,
                  "src": "22455:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22455:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1666,
                  "src": "22470:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22470:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22454:32:12"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1666,
                  "src": "22587:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22587:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22586:9:12"
            },
            "scope": 2064,
            "src": "22425:295:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1699,
              "nodeType": "Block",
              "src": "22858:191:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1675,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1669,
                          "src": "22886:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1672,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22872:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "22872:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2641,
                        "src": "22872:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22872:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22894:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22872:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1698,
                  "nodeType": "IfStatement",
                  "src": "22868:175:12",
                  "trueBody": {
                    "id": 1697,
                    "nodeType": "Block",
                    "src": "22897:146:12",
                    "statements": [
                      {
                        "assignments": [
                          1680,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1680,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1697,
                            "src": "22912:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1679,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "22912:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1692,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 1690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22976:2:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1681,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "22930:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "22930:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22930:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1687,
                                    "name": "cost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1669,
                                    "src": "22968:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1684,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "22954:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "22954:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2641,
                                  "src": "22954:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22954:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "22930:45:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22930:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22911:68:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1694,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "23001:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1693,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22993:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22993:16:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1696,
                        "nodeType": "ExpressionStatement",
                        "src": "22993:16:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "22726:81:12",
              "text": "@notice Refunds the sender if they sent too much\n @param cost The cost"
            },
            "id": 1700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1700,
                  "src": "22835:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22835:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22834:14:12"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22858:0:12"
            },
            "scope": 2064,
            "src": "22812:237:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4293
            ],
            "body": {
              "id": 1738,
              "nodeType": "Block",
              "src": "23536:268:12",
              "statements": [
                {
                  "assignments": [
                    1721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1721,
                      "mutability": "mutable",
                      "name": "elderSpirit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1738,
                      "src": "23546:30:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                        "typeString": "struct ElderSpirit"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1720,
                        "name": "ElderSpirit",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4159,
                        "src": "23546:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage_ptr",
                          "typeString": "struct ElderSpirit"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1725,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "_elderSpirits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "23579:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElderSpirit_$4159_storage_$",
                        "typeString": "mapping(uint256 => struct ElderSpirit storage ref)"
                      }
                    },
                    "id": 1724,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1723,
                      "name": "elderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "23593:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23579:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElderSpirit_$4159_storage",
                      "typeString": "struct ElderSpirit storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23546:55:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1726,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "23632:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4150,
                        "src": "23632:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1728,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "23663:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4152,
                        "src": "23663:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1730,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "23695:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4154,
                        "src": "23695:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1732,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "23728:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1733,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4156,
                        "src": "23728:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1734,
                          "name": "elderSpirit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "23762:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElderSpirit_$4159_memory_ptr",
                            "typeString": "struct ElderSpirit memory"
                          }
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4158,
                        "src": "23762:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 1736,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "23618:179:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_int256_$",
                      "typeString": "tuple(bool,uint256,uint256,string memory,int256)"
                    }
                  },
                  "functionReturnParameters": 1719,
                  "id": 1737,
                  "nodeType": "Return",
                  "src": "23611:186:12"
                }
              ]
            },
            "documentation": {
              "id": 1701,
              "nodeType": "StructuredDocumentation",
              "src": "23055:212:12",
              "text": "@notice Fetches the data of a single elder spirit\n @param elderId The id of the elder being searched for\n @return The elder's attributes in the following order (valid, raceId, classId, affinity)"
            },
            "functionSelector": "21c2f72a",
            "id": 1739,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1707,
                    "name": "elderId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1703,
                    "src": "23389:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1708,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1706,
                  "name": "isValidElderSpiritId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 225,
                  "src": "23368:20:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "23368:29:12"
              }
            ],
            "name": "getElderSpirit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1705,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23351:8:12"
            },
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "elderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23296:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23296:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23295:17:12"
            },
            "returnParameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23428:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23428:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23446:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23446:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23467:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23467:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23488:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1715,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23488:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1739,
                  "src": "23515:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23515:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23414:117:12"
            },
            "scope": 2064,
            "src": "23272:532:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4308
            ],
            "body": {
              "id": 1781,
              "nodeType": "Block",
              "src": "24274:228:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1759,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24305:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1761,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1760,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "24313:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24305:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4161,
                        "src": "24305:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1763,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24340:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1765,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1764,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "24348:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24340:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1766,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4165,
                        "src": "24340:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1767,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24378:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1769,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1768,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "24386:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24378:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1770,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "affinityPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4167,
                        "src": "24378:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1771,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24421:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1773,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1772,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "24429:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24421:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "roundMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4169,
                        "src": "24421:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1775,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24462:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1777,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1776,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "24470:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24462:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1778,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "elderId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4171,
                        "src": "24462:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1779,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24291:204:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_storage_$_t_int256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,string storage ref,int256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1758,
                  "id": 1780,
                  "nodeType": "Return",
                  "src": "24284:211:12"
                }
              ]
            },
            "documentation": {
              "id": 1740,
              "nodeType": "StructuredDocumentation",
              "src": "23810:138:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return valid, affinity, affinity price, round minted, elder id"
            },
            "functionSelector": "2ee1f0a0",
            "id": 1782,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1746,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1742,
                    "src": "24061:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1745,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "24049:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24049:19:12"
              }
            ],
            "name": "getHeroGameData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1744,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24032:8:12"
            },
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "23978:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23978:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23977:16:12"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "24099:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24099:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "24126:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24126:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "24165:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24165:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "24203:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24203:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1782,
                  "src": "24240:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24240:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24085:184:12"
            },
            "scope": 2064,
            "src": "23953:549:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4321
            ],
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "24912:123:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1800,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24930:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1802,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1801,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "24938:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24930:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4163,
                        "src": "24930:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1804,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24952:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1806,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1805,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "24960:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24952:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "raceId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4173,
                        "src": "24952:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1808,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "24976:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1810,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1809,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "24984:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24976:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1811,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "classId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4175,
                        "src": "24976:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1812,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "25001:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1814,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1813,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "25009:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25001:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "appearance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4177,
                        "src": "25001:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1816,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24929:99:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1799,
                  "id": 1817,
                  "nodeType": "Return",
                  "src": "24922:106:12"
                }
              ]
            },
            "documentation": {
              "id": 1783,
              "nodeType": "StructuredDocumentation",
              "src": "24508:118:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return name, race id, class id, appearance"
            },
            "functionSelector": "46e6f13d",
            "id": 1819,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1789,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1785,
                    "src": "24738:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1790,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1788,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "24726:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24726:19:12"
              }
            ],
            "name": "getHeroVisuals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1787,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24709:8:12"
            },
            "parameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1785,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1819,
                  "src": "24655:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24655:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24654:16:12"
            },
            "returnParameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1792,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1819,
                  "src": "24776:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1791,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24776:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1819,
                  "src": "24811:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24811:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1796,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1819,
                  "src": "24843:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24843:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1819,
                  "src": "24876:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24876:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24762:145:12"
            },
            "scope": 2064,
            "src": "24631:404:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4334
            ],
            "body": {
              "id": 1855,
              "nodeType": "Block",
              "src": "25442:120:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1837,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "25460:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1839,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1838,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "25468:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25460:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4179,
                        "src": "25460:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1841,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "25484:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1843,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1842,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "25492:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25484:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "trait2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4181,
                        "src": "25484:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1845,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "25508:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1847,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1846,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "25516:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25508:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4183,
                        "src": "25508:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1849,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "25532:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1851,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1850,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "25540:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25532:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skill2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4185,
                        "src": "25532:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1853,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25459:96:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1836,
                  "id": 1854,
                  "nodeType": "Return",
                  "src": "25452:103:12"
                }
              ]
            },
            "documentation": {
              "id": 1820,
              "nodeType": "StructuredDocumentation",
              "src": "25041:117:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return trait 1, trait 2, skill 1, skill 2"
            },
            "functionSelector": "8423b077",
            "id": 1856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1826,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1822,
                    "src": "25275:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1827,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1825,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "25263:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25263:19:12"
              }
            ],
            "name": "getHeroTraitsSkills",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25246:8:12"
            },
            "parameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1856,
                  "src": "25192:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25192:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25191:16:12"
            },
            "returnParameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1856,
                  "src": "25313:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25313:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1856,
                  "src": "25345:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25345:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1856,
                  "src": "25377:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25377:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1856,
                  "src": "25409:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25409:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25299:138:12"
            },
            "scope": 2064,
            "src": "25163:399:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4347
            ],
            "body": {
              "id": 1892,
              "nodeType": "Block",
              "src": "25973:188:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1874,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26004:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1876,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1875,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "26012:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26004:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alignment",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4187,
                        "src": "26004:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1878,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26043:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1880,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1879,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "26051:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26043:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "background",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4189,
                        "src": "26043:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1882,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26083:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1884,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1883,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "26091:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26083:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1885,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hometown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4191,
                        "src": "26083:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1886,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26121:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1888,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1887,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "26129:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26121:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weather",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4193,
                        "src": "26121:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1890,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25990:164:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1873,
                  "id": 1891,
                  "nodeType": "Return",
                  "src": "25983:171:12"
                }
              ]
            },
            "documentation": {
              "id": 1857,
              "nodeType": "StructuredDocumentation",
              "src": "25568:123:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return alignment, background, hometown, weather"
            },
            "functionSelector": "4c2ed018",
            "id": 1893,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1863,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1859,
                    "src": "25800:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1864,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1862,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "25788:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25788:19:12"
              }
            ],
            "name": "getHeroLore",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25771:8:12"
            },
            "parameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "25717:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25717:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25716:16:12"
            },
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1866,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "25838:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25838:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "25872:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25872:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "25907:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25907:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1893,
                  "src": "25940:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25940:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25824:144:12"
            },
            "scope": 2064,
            "src": "25696:465:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4360
            ],
            "body": {
              "id": 1929,
              "nodeType": "Block",
              "src": "26533:114:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1911,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26551:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1913,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1912,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "26559:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26551:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "level",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4195,
                        "src": "26551:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1915,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26574:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1917,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1916,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "26582:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26574:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4197,
                        "src": "26574:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1919,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26594:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1921,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1920,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "26602:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26594:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mana",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4199,
                        "src": "26594:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1923,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "26616:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1925,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1924,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "26624:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26616:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stamina",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4201,
                        "src": "26616:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1927,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26550:90:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1910,
                  "id": 1928,
                  "nodeType": "Return",
                  "src": "26543:97:12"
                }
              ]
            },
            "documentation": {
              "id": 1894,
              "nodeType": "StructuredDocumentation",
              "src": "26167:98:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return level, hp, mana"
            },
            "functionSelector": "48772d79",
            "id": 1930,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1900,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1896,
                    "src": "26376:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1901,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1899,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "26364:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26364:19:12"
              }
            ],
            "name": "getHeroVitals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1898,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26347:8:12"
            },
            "parameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1930,
                  "src": "26293:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26293:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26292:16:12"
            },
            "returnParameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1930,
                  "src": "26414:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26414:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1930,
                  "src": "26444:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26444:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1930,
                  "src": "26471:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26471:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1909,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1930,
                  "src": "26500:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26500:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26400:128:12"
            },
            "scope": 2064,
            "src": "26270:377:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4377
            ],
            "body": {
              "id": 1978,
              "nodeType": "Block",
              "src": "27164:269:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1952,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27195:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1954,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1953,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27203:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27195:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4203,
                        "src": "27195:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1956,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27233:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1958,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1957,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27241:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27233:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dexterity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4205,
                        "src": "27233:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1960,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27272:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1962,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1961,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27280:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27272:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "constitution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4207,
                        "src": "27272:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1964,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27314:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1966,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1965,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27322:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27314:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "intelligence",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4209,
                        "src": "27314:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1968,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27356:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1970,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1969,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27364:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27356:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wisdom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4211,
                        "src": "27356:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1972,
                            "name": "_heroes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "27392:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Hero_$4214_storage_$",
                              "typeString": "mapping(uint256 => struct Hero storage ref)"
                            }
                          },
                          "id": 1974,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1973,
                            "name": "heroId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "27400:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27392:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Hero_$4214_storage",
                            "typeString": "struct Hero storage ref"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "charisma",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4213,
                        "src": "27392:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1976,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "27181:245:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1951,
                  "id": 1977,
                  "nodeType": "Return",
                  "src": "27174:252:12"
                }
              ]
            },
            "documentation": {
              "id": 1931,
              "nodeType": "StructuredDocumentation",
              "src": "26653:157:12",
              "text": "@notice Hero getter function\n @param heroId The hero id\n @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
            },
            "functionSelector": "835a4398",
            "id": 1979,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1937,
                    "name": "heroId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1933,
                    "src": "26920:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1938,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1936,
                  "name": "isValidHero",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 244,
                  "src": "26908:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26908:19:12"
              }
            ],
            "name": "getHeroStats",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1935,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26891:8:12"
            },
            "parameters": {
              "id": 1934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "mutability": "mutable",
                  "name": "heroId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "26837:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26837:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26836:16:12"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1940,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "26958:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26958:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "26991:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26991:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "27025:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27025:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "27062:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27062:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "27099:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27099:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1979,
                  "src": "27130:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27130:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26944:215:12"
            },
            "scope": 2064,
            "src": "26815:618:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4402
            ],
            "body": {
              "id": 1992,
              "nodeType": "Block",
              "src": "27715:45:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1988,
                      "name": "_affinities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "27732:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 1990,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1989,
                      "name": "affinity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "27744:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27732:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1987,
                  "id": 1991,
                  "nodeType": "Return",
                  "src": "27725:28:12"
                }
              ]
            },
            "documentation": {
              "id": 1980,
              "nodeType": "StructuredDocumentation",
              "src": "27439:172:12",
              "text": "@notice Fetches the feed address for a given affinity\n @param affinity The affinity being searched for\n @return The address of the affinity's feed address"
            },
            "functionSelector": "26d4d15a",
            "id": 1993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAffinityFeedAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1984,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27688:8:12"
            },
            "parameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "affinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1993,
                  "src": "27648:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27648:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27647:26:12"
            },
            "returnParameters": {
              "id": 1987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1993,
                  "src": "27706:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27706:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27705:9:12"
            },
            "scope": 2064,
            "src": "27616:144:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4412
            ],
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "27961:36:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2000,
                    "name": "eldersInGame",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57,
                    "src": "27978:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1999,
                  "id": 2001,
                  "nodeType": "Return",
                  "src": "27971:19:12"
                }
              ]
            },
            "documentation": {
              "id": 1994,
              "nodeType": "StructuredDocumentation",
              "src": "27766:119:12",
              "text": "@notice Fetches the number of elders currently in the game\n @return The current number of elders in the game"
            },
            "functionSelector": "4c52b2a9",
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumEldersInGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1996,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27934:8:12"
            },
            "parameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27917:2:12"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2003,
                  "src": "27952:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27952:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27951:9:12"
            },
            "scope": 2064,
            "src": "27890:107:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4407
            ],
            "body": {
              "id": 2018,
              "nodeType": "Block",
              "src": "28276:63:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2015,
                        "name": "winningAffinity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "28316:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2012,
                        "name": "winningAffinitiesByRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "28286:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "28286:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28286:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2017,
                  "nodeType": "ExpressionStatement",
                  "src": "28286:46:12"
                }
              ]
            },
            "documentation": {
              "id": 2004,
              "nodeType": "StructuredDocumentation",
              "src": "28003:175:12",
              "text": "@notice Declares a winning affinity for a round\n @dev This can only be called by a game admin contract\n @param winningAffinity The affinity that won the game"
            },
            "functionSelector": "9e315008",
            "id": 2019,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2009,
                  "name": "onlyGameAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 252,
                  "src": "28262:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28262:13:12"
              }
            ],
            "name": "declareRoundWinner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28253:8:12"
            },
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "winningAffinity",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2019,
                  "src": "28211:31:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "28211:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28210:33:12"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28276:0:12"
            },
            "scope": 2064,
            "src": "28183:156:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4415
            ],
            "body": {
              "id": 2062,
              "nodeType": "Block",
              "src": "28508:350:12",
              "statements": [
                {
                  "assignments": [
                    2027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2027,
                      "mutability": "mutable",
                      "name": "priceWarsFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2062,
                      "src": "28518:31:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28518:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2032,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2030,
                        "name": "PRICE_WARS_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "28588:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2028,
                        "name": "_minigameFactoryRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "28552:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinigameFactoryRegistry_$4433",
                          "typeString": "contract IMinigameFactoryRegistry"
                        }
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4432,
                      "src": "28552:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) external returns (address)"
                      }
                    },
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28552:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28518:84:12"
                },
                {
                  "assignments": [
                    2034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2034,
                      "mutability": "mutable",
                      "name": "priceWarsFactory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2062,
                      "src": "28612:33:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWarsFactory_$4146",
                        "typeString": "contract PriceWarsFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2033,
                        "name": "PriceWarsFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4146,
                        "src": "28612:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$4146",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2038,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2036,
                        "name": "priceWarsFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "28665:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2035,
                      "name": "PriceWarsFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4146,
                      "src": "28648:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PriceWarsFactory_$4146_$",
                        "typeString": "type(contract PriceWarsFactory)"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28648:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWarsFactory_$4146",
                      "typeString": "contract PriceWarsFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28612:77:12"
                },
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "priceWar",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2062,
                      "src": "28699:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceWars_$4108",
                        "typeString": "contract PriceWars"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2039,
                        "name": "PriceWars",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4108,
                        "src": "28699:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$4108",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2048,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2045,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "28760:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2064",
                              "typeString": "contract CryptoChampions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CryptoChampions_$2064",
                              "typeString": "contract CryptoChampions"
                            }
                          ],
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28752:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28752:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28752:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2041,
                        "name": "priceWarsFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "28720:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWarsFactory_$4146",
                          "typeString": "contract PriceWarsFactory"
                        }
                      },
                      "id": 2042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPriceWar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "28720:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_contract$_PriceWars_$4108_$",
                        "typeString": "function (address) external returns (contract PriceWars)"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28720:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceWars_$4108",
                      "typeString": "contract PriceWars"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28699:67:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2050,
                        "name": "ROLE_GAME_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "28786:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2053,
                            "name": "priceWar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2040,
                            "src": "28811:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceWars_$4108",
                              "typeString": "contract PriceWars"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceWars_$4108",
                              "typeString": "contract PriceWars"
                            }
                          ],
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28803:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2051,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28803:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28803:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2049,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "28776:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28776:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2056,
                  "nodeType": "ExpressionStatement",
                  "src": "28776:45:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "priceWar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2040,
                        "src": "28831:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceWars_$4108",
                          "typeString": "contract PriceWars"
                        }
                      },
                      "id": 2059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startGame",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5937,
                      "src": "28831:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28831:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2061,
                  "nodeType": "ExpressionStatement",
                  "src": "28831:20:12"
                }
              ]
            },
            "documentation": {
              "id": 2020,
              "nodeType": "StructuredDocumentation",
              "src": "28345:101:12",
              "text": "@notice Starts a new price game\n @dev This can only be called by the admin of the contract"
            },
            "functionSelector": "fbc120f9",
            "id": 2063,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2024,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2023,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "28498:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28498:9:12"
              }
            ],
            "name": "startNewPriceGame",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28489:8:12"
            },
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28477:2:12"
            },
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28508:0:12"
            },
            "scope": 2064,
            "src": "28451:407:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2065,
        "src": "743:28117:12"
      }
    ],
    "src": "39:28822:12"
  },
  "bytecode": "60c060405260006007556000600a553480156200001b57600080fd5b506040516200534338038062005343833981810160405260808110156200004157600080fd5b5080516020808301516040808501516060909501518151808301909252600382526275726960e81b9382019390935292939092909190839083906200008d6301ffc9a760e01b620001e0565b620000988162000268565b620000aa636cdb3d1360e11b620001e0565b620000bc6303a24d0760e21b620001e0565b506001600160601b0319606092831b811660a052911b16608052620000f1600080516020620053238339815191528062000281565b6200011b600080516020620053038339815191526000805160206200532383398151915262000281565b620001567fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db36000805160206200532383398151915262000281565b620001716000805160206200532383398151915233620002d3565b6200018c6000805160206200530383398151915233620002df565b6703c2c9106e218000600e556000600f556006805460ff19169055601293909355505067016345785d8a0000601355601780546001600160a01b0319166001600160a01b039092169190911790556200051e565b6001600160e01b0319808216141562000240576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b80516200027d90600490602084019062000482565b5050565b600082815260208190526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526020829052604090912060020155565b6200027d828262000343565b600082815260208190526040902060020154620003069062000300620003bc565b620003c0565b620002d35760405162461bcd60e51b815260040180806020018281038252602f815260200180620052d4602f913960400191505060405180910390fd5b600082815260208181526040909120620003689183906200359c620003ed821b17901c565b156200027d5762000378620003bc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b6000828152602081815260408220620003e4918490620035b162000404821b17901c565b90505b92915050565b6000620003e4836001600160a01b0384166200041b565b6000620003e4836001600160a01b0384166200046a565b60006200042983836200046a565b6200046157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003e7565b506000620003e7565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004c557805160ff1916838001178555620004f5565b82800160010185558215620004f5579182015b82811115620004f5578251825591602001919060010190620004d8565b506200050392915062000507565b5090565b5b8082111562000503576000815560010162000508565b60805160601c60a05160601c614d8262000552600039806129665280614420525080613f0d52806143f15250614d826000f3fe6080604052600436106102ad5760003560e01c806379935fe011610175578063a4aeec53116100dc578063d547741f11610095578063e985e9c51161006f578063e985e9c514611160578063f242432a1461119b578063f32c497414611271578063fbc120f9146112a1576102ad565b8063d547741f146110d3578063e3e983821461110c578063e5b0a99314611136576102ad565b8063a4aeec5314611013578063ad313c2414611028578063bf61211f14611052578063c03afb5914611067578063ca15c87314611094578063caab7ef8146110be576102ad565b806391d148541161012e57806391d1485414610e5b57806394985ddd14610e945780639d5b82c014610ec45780639e31500814610f48578063a217fddf14610fc3578063a22cb46514610fd8576102ad565b806379935fe014610d65578063835a439814610d7a5780638423b07714610dd75780638a19c8bc14610e015780639010d07c14610e1657806390ded47e14610e46576102ad565b80632f2ff15d116102195780634c52b2a9116101d25780634c52b2a914610b225780634e1273f414610b3757806356b4d76014610cb757806359ca19d314610ce15780636de5135314610d1157806372eda5bb14610d3b576102ad565b80632f2ff15d1461090a57806336568abe1461094357806346e6f13d1461097c57806348772d7914610a33578063498e821914610a835780634c2ed01814610af8576102ad565b8063248a9ca31161026b578063248a9ca31461055457806326d4d15a1461057e57806327e50b18146106155780632eb2c2d6146106415780632ee1f0a01461080f5780632efb88741461088f576102ad565b8062fdd58e146102b257806301ffc9a7146102fd578063055ad42e146103455780630e89341c1461037b5780630fbea8411461041a57806321c2f72a14610494575b600080fd5b3480156102be57600080fd5b506102eb600480360360408110156102d557600080fd5b506001600160a01b0381351690602001356112b6565b60408051918252519081900360200190f35b34801561030957600080fd5b506103316004803603602081101561032057600080fd5b50356001600160e01b031916611328565b604080519115158252519081900360200190f35b34801561035157600080fd5b5061035a61134b565b6040518082600181111561036a57fe5b815260200191505060405180910390f35b34801561038757600080fd5b506103a56004803603602081101561039e57600080fd5b5035611354565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103df5781810151838201526020016103c7565b50505050905090810190601f16801561040c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102eb6004803603606081101561043057600080fd5b813591602081013591810190606081016040820135600160201b81111561045657600080fd5b82018360208201111561046857600080fd5b803590602001918460018302840111600160201b8311171561048957600080fd5b5090925090506113ec565b3480156104a057600080fd5b506104be600480360360208110156104b757600080fd5b50356116cb565b60405180861515815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156105155781810151838201526020016104fd565b50505050905090810190601f1680156105425780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561056057600080fd5b506102eb6004803603602081101561057757600080fd5b50356117f9565b34801561058a57600080fd5b506105f9600480360360208110156105a157600080fd5b810190602081018135600160201b8111156105bb57600080fd5b8201836020820111156105cd57600080fd5b803590602001918460018302840111600160201b831117156105ee57600080fd5b50909250905061180e565b604080516001600160a01b039092168252519081900360200190f35b34801561062157600080fd5b5061063f6004803603602081101561063857600080fd5b5035611848565b005b34801561064d57600080fd5b5061063f600480360360a081101561066457600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561069757600080fd5b8201836020820111156106a957600080fd5b803590602001918460208302840111600160201b831117156106ca57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561071957600080fd5b82018360208201111561072b57600080fd5b803590602001918460208302840111600160201b8311171561074c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561079b57600080fd5b8201836020820111156107ad57600080fd5b803590602001918460018302840111600160201b831117156107ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611994945050505050565b34801561081b57600080fd5b506108396004803603602081101561083257600080fd5b5035611c97565b6040518086151581526020018060200185815260200184815260200183815260200182810382528681815181526020019150805190602001908083836000838110156105155781810151838201526020016104fd565b34801561089b57600080fd5b5061063f600480360360208110156108b257600080fd5b810190602081018135600160201b8111156108cc57600080fd5b8201836020820111156108de57600080fd5b803590602001918460018302840111600160201b831117156108ff57600080fd5b509092509050611d99565b34801561091657600080fd5b5061063f6004803603604081101561092d57600080fd5b50803590602001356001600160a01b0316611db4565b34801561094f57600080fd5b5061063f6004803603604081101561096657600080fd5b50803590602001356001600160a01b0316611e1c565b34801561098857600080fd5b506109a66004803603602081101561099f57600080fd5b5035611e7d565b6040518080602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156109f55781810151838201526020016109dd565b50505050905090810190601f168015610a225780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610a3f57600080fd5b50610a5d60048036036020811015610a5657600080fd5b5035611f73565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6102eb60048036036040811015610a9957600080fd5b81359190810190604081016020820135600160201b811115610aba57600080fd5b820183602082011115610acc57600080fd5b803590602001918460018302840111600160201b83111715610aed57600080fd5b509092509050611fd2565b348015610b0457600080fd5b50610a5d60048036036020811015610b1b57600080fd5b503561253f565b348015610b2e57600080fd5b506102eb61259e565b348015610b4357600080fd5b50610c6760048036036040811015610b5a57600080fd5b810190602081018135600160201b811115610b7457600080fd5b820183602082011115610b8657600080fd5b803590602001918460208302840111600160201b83111715610ba757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bf657600080fd5b820183602082011115610c0857600080fd5b803590602001918460208302840111600160201b83111715610c2957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506125a5945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610ca3578181015183820152602001610c8b565b505050509050019250505060405180910390f35b348015610cc357600080fd5b506105f960048036036020811015610cda57600080fd5b5035612691565b348015610ced57600080fd5b506102eb60048036036040811015610d0457600080fd5b50803590602001356126fa565b348015610d1d57600080fd5b506103a560048036036020811015610d3457600080fd5b5035612745565b348015610d4757600080fd5b506105f960048036036020811015610d5e57600080fd5b50356127eb565b348015610d7157600080fd5b506102eb612846565b348015610d8657600080fd5b50610da460048036036020811015610d9d57600080fd5b503561284c565b604080519687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b348015610de357600080fd5b50610a5d60048036036020811015610dfa57600080fd5b50356128bc565b348015610e0d57600080fd5b506102eb612919565b348015610e2257600080fd5b506105f960048036036040811015610e3957600080fd5b508035906020013561291f565b348015610e5257600080fd5b506102eb61293e565b348015610e6757600080fd5b5061033160048036036040811015610e7e57600080fd5b50803590602001356001600160a01b0316612943565b348015610ea057600080fd5b5061063f60048036036040811015610eb757600080fd5b508035906020013561295b565b348015610ed057600080fd5b5061063f60048036036040811015610ee757600080fd5b810190602081018135600160201b811115610f0157600080fd5b820183602082011115610f1357600080fd5b803590602001918460018302840111600160201b83111715610f3457600080fd5b9193509150356001600160a01b03166129e2565b348015610f5457600080fd5b5061063f60048036036020811015610f6b57600080fd5b810190602081018135600160201b811115610f8557600080fd5b820183602082011115610f9757600080fd5b803590602001918460018302840111600160201b83111715610fb857600080fd5b509092509050612a84565b348015610fcf57600080fd5b506102eb612aef565b348015610fe457600080fd5b5061063f60048036036040811015610ffb57600080fd5b506001600160a01b0381351690602001351515612af4565b34801561101f57600080fd5b5061063f612be3565b34801561103457600080fd5b5061063f6004803603602081101561104b57600080fd5b5035612c79565b34801561105e57600080fd5b506102eb613055565b34801561107357600080fd5b5061063f6004803603602081101561108a57600080fd5b503560ff1661305b565b3480156110a057600080fd5b506102eb600480360360208110156110b757600080fd5b5035613092565b3480156110ca57600080fd5b506102eb6130a9565b3480156110df57600080fd5b5061063f600480360360408110156110f657600080fd5b50803590602001356001600160a01b03166130af565b34801561111857600080fd5b5061063f6004803603602081101561112f57600080fd5b5035613108565b34801561114257600080fd5b506103a56004803603602081101561115957600080fd5b5035613124565b34801561116c57600080fd5b506103316004803603604081101561118357600080fd5b506001600160a01b0381358116916020013516613131565b3480156111a757600080fd5b5061063f600480360360a08110156111be57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b8111156111fd57600080fd5b82018360208201111561120f57600080fd5b803590602001918460018302840111600160201b8311171561123057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061315f945050505050565b34801561127d57600080fd5b506102eb6004803603604081101561129457600080fd5b508035906020013561332a565b3480156112ad57600080fd5b5061063f61338f565b60006001600160a01b0383166112fd5760405162461bcd60e51b815260040180806020018281038252602b815260200180614af6602b913960400191505060405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60065460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156113e05780601f106113b5576101008083540402835291602001916113e0565b820191906000526020600020905b8154815290600101906020018083116113c357829003601f168201915b50505050509050919050565b60008060065460ff16600181111561140057fe5b1461140a57600080fd5b600780541061141857600080fd5b600e5434101561142757600080fd5b60006001600160a01b0316601084846040518083838082843791909101948552505060405192839003602001909220546001600160a01b031692909214159150611472905057600080fd5b6007546000906114839060016135c6565b6000818152600860205260409020549091506001600160a01b0316156114a557fe5b60008181526009602052604090205460ff16156114be57fe5b600060108585604051808383808284379190910194855250506040805193849003602001842054633fabe5a360e21b855290516001600160a01b039091169363feaf968c93506004808201935060a09291829003018186803b15801561152357600080fd5b505afa158015611537573d6000803e3d6000fd5b505050506040513d60a081101561154d57600080fd5b5060200151905061155c61479f565b60018152602080820189905260408083018990528051601f88018390048302810183019091528681529087908790819084018382808284376000920191909152505050506060820152608081018290526115cf6115b7613620565b84600160405180602001604052806000815250613624565b6115d7613620565b600084815260086020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935560098152908290208351815460ff19169015151781558382015160018201559183015160028301556060830151805184939261164a9260038501929101906147d0565b50608091909101516004909101556007546116669060016135c6565b600755600e546116759061372c565b7f3560f0337e62819199860ba21b425b8bde9a01fa6e514dd58ab6edf7daf1d1f18361169f613620565b604080519283526001600160a01b0390911660208301528051918290030190a150909695505050505050565b600080600060606000856000811180156116e6575060078111155b6116ef57600080fd5b6116f761479f565b600088815260096020908152604091829020825160a081018452815460ff1615158152600180830154828501526002808401548387015260038401805487516101009482161594909402600019011691909104601f8101869004860283018601909652858252919492936060860193919291908301828280156117bb5780601f10611790576101008083540402835291602001916117bb565b820191906000526020600020905b81548152906001019060200180831161179e57829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929c919b50995091975095509350505050565b60009081526020819052604090206002015490565b6000601083836040518083838082843791909101948552505060405192839003602001909220546001600160a01b03169250505092915050565b806007811161185657600080fd5b6000818152600c602052604090205460ff1661187157600080fd5b6000828152600c602052604090205460ff1661188c57600080fd5b611894613620565b6000838152600b60205260409020546001600160a01b039081169116146118ba57600080fd5b6000828152600b60205260409020546118de906001600160a01b031683600161379d565b6000828152600c602090815260408083206005810154600490910154808552600d84528285208286529093529220546119189060016138d0565b6000828152600d60209081526040808320868452825280832093909355868252600b815282822080546001600160a01b0319169055600c815290829020805460ff19169055815186815291517f76126f33d318abe88f8b82c5136b7e5a52091ab897679a40f612d7590adfc9979281900390910190a150505050565b81518351146119d45760405162461bcd60e51b8152600401808060200182810382526028815260200180614cd56028913960400191505060405180910390fd5b6001600160a01b038416611a195760405162461bcd60e51b8152600401808060200182810382526025815260200180614b9e6025913960400191505060405180910390fd5b611a21613620565b6001600160a01b0316856001600160a01b03161480611a4c5750611a4c85611a47613620565b613131565b611a875760405162461bcd60e51b8152600401808060200182810382526032815260200180614bc36032913960400191505060405180910390fd5b6000611a91613620565b9050611aa181878787878761392d565b60005b8451811015611ba7576000858281518110611abb57fe5b602002602001015190506000858381518110611ad357fe5b60200260200101519050611b40816040518060600160405280602a8152602001614c38602a91396002600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613a3f9092919063ffffffff16565b60008381526002602090815260408083206001600160a01b038e811685529252808320939093558a1681522054611b7790826135c6565b60009283526002602090815260408085206001600160a01b038c1686529091529092209190915550600101611aa4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611c2d578181015183820152602001611c15565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611c6c578181015183820152602001611c54565b5050505090500194505050505060405180910390a4611c8f818787878787613ad6565b505050505050565b6000606060008060008560078111611cae57600080fd5b6000818152600c602052604090205460ff16611cc957600080fd5b6000878152600c602090815260409182902080546003820154600483015460058401546002948501805488516101006001831615026000190190911696909604601f810188900488028701880190985287865260ff909416969395929491939092869190830182828015611d7e5780601f10611d5357610100808354040283529160200191611d7e565b820191906000526020600020905b815481529060010190602001808311611d6157829003601f168201915b50505050509350955095509550955095505091939590929450565b611db0600080516020614bf5833981519152613d4c565b5050565b600082815260208190526040902060020154611dd790611dd2613620565b612943565b611e125760405162461bcd60e51b815260040180806020018281038252602f815260200180614ac7602f913960400191505060405180910390fd5b611db08282613d5f565b611e24613620565b6001600160a01b0316816001600160a01b031614611e735760405162461bcd60e51b815260040180806020018281038252602f815260200180614d1e602f913960400191505060405180910390fd5b611db08282613dc8565b606060008060008460078111611e9257600080fd5b6000818152600c602052604090205460ff16611ead57600080fd5b6000868152600c6020908152604091829020600681015460078201546008830154600193840180548751600296821615610100026000190190911695909504601f8101879004870286018701909752868552959294919390929091869190830182828015611f5c5780601f10611f3157610100808354040283529160200191611f5c565b820191906000526020600020905b815481529060010190602001808311611f3f57829003601f168201915b505050505093509450945094509450509193509193565b6000806000808460078111611f8757600080fd5b6000818152600c602052604090205460ff16611fa257600080fd5b50505060009283525050600c60205260409020601181015460128201546013830154601490930154919390929190565b600083600081118015611fe6575060078111155b611fef57600080fd5b600160065460ff16600181111561200257fe5b1461200c57600080fd5b60008581526009602052604090205460ff1661202757600080fd5b61203085613e31565b61203957600080fd5b6000612047600f548761332a565b90508034101561205657600080fd5b600060076120706001600a546135c690919063ffffffff16565b016000818152600b60205260409020549091506001600160a01b03161561209357fe5b6000818152600c602052604090205460ff16156120ac57fe5b6120b461484e565b60018152604080516020601f8901819004810282018101909252878152908890889081908401838280828437600081840152601f19601f820116905080830192505050505050508160200181905250600f54816080018181525050878160a001818152505060096000898152602001908152602001600020600101548160c001818152505060096000898152602001908152602001600020600201548160e0018181525050600960008981526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122035780601f106121d857610100808354040283529160200191612203565b820191906000526020600020905b8154815290600101906020018083116121e657829003601f168201915b50505050506040828101919091526000838152600c60209081529190208251815460ff191690151517815581830151805184936122479260018501929101906147d0565b50604082015180516122639160028401916020909101906147d0565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e0820151600782015561010082015160088201556101208201516009820155610140820151600a820155610160820151600b820155610180820151600c8201556101a0820151600d8201556101c0820151600e8201556101e0820151600f820155610200820151601082015561022082015160118201556102408201516012820155610260820151601382015561028082015160148201556102a082015160158201556102c082015160168201556102e082015160178201556103008201516018820155610320820151601982015561034090910151601a90910155600061237483613f06565b600084815260146020526040902081905590506123926115b7613620565b61239a613620565b6000848152600b6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055600a546123d49060016135c6565b600a55600f546000908152600d602090815260408083208c84529091529020546123ff9060016135c6565b600f546000908152600d602090815260408083208d8452909152812091909155612435600a61242f876008613fbe565b90614017565b60008b8152600860205260408082205490519293506001600160a01b031691829084908381818185875af1925050503d8060008114612490576040519150601f19603f3d011682016040523d82523d6000602084013e612495565b606091505b50509050806124dc576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b6124e58761372c565b7ff34a510082f5a02e39555458564800fc1fe73bfd8d3aa07cbf063fe662e7657e8661250f613620565b604080519283526001600160a01b0390911660208301528051918290030190a150939a9950505050505050505050565b600080600080846007811161255357600080fd5b6000818152600c602052604090205460ff1661256e57600080fd5b50505060009283525050600c60205260409020600d810154600e820154600f830154601090930154919390929190565b6007545b90565b606081518351146125e75760405162461bcd60e51b8152600401808060200182810382526029815260200180614cac6029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561260157600080fd5b5060405190808252806020026020018201604052801561262b578160200160208202803683370190505b50905060005b84518110156126895761266a85828151811061264957fe5b602002602001015185838151811061265d57fe5b60200260200101516112b6565b82828151811061267657fe5b6020908102919091010152600101612631565b509392505050565b600081600781116126a157600080fd5b6000818152600c602052604090205460ff166126bc57600080fd5b6000838152600b60205260409020546001600160a01b03166126dd57600080fd5b50506000908152600b60205260409020546001600160a01b031690565b60008160008111801561270e575060078111155b61271757600080fd5b600f5484111561272657600080fd5b50506000918252600d6020908152604080842092845291905290205490565b6016818154811061275257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152935090918301828280156127e35780601f106127b8576101008083540402835291602001916127e3565b820191906000526020600020905b8154815290600101906020018083116127c657829003601f168201915b505050505081565b6000816000811180156127ff575060078111155b61280857600080fd5b6000838152600860205260409020546001600160a01b031661282957600080fd5b50506000908152600860205260409020546001600160a01b031690565b600e5481565b600080600080600080866007811161286357600080fd5b6000818152600c602052604090205460ff1661287e57600080fd5b50505060009485525050600c60205250506040902060158101546016820154601783015460188401546019850154601a909501549395929491939092565b60008060008084600781116128d057600080fd5b6000818152600c602052604090205460ff166128eb57600080fd5b50505060009283525050600c602081905260409091206009810154600a820154600b83015492909301549093565b600f5481565b6000828152602081905260408120612937908361407e565b9392505050565b600781565b600082815260208190526040812061293790836135b1565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146129d8576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b611db0828261408a565b6129f9600080516020614bf5833981519152613d4c565b8060108484604051808383808284379190910194855250506040519283900360200190922080546001600160a01b03949094166001600160a01b031990941693909317909255505060118054600181018255600091909152612a7e907f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6801848461491a565b50505050565b612aad7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3613d4c565b60168054600181018255600091909152612aea907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428901838361491a565b505050565b600081565b816001600160a01b0316612b06613620565b6001600160a01b03161415612b4c5760405162461bcd60e51b8152600401808060200182810382526029815260200180614c836029913960400191505060405180910390fd5b8060036000612b59613620565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612b9d613620565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612bfa600080516020614bf5833981519152613d4c565b600060075411612c0957600080fd5b60015b60078111612c3c5760008181526009602052604090205460ff1615612c3457612c348161409c565b600101612c0c565b50600f54612c4b9060016135c6565b600f556040517f0143b2c36fac98f86168603d28d499bde9ce0367d41e111cef9f2ecbc9eeabfc90600090a1565b8060078111612c8757600080fd5b6000818152600c602052604090205460ff16612ca257600080fd5b60008281526014602052604090205480612cbb57600080fd5b60008181526015602052604090205480612cd457600080fd5b6000848152600c602052604081206001601190910155612cf5600283614138565b6000878152600c60205260409020600801919091559050612d17600482614138565b6000878152600c60205260409020600901919091559050612d39600482614138565b6000878152600c60205260409020600a01919091559050612d5b600482614138565b6000878152600c60205260409020600b01919091559050612d7d600482614138565b6000878152600c6020819052604090912001919091559050612da0600982614138565b6000878152600c60205260409020600d01919091559050612dc2601e82614138565b6000878152600c60205260409020600e01919091559050612de4601882614138565b6000878152600c60205260409020600f01919091559050612e06600582614138565b6000878152600c60205260409020601001919091559050612e28601582614138565b6000878152600c602052604090206012018290559150612e499060096135c6565b6000868152600c6020526040902060120155612e66601582614138565b6000878152600c602052604090206013018290559150612e879060096135c6565b6000868152600c6020526040902060130155612ea4601f82614138565b6000878152600c602052604090206014018290559150612ec59060096135c6565b6000868152600c6020526040902060140155612ee2601082614138565b6000878152600c602052604090206015018290559150612f039060026135c6565b6000868152600c6020526040902060150155612f20601082614138565b6000878152600c602052604090206016018290559150612f419060026135c6565b6000868152600c6020526040902060160155612f5e601082614138565b6000878152600c602052604090206017018290559150612f7f9060026135c6565b6000868152600c6020526040902060170155612f9c601082614138565b6000878152600c602052604090206018018290559150612fbd9060026135c6565b6000868152600c6020526040902060180155612fda601082614138565b6000878152600c602052604090206019018290559150612ffb9060026135c6565b6000868152600c6020526040902060190155613018601082614138565b6000878152600c60205260409020601a0182905591506130399060026135c6565b6000958652600c6020526040909520601a019490945550505050565b60075481565b613072600080516020614bf5833981519152613d4c565b6006805482919060ff19166001838181111561308a57fe5b021790555050565b60008181526020819052604081206113229061415e565b600a5481565b6000828152602081905260409020600201546130cd90611dd2613620565b611e735760405162461bcd60e51b8152600401808060200182810382526030815260200180614b6e6030913960400191505060405180910390fd5b61311f600080516020614bf5833981519152613d4c565b600e55565b6011818154811061275257fe5b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166131a45760405162461bcd60e51b8152600401808060200182810382526025815260200180614b9e6025913960400191505060405180910390fd5b6131ac613620565b6001600160a01b0316856001600160a01b031614806131d257506131d285611a47613620565b61320d5760405162461bcd60e51b8152600401808060200182810382526029815260200180614b456029913960400191505060405180910390fd5b6000613217613620565b905061323781878761322888614169565b61323188614169565b8761392d565b61327e836040518060600160405280602a8152602001614c38602a913960008781526002602090815260408083206001600160a01b038d1684529091529020549190613a3f565b60008581526002602090815260408083206001600160a01b038b811685529252808320939093558716815220546132b590846135c6565b60008581526002602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4611c8f8187878787876141ad565b60008160008111801561333e575060078111155b61334757600080fd5b600f5484111561335657600080fd5b6000848152600d6020908152604080832086845290915281205461337b9060016135c6565b90506133868161431e565b95945050505050565b6133a6600080516020614bf5833981519152613d4c565b601754604080518082018252600a81526950524943455f5741525360b01b60208083019182529251636cadcd7960e11b8152600481019384528251602482015282516000956001600160a01b03169463d95b9af2949390928392604490910191908083838b5b8381101561342457818101518382015260200161340c565b50505050905090810190601f1680156134515780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561347057600080fd5b505af1158015613484573d6000803e3d6000fd5b505050506040513d602081101561349a57600080fd5b5051604080516372d7f66560e11b8152306004820152905191925082916000916001600160a01b0384169163e5afecca9160248082019260209290919082900301818787803b1580156134ec57600080fd5b505af1158015613500573d6000803e3d6000fd5b505050506040513d602081101561351657600080fd5b505190506135447fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db382611db4565b806001600160a01b031663d65ab5f26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561357f57600080fd5b505af1158015613593573d6000803e3d6000fd5b50505050505050565b6000612937836001600160a01b038416614370565b6000612937836001600160a01b0384166143ba565b600082820183811015612937576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0384166136695760405162461bcd60e51b8152600401808060200182810382526021815260200180614cfd6021913960400191505060405180910390fd5b6000613673613620565b90506136858160008761322888614169565b60008481526002602090815260408083206001600160a01b03891684529091529020546136b290846135c6565b60008581526002602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4613725816000878787876141ad565b5050505050565b600061373834836138d0565b111561379a5760003361374b34846138d0565b604051600081818185875af1925050503d8060008114613787576040519150601f19603f3d011682016040523d82523d6000602084013e61378c565b606091505b5050905080611db057600080fd5b50565b6001600160a01b0383166137e25760405162461bcd60e51b8152600401808060200182810382526023815260200180614c156023913960400191505060405180910390fd5b60006137ec613620565b905061381c818560006137fe87614169565b61380787614169565b6040518060200160405280600081525061392d565b61386382604051806060016040528060248152602001614b216024913960008681526002602090815260408083206001600160a01b038b1684529091529020549190613a3f565b60008481526002602090815260408083206001600160a01b03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b600082821115613927576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b61393b868686868686611c8f565b60005b835181101561359357600084828151811061395557fe5b602002602001015111801561397e5750600784828151811061397357fe5b602002602001015111155b156139cf57846008600086848151811061399457fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078482815181106139dd57fe5b60200260200101511115613a375784600b60008684815181106139fc57fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60010161393e565b60008184841115613ace5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613a93578181015183820152602001613a7b565b50505050905090810190601f168015613ac05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b613ae8846001600160a01b03166143d2565b15611c8f57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613b76578181015183820152602001613b5e565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613bb5578181015183820152602001613b9d565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015613bf1578181015183820152602001613bd9565b50505050905090810190601f168015613c1e5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015613c4357600080fd5b505af1925050508015613c6857506040513d6020811015613c6357600080fd5b505160015b613cfd57613c746149a3565b80613c7f5750613cc6565b60405162461bcd60e51b8152602060048201818152835160248401528351849391928392604401919085019080838360008315613a93578181015183820152602001613a7b565b60405162461bcd60e51b8152600401808060200182810382526034815260200180614a496034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146135935760405162461bcd60e51b8152600401808060200182810382526028815260200180614a9f6028913960400191505060405180910390fd5b613d568133612943565b61379a57600080fd5b6000828152602081905260409020613d77908261359c565b15611db057613d84613620565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020613de090826143d8565b15611db057613ded613620565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600f546000908152600d6020908152604080832084845290915281205460041115613e5e57506001611346565b600f546000908152600d6020908152604080832085845290915290205460015b6007548111613ed357600f546000908152600d60209081526040808320848452909152902054821115613ecb57600f546000908152600d6020908152604080832084845290915290205491505b600101613e7e565b50613edf816002613fbe565b600f546000908152600d602090815260408083208784529091529020541115915050919050565b60006013547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613f7857600080fd5b505afa158015613f8c573d6000803e3d6000fd5b505050506040513d6020811015613fa257600080fd5b50511015613faf57600080fd5b611322601254601354846143ed565b600082613fcd57506000611322565b82820282848281613fda57fe5b04146129375760405162461bcd60e51b8152600401808060200182810382526021815260200180614c626021913960400191505060405180910390fd5b600080821161406d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161407657fe5b049392505050565b60006129378383614597565b60009182526015602052604090912055565b806000811180156140ae575060078111155b6140b757600080fd5b60008281526009602052604090205460ff166140d257600080fd5b6000828152600860205260409020546140f6906001600160a01b031683600161379d565b6007546141049060016138d0565b60075550600090815260086020908152604080832080546001600160a01b031916905560099091529020805460ff19169055565b60008061414583856145fb565b60010161415384600a614017565b915091509250929050565b600061132282614662565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061419c57fe5b602090810291909101015292915050565b6141bf846001600160a01b03166143d2565b15611c8f57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561424e578181015183820152602001614236565b50505050905090810190601f16801561427b5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561429e57600080fd5b505af19250505080156142c357506040513d60208110156142be57600080fd5b505160015b6142cf57613c746149a3565b6001600160e01b0319811663f23a6e6160e01b146135935760405162461bcd60e51b8152600401808060200182810382526028815260200180614a9f6028913960400191505060405180910390fd5b6000806001614345606461242f600261433f88670de0b6b3a7640000613fbe565b90613fbe565b9150614368614361600a61242f84670de0b6b3a7640000613fbe565b83906135c6565b949350505050565b600061437c83836143ba565b6143b257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611322565b506000611322565b60009081526001919091016020526040902054151590565b3b151590565b6000612937836001600160a01b038416614666565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156144c95781810151838201526020016144b1565b50505050905090810190601f1680156144f65780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561451757600080fd5b505af115801561452b573d6000803e3d6000fd5b505050506040513d602081101561454157600080fd5b50506000848152600560205260408120546145619086908590309061472c565b60008681526005602052604090205490915061457e9060016135c6565b6000868152600560205260409020556133868582614773565b815460009082106145d95760405162461bcd60e51b8152600401808060200182810382526022815260200180614a7d6022913960400191505060405180910390fd5b8260000182815481106145e857fe5b9060005260206000200154905092915050565b6000808211614651576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b81838161465a57fe5b069392505050565b5490565b60008181526001830160205260408120548015614722578354600019808301919081019060009087908390811061469957fe5b90600052602060002001549050808760000184815481106146b657fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806146e657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611322565b6000915050611322565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518060a00160405280600015158152602001600081526020016000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061481157805160ff191683800117855561483e565b8280016001018555821561483e579182015b8281111561483e578251825591602001919060010190614823565b5061484a929150614988565b5090565b60405180610360016040528060001515815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061495b5782800160ff1982351617855561483e565b8280016001018555821561483e579182015b8281111561483e57823582559160200191906001019061496d565b5b8082111561484a5760008155600101614989565b60e01c90565b600060443d10156149b3576125a2565b600481823e6308c379a06149c7825161499d565b146149d1576125a2565b6040513d600319016004823e80513d67ffffffffffffffff8160248401118184111715614a0157505050506125a2565b82840192508251915080821115614a1b57505050506125a2565b503d83016020828401011115614a33575050506125a2565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220be2cd48f27d0b771ecc739de1b1a4b10494d7b7e17c29d0193739b4b328c8e8064736f6c634300060c0033416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e742172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca0250969f4e1c871d5fdd0aee1cd182666698a4492b24c6832aac230d07b11046af5a89",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CryptoChampions",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._grantRole": {
          "253": [
            7098,
            7131,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "254": [
            7289,
            7325,
            false
          ]
        },
        "AccessControl.grantRole": {
          "250": [
            4727,
            4772,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "251": [
            5904,
            5927,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "252": [
            5185,
            5230,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "EnumerableSet._add": {
          "271": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "272": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "273": [
            2449,
            2464,
            false
          ]
        }
      },
      "12": {
        "CryptoChampions._beforeTokenTransfer": {
          "242": [
            21906,
            21934,
            false
          ],
          "243": [
            21938,
            21968,
            false
          ],
          "244": [
            22054,
            22083,
            false
          ]
        },
        "CryptoChampions._burnElder": {
          "248": [
            5617,
            5648,
            true
          ],
          "249": [
            18869,
            18897,
            true
          ]
        },
        "CryptoChampions._canMintHero": {
          "246": [
            13873,
            13929,
            false
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "247": [
            6405,
            6442,
            true
          ]
        },
        "CryptoChampions._hasRole": {
          "245": [
            7215,
            7240,
            true
          ]
        },
        "CryptoChampions._refundSender": {
          "240": [
            22872,
            22895,
            false
          ],
          "241": [
            23001,
            23008,
            true
          ]
        },
        "CryptoChampions.burnElders": {
          "234": [
            18298,
            18314,
            true
          ],
          "235": [
            18431,
            18453,
            false
          ]
        },
        "CryptoChampions.burnHero": {
          "226": [
            19613,
            19634,
            true
          ],
          "227": [
            19699,
            19734,
            true
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "233": [
            22618,
            22639,
            true
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "239": [
            20697,
            20718,
            true
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "222": [
            8647,
            8679,
            true
          ],
          "223": [
            8740,
            8775,
            true
          ],
          "224": [
            8839,
            8866,
            true
          ],
          "225": [
            8915,
            8950,
            true
          ]
        },
        "CryptoChampions.mintHero": {
          "228": [
            10962,
            10993,
            true
          ],
          "229": [
            11050,
            11078,
            true
          ],
          "230": [
            11149,
            11170,
            true
          ],
          "231": [
            11318,
            11340,
            true
          ],
          "232": [
            12863,
            12870,
            true
          ]
        },
        "CryptoChampions.trainHero": {
          "236": [
            5838,
            5859,
            true
          ],
          "237": [
            14356,
            14374,
            true
          ],
          "238": [
            14516,
            14533,
            true
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "281": [
            9592,
            9620,
            true
          ]
        }
      },
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "3": {
        "SafeMath.add": {
          "274": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "279": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mod": {
          "280": [
            4905,
            4910,
            true
          ]
        },
        "SafeMath.mul": {
          "277": [
            3619,
            3625,
            false
          ],
          "278": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "275": [
            3221,
            3227,
            true
          ],
          "276": [
            5545,
            5551,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "ERC1155._burn": {
          "266": [
            9976,
            9997,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "267": [
            13484,
            13499,
            false
          ],
          "268": [
            13647,
            13711,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "269": [
            12712,
            12727,
            false
          ],
          "270": [
            12868,
            12927,
            false
          ]
        },
        "ERC1155._mint": {
          "265": [
            8129,
            8150,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "255": [
            3089,
            3110,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "260": [
            3574,
            3603,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "256": [
            5774,
            5802,
            true
          ],
          "257": [
            5865,
            5881,
            true
          ],
          "258": [
            5954,
            5974,
            true
          ],
          "259": [
            5978,
            6014,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "262": [
            4780,
            4796,
            true
          ],
          "263": [
            4869,
            4889,
            true
          ],
          "264": [
            4893,
            4929,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "261": [
            4061,
            4085,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._grantRole": {
          "173": [
            7147,
            7192
          ]
        },
        "AccessControl._revokeRole": {
          "174": [
            7341,
            7386
          ]
        },
        "AccessControl.getRoleAdmin": {
          "24": [
            4358,
            4387
          ]
        },
        "AccessControl.getRoleMember": {
          "86": [
            4057,
            4094
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "132": [
            3337,
            3373
          ]
        },
        "AccessControl.grantRole": {
          "43": [
            4719,
            4824
          ],
          "44": [
            4835,
            4860
          ]
        },
        "AccessControl.hasRole": {
          "87": [
            3035,
            3080
          ]
        },
        "AccessControl.renounceRole": {
          "45": [
            5896,
            5979
          ],
          "46": [
            5990,
            6016
          ]
        },
        "AccessControl.revokeRole": {
          "133": [
            5177,
            5283
          ]
        }
      },
      "1": {
        "ERC165.supportsInterface": {
          "2": [
            1066,
            1106
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "150": [
            678,
            695
          ]
        }
      },
      "11": {
        "EnumerableSet._add": {
          "199": [
            1761,
            1784
          ],
          "200": [
            1919,
            1959
          ],
          "201": [
            1973,
            1984
          ],
          "202": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "209": [
            4538,
            4611
          ],
          "210": [
            4621,
            4646
          ]
        },
        "EnumerableSet._contains": {
          "203": [
            3894,
            3925
          ]
        },
        "EnumerableSet._length": {
          "213": [
            4088,
            4113
          ]
        },
        "EnumerableSet._remove": {
          "214": [
            3274,
            3312
          ],
          "215": [
            3378,
            3421
          ],
          "216": [
            3527,
            3544
          ],
          "217": [
            3612,
            3638
          ],
          "218": [
            3653,
            3664
          ],
          "219": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "147": [
            6515,
            6572
          ]
        },
        "EnumerableSet.at": {
          "185": [
            7770,
            7826
          ]
        },
        "EnumerableSet.contains": {
          "148": [
            7080,
            7142
          ]
        },
        "EnumerableSet.length": {
          "193": [
            7312,
            7338
          ]
        },
        "EnumerableSet.remove": {
          "205": [
            6836,
            6896
          ]
        }
      },
      "12": {
        "CryptoChampions._beforeTokenTransfer": {
          "163": [
            21685,
            21751
          ],
          "164": [
            21988,
            22022
          ],
          "165": [
            22103,
            22127
          ],
          "166": [
            21798,
            21801
          ]
        },
        "CryptoChampions._burnElder": {
          "187": [
            18861,
            18898
          ],
          "188": [
            19130,
            19170
          ],
          "189": [
            19224,
            19258
          ],
          "190": [
            19268,
            19302
          ],
          "191": [
            19312,
            19348
          ]
        },
        "CryptoChampions._canMintHero": {
          "175": [
            13634,
            13645
          ],
          "176": [
            13949,
            14005
          ],
          "177": [
            13850,
            13853
          ],
          "178": [
            14040,
            14117
          ]
        },
        "CryptoChampions._getRandomNumber": {
          "179": [
            6397,
            6443
          ],
          "180": [
            6505,
            6563
          ]
        },
        "CryptoChampions._hasRole": {
          "172": [
            7207,
            7241
          ]
        },
        "CryptoChampions._priceFormula": {
          "197": [
            21258,
            21303
          ],
          "198": [
            21313,
            21356
          ]
        },
        "CryptoChampions._refundSender": {
          "156": [
            22993,
            23009
          ]
        },
        "CryptoChampions._rollDice": {
          "192": [
            17431,
            17493
          ]
        },
        "CryptoChampions.burnElders": {
          "96": [
            18290,
            18315
          ],
          "97": [
            18473,
            18486
          ],
          "98": [
            18408,
            18411
          ],
          "99": [
            18552,
            18586
          ],
          "100": [
            18597,
            18622
          ]
        },
        "CryptoChampions.burnHero": {
          "26": [
            19605,
            19635
          ],
          "27": [
            19691,
            19735
          ],
          "28": [
            19790,
            19827
          ],
          "29": [
            20009,
            20093
          ],
          "30": [
            20145,
            20177
          ],
          "31": [
            20187,
            20216
          ],
          "32": [
            20227,
            20250
          ]
        },
        "CryptoChampions.createAffinity": {
          "90": [
            7703,
            7741
          ],
          "91": [
            7751,
            7779
          ]
        },
        "CryptoChampions.declareRoundWinner": {
          "92": [
            28286,
            28332
          ]
        },
        "CryptoChampions.fulfillRandomness": {
          "186": [
            6813,
            6854
          ]
        },
        "CryptoChampions.getAffinityFeedAddress": {
          "25": [
            27725,
            27753
          ]
        },
        "CryptoChampions.getElderOwner": {
          "82": [
            10471,
            10515
          ],
          "83": [
            10570,
            10598
          ]
        },
        "CryptoChampions.getElderSpawnsAmount": {
          "80": [
            22610,
            22640
          ],
          "81": [
            22673,
            22713
          ]
        },
        "CryptoChampions.getElderSpirit": {
          "23": [
            23611,
            23797
          ]
        },
        "CryptoChampions.getHeroGameData": {
          "42": [
            24284,
            24495
          ]
        },
        "CryptoChampions.getHeroLore": {
          "72": [
            25983,
            26154
          ]
        },
        "CryptoChampions.getHeroMintPrice": {
          "143": [
            20689,
            20719
          ],
          "144": [
            20849,
            20881
          ]
        },
        "CryptoChampions.getHeroOwner": {
          "78": [
            17738,
            17780
          ],
          "79": [
            17834,
            17860
          ]
        },
        "CryptoChampions.getHeroStats": {
          "84": [
            27174,
            27426
          ]
        },
        "CryptoChampions.getHeroTraitsSkills": {
          "85": [
            25452,
            25555
          ]
        },
        "CryptoChampions.getHeroVisuals": {
          "47": [
            24922,
            25028
          ]
        },
        "CryptoChampions.getHeroVitals": {
          "48": [
            26543,
            26640
          ]
        },
        "CryptoChampions.getNumEldersInGame": {
          "73": [
            27971,
            27990
          ]
        },
        "CryptoChampions.mintElderSpirit": {
          "4": [
            8639,
            8680
          ],
          "5": [
            8732,
            8776
          ],
          "6": [
            8831,
            8867
          ],
          "7": [
            8907,
            8951
          ],
          "8": [
            9114,
            9157
          ],
          "9": [
            9208,
            9253
          ],
          "10": [
            9393,
            9481
          ],
          "11": [
            9561,
            9579
          ],
          "12": [
            9589,
            9610
          ],
          "13": [
            9620,
            9643
          ],
          "14": [
            9653,
            9678
          ],
          "15": [
            9688,
            9723
          ],
          "16": [
            9758,
            9793
          ],
          "17": [
            9887,
            9923
          ],
          "18": [
            9933,
            9963
          ],
          "19": [
            10009,
            10043
          ],
          "20": [
            10094,
            10123
          ],
          "21": [
            10134,
            10179
          ],
          "22": [
            10190,
            10204
          ]
        },
        "CryptoChampions.mintHero": {
          "49": [
            10954,
            10994
          ],
          "50": [
            11042,
            11079
          ],
          "51": [
            11141,
            11171
          ],
          "52": [
            11310,
            11341
          ],
          "53": [
            11483,
            11524
          ],
          "54": [
            11577,
            11615
          ],
          "55": [
            11728,
            11745
          ],
          "56": [
            11755,
            11775
          ],
          "57": [
            11785,
            11816
          ],
          "58": [
            11826,
            11848
          ],
          "59": [
            11858,
            11901
          ],
          "60": [
            11911,
            11956
          ],
          "61": [
            11966,
            12013
          ],
          "62": [
            12023,
            12045
          ],
          "63": [
            12171,
            12209
          ],
          "64": [
            12244,
            12278
          ],
          "65": [
            12374,
            12408
          ],
          "66": [
            12479,
            12513
          ],
          "67": [
            12523,
            12613
          ],
          "68": [
            12855,
            12889
          ],
          "69": [
            12989,
            13013
          ],
          "70": [
            13024,
            13061
          ],
          "71": [
            13072,
            13085
          ]
        },
        "CryptoChampions.setElderMintPrice": {
          "134": [
            8012,
            8034
          ]
        },
        "CryptoChampions.setPhase": {
          "131": [
            7030,
            7050
          ]
        },
        "CryptoChampions.startNewPriceGame": {
          "145": [
            28776,
            28821
          ],
          "146": [
            28831,
            28851
          ]
        },
        "CryptoChampions.trainHero": {
          "101": [
            14348,
            14375
          ],
          "102": [
            14508,
            14534
          ],
          "103": [
            14622,
            14647
          ],
          "104": [
            14673,
            14747
          ],
          "105": [
            14772,
            14845
          ],
          "106": [
            14869,
            14942
          ],
          "107": [
            14966,
            15039
          ],
          "108": [
            15063,
            15136
          ],
          "109": [
            15161,
            15237
          ],
          "110": [
            15261,
            15339
          ],
          "111": [
            15364,
            15440
          ],
          "112": [
            15465,
            15539
          ],
          "113": [
            15564,
            15634
          ],
          "114": [
            15658,
            15704
          ],
          "115": [
            15714,
            15786
          ],
          "116": [
            15810,
            15860
          ],
          "117": [
            15870,
            15945
          ],
          "118": [
            15969,
            16025
          ],
          "119": [
            16036,
            16112
          ],
          "120": [
            16135,
            16193
          ],
          "121": [
            16203,
            16280
          ],
          "122": [
            16303,
            16363
          ],
          "123": [
            16373,
            16453
          ],
          "124": [
            16476,
            16542
          ],
          "125": [
            16552,
            16632
          ],
          "126": [
            16655,
            16721
          ],
          "127": [
            16731,
            16805
          ],
          "128": [
            16828,
            16882
          ],
          "129": [
            16892,
            16968
          ],
          "130": [
            16991,
            17049
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "88": [
            9584,
            9656
          ],
          "89": [
            9666,
            9706
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "206": [
            7678,
            7749
          ],
          "207": [
            8519,
            8561
          ],
          "208": [
            8571,
            8610
          ]
        }
      },
      "16": {
        "VRFRequestIDBase.makeRequestId": {
          "221": [
            1596,
            1655
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "220": [
            1005,
            1083
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "3": {
        "SafeMath.add": {
          "149": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "183": [
            4294,
            4338
          ],
          "184": [
            4348,
            4360
          ]
        },
        "SafeMath.mod": {
          "211": [
            4897,
            4939
          ],
          "212": [
            4949,
            4961
          ]
        },
        "SafeMath.mul": {
          "181": [
            3627,
            3635
          ],
          "182": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "161": [
            3213,
            3262
          ],
          "162": [
            3272,
            3284
          ],
          "167": [
            5537,
            5566
          ],
          "168": [
            5576,
            5588
          ]
        }
      },
      "4": {},
      "5": {
        "ERC1155._asSingletonArray": {
          "194": [
            14169,
            14187
          ],
          "195": [
            14198,
            14210
          ]
        },
        "ERC1155._burn": {
          "157": [
            9968,
            10037
          ],
          "158": [
            10090,
            10195
          ],
          "159": [
            10206,
            10339
          ],
          "160": [
            10350,
            10412
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "169": [
            13871,
            13885
          ],
          "170": [
            13925,
            13987
          ],
          "171": [
            13735,
            13785
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "196": [
            12951,
            13001
          ]
        },
        "ERC1155._mint": {
          "151": [
            8121,
            8188
          ],
          "152": [
            8241,
            8348
          ],
          "153": [
            8359,
            8418
          ],
          "154": [
            8428,
            8490
          ],
          "155": [
            8501,
            8580
          ]
        },
        "ERC1155.balanceOf": {
          "0": [
            3081,
            3158
          ],
          "1": [
            3168,
            3197
          ]
        },
        "ERC1155.balanceOfBatch": {
          "74": [
            3566,
            3649
          ],
          "75": [
            3794,
            3843
          ],
          "76": [
            3775,
            3778
          ],
          "77": [
            3864,
            3884
          ]
        },
        "ERC1155.isApprovedForAll": {
          "135": [
            4447,
            4491
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "33": [
            5766,
            5847
          ],
          "34": [
            5857,
            5923
          ],
          "35": [
            5933,
            6090
          ],
          "36": [
            6143,
            6203
          ],
          "37": [
            6344,
            6489
          ],
          "38": [
            6503,
            6552
          ],
          "39": [
            6250,
            6253
          ],
          "40": [
            6573,
            6625
          ],
          "41": [
            6636,
            6711
          ]
        },
        "ERC1155.safeTransferFrom": {
          "136": [
            4772,
            4838
          ],
          "137": [
            4848,
            4996
          ],
          "138": [
            5049,
            5145
          ],
          "139": [
            5156,
            5255
          ],
          "140": [
            5265,
            5314
          ],
          "141": [
            5325,
            5376
          ],
          "142": [
            5387,
            5455
          ]
        },
        "ERC1155.setApprovalForAll": {
          "93": [
            4053,
            4131
          ],
          "94": [
            4142,
            4195
          ],
          "95": [
            4205,
            4258
          ]
        },
        "ERC1155.uri": {
          "3": [
            2816,
            2827
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Address.isContract": {
          "204": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "ICryptoChampions",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "IMinigameFactoryRegistry",
    "LinkTokenInterface",
    "Minigame",
    "PriceWars",
    "PriceWarsFactory",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SignedSafeMath",
    "VRFConsumerBase",
    "VRFRequestIDBase"
  ],
  "deployedBytecode": "6080604052600436106102ad5760003560e01c806379935fe011610175578063a4aeec53116100dc578063d547741f11610095578063e985e9c51161006f578063e985e9c514611160578063f242432a1461119b578063f32c497414611271578063fbc120f9146112a1576102ad565b8063d547741f146110d3578063e3e983821461110c578063e5b0a99314611136576102ad565b8063a4aeec5314611013578063ad313c2414611028578063bf61211f14611052578063c03afb5914611067578063ca15c87314611094578063caab7ef8146110be576102ad565b806391d148541161012e57806391d1485414610e5b57806394985ddd14610e945780639d5b82c014610ec45780639e31500814610f48578063a217fddf14610fc3578063a22cb46514610fd8576102ad565b806379935fe014610d65578063835a439814610d7a5780638423b07714610dd75780638a19c8bc14610e015780639010d07c14610e1657806390ded47e14610e46576102ad565b80632f2ff15d116102195780634c52b2a9116101d25780634c52b2a914610b225780634e1273f414610b3757806356b4d76014610cb757806359ca19d314610ce15780636de5135314610d1157806372eda5bb14610d3b576102ad565b80632f2ff15d1461090a57806336568abe1461094357806346e6f13d1461097c57806348772d7914610a33578063498e821914610a835780634c2ed01814610af8576102ad565b8063248a9ca31161026b578063248a9ca31461055457806326d4d15a1461057e57806327e50b18146106155780632eb2c2d6146106415780632ee1f0a01461080f5780632efb88741461088f576102ad565b8062fdd58e146102b257806301ffc9a7146102fd578063055ad42e146103455780630e89341c1461037b5780630fbea8411461041a57806321c2f72a14610494575b600080fd5b3480156102be57600080fd5b506102eb600480360360408110156102d557600080fd5b506001600160a01b0381351690602001356112b6565b60408051918252519081900360200190f35b34801561030957600080fd5b506103316004803603602081101561032057600080fd5b50356001600160e01b031916611328565b604080519115158252519081900360200190f35b34801561035157600080fd5b5061035a61134b565b6040518082600181111561036a57fe5b815260200191505060405180910390f35b34801561038757600080fd5b506103a56004803603602081101561039e57600080fd5b5035611354565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103df5781810151838201526020016103c7565b50505050905090810190601f16801561040c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102eb6004803603606081101561043057600080fd5b813591602081013591810190606081016040820135600160201b81111561045657600080fd5b82018360208201111561046857600080fd5b803590602001918460018302840111600160201b8311171561048957600080fd5b5090925090506113ec565b3480156104a057600080fd5b506104be600480360360208110156104b757600080fd5b50356116cb565b60405180861515815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156105155781810151838201526020016104fd565b50505050905090810190601f1680156105425780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561056057600080fd5b506102eb6004803603602081101561057757600080fd5b50356117f9565b34801561058a57600080fd5b506105f9600480360360208110156105a157600080fd5b810190602081018135600160201b8111156105bb57600080fd5b8201836020820111156105cd57600080fd5b803590602001918460018302840111600160201b831117156105ee57600080fd5b50909250905061180e565b604080516001600160a01b039092168252519081900360200190f35b34801561062157600080fd5b5061063f6004803603602081101561063857600080fd5b5035611848565b005b34801561064d57600080fd5b5061063f600480360360a081101561066457600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561069757600080fd5b8201836020820111156106a957600080fd5b803590602001918460208302840111600160201b831117156106ca57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561071957600080fd5b82018360208201111561072b57600080fd5b803590602001918460208302840111600160201b8311171561074c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561079b57600080fd5b8201836020820111156107ad57600080fd5b803590602001918460018302840111600160201b831117156107ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611994945050505050565b34801561081b57600080fd5b506108396004803603602081101561083257600080fd5b5035611c97565b6040518086151581526020018060200185815260200184815260200183815260200182810382528681815181526020019150805190602001908083836000838110156105155781810151838201526020016104fd565b34801561089b57600080fd5b5061063f600480360360208110156108b257600080fd5b810190602081018135600160201b8111156108cc57600080fd5b8201836020820111156108de57600080fd5b803590602001918460018302840111600160201b831117156108ff57600080fd5b509092509050611d99565b34801561091657600080fd5b5061063f6004803603604081101561092d57600080fd5b50803590602001356001600160a01b0316611db4565b34801561094f57600080fd5b5061063f6004803603604081101561096657600080fd5b50803590602001356001600160a01b0316611e1c565b34801561098857600080fd5b506109a66004803603602081101561099f57600080fd5b5035611e7d565b6040518080602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156109f55781810151838201526020016109dd565b50505050905090810190601f168015610a225780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610a3f57600080fd5b50610a5d60048036036020811015610a5657600080fd5b5035611f73565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6102eb60048036036040811015610a9957600080fd5b81359190810190604081016020820135600160201b811115610aba57600080fd5b820183602082011115610acc57600080fd5b803590602001918460018302840111600160201b83111715610aed57600080fd5b509092509050611fd2565b348015610b0457600080fd5b50610a5d60048036036020811015610b1b57600080fd5b503561253f565b348015610b2e57600080fd5b506102eb61259e565b348015610b4357600080fd5b50610c6760048036036040811015610b5a57600080fd5b810190602081018135600160201b811115610b7457600080fd5b820183602082011115610b8657600080fd5b803590602001918460208302840111600160201b83111715610ba757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bf657600080fd5b820183602082011115610c0857600080fd5b803590602001918460208302840111600160201b83111715610c2957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506125a5945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610ca3578181015183820152602001610c8b565b505050509050019250505060405180910390f35b348015610cc357600080fd5b506105f960048036036020811015610cda57600080fd5b5035612691565b348015610ced57600080fd5b506102eb60048036036040811015610d0457600080fd5b50803590602001356126fa565b348015610d1d57600080fd5b506103a560048036036020811015610d3457600080fd5b5035612745565b348015610d4757600080fd5b506105f960048036036020811015610d5e57600080fd5b50356127eb565b348015610d7157600080fd5b506102eb612846565b348015610d8657600080fd5b50610da460048036036020811015610d9d57600080fd5b503561284c565b604080519687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b348015610de357600080fd5b50610a5d60048036036020811015610dfa57600080fd5b50356128bc565b348015610e0d57600080fd5b506102eb612919565b348015610e2257600080fd5b506105f960048036036040811015610e3957600080fd5b508035906020013561291f565b348015610e5257600080fd5b506102eb61293e565b348015610e6757600080fd5b5061033160048036036040811015610e7e57600080fd5b50803590602001356001600160a01b0316612943565b348015610ea057600080fd5b5061063f60048036036040811015610eb757600080fd5b508035906020013561295b565b348015610ed057600080fd5b5061063f60048036036040811015610ee757600080fd5b810190602081018135600160201b811115610f0157600080fd5b820183602082011115610f1357600080fd5b803590602001918460018302840111600160201b83111715610f3457600080fd5b9193509150356001600160a01b03166129e2565b348015610f5457600080fd5b5061063f60048036036020811015610f6b57600080fd5b810190602081018135600160201b811115610f8557600080fd5b820183602082011115610f9757600080fd5b803590602001918460018302840111600160201b83111715610fb857600080fd5b509092509050612a84565b348015610fcf57600080fd5b506102eb612aef565b348015610fe457600080fd5b5061063f60048036036040811015610ffb57600080fd5b506001600160a01b0381351690602001351515612af4565b34801561101f57600080fd5b5061063f612be3565b34801561103457600080fd5b5061063f6004803603602081101561104b57600080fd5b5035612c79565b34801561105e57600080fd5b506102eb613055565b34801561107357600080fd5b5061063f6004803603602081101561108a57600080fd5b503560ff1661305b565b3480156110a057600080fd5b506102eb600480360360208110156110b757600080fd5b5035613092565b3480156110ca57600080fd5b506102eb6130a9565b3480156110df57600080fd5b5061063f600480360360408110156110f657600080fd5b50803590602001356001600160a01b03166130af565b34801561111857600080fd5b5061063f6004803603602081101561112f57600080fd5b5035613108565b34801561114257600080fd5b506103a56004803603602081101561115957600080fd5b5035613124565b34801561116c57600080fd5b506103316004803603604081101561118357600080fd5b506001600160a01b0381358116916020013516613131565b3480156111a757600080fd5b5061063f600480360360a08110156111be57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b8111156111fd57600080fd5b82018360208201111561120f57600080fd5b803590602001918460018302840111600160201b8311171561123057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061315f945050505050565b34801561127d57600080fd5b506102eb6004803603604081101561129457600080fd5b508035906020013561332a565b3480156112ad57600080fd5b5061063f61338f565b60006001600160a01b0383166112fd5760405162461bcd60e51b815260040180806020018281038252602b815260200180614af6602b913960400191505060405180910390fd5b5060008181526002602090815260408083206001600160a01b03861684529091529020545b92915050565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b60065460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156113e05780601f106113b5576101008083540402835291602001916113e0565b820191906000526020600020905b8154815290600101906020018083116113c357829003601f168201915b50505050509050919050565b60008060065460ff16600181111561140057fe5b1461140a57600080fd5b600780541061141857600080fd5b600e5434101561142757600080fd5b60006001600160a01b0316601084846040518083838082843791909101948552505060405192839003602001909220546001600160a01b031692909214159150611472905057600080fd5b6007546000906114839060016135c6565b6000818152600860205260409020549091506001600160a01b0316156114a557fe5b60008181526009602052604090205460ff16156114be57fe5b600060108585604051808383808284379190910194855250506040805193849003602001842054633fabe5a360e21b855290516001600160a01b039091169363feaf968c93506004808201935060a09291829003018186803b15801561152357600080fd5b505afa158015611537573d6000803e3d6000fd5b505050506040513d60a081101561154d57600080fd5b5060200151905061155c61479f565b60018152602080820189905260408083018990528051601f88018390048302810183019091528681529087908790819084018382808284376000920191909152505050506060820152608081018290526115cf6115b7613620565b84600160405180602001604052806000815250613624565b6115d7613620565b600084815260086020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935560098152908290208351815460ff19169015151781558382015160018201559183015160028301556060830151805184939261164a9260038501929101906147d0565b50608091909101516004909101556007546116669060016135c6565b600755600e546116759061372c565b7f3560f0337e62819199860ba21b425b8bde9a01fa6e514dd58ab6edf7daf1d1f18361169f613620565b604080519283526001600160a01b0390911660208301528051918290030190a150909695505050505050565b600080600060606000856000811180156116e6575060078111155b6116ef57600080fd5b6116f761479f565b600088815260096020908152604091829020825160a081018452815460ff1615158152600180830154828501526002808401548387015260038401805487516101009482161594909402600019011691909104601f8101869004860283018601909652858252919492936060860193919291908301828280156117bb5780601f10611790576101008083540402835291602001916117bb565b820191906000526020600020905b81548152906001019060200180831161179e57829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929c919b50995091975095509350505050565b60009081526020819052604090206002015490565b6000601083836040518083838082843791909101948552505060405192839003602001909220546001600160a01b03169250505092915050565b806007811161185657600080fd5b6000818152600c602052604090205460ff1661187157600080fd5b6000828152600c602052604090205460ff1661188c57600080fd5b611894613620565b6000838152600b60205260409020546001600160a01b039081169116146118ba57600080fd5b6000828152600b60205260409020546118de906001600160a01b031683600161379d565b6000828152600c602090815260408083206005810154600490910154808552600d84528285208286529093529220546119189060016138d0565b6000828152600d60209081526040808320868452825280832093909355868252600b815282822080546001600160a01b0319169055600c815290829020805460ff19169055815186815291517f76126f33d318abe88f8b82c5136b7e5a52091ab897679a40f612d7590adfc9979281900390910190a150505050565b81518351146119d45760405162461bcd60e51b8152600401808060200182810382526028815260200180614cd56028913960400191505060405180910390fd5b6001600160a01b038416611a195760405162461bcd60e51b8152600401808060200182810382526025815260200180614b9e6025913960400191505060405180910390fd5b611a21613620565b6001600160a01b0316856001600160a01b03161480611a4c5750611a4c85611a47613620565b613131565b611a875760405162461bcd60e51b8152600401808060200182810382526032815260200180614bc36032913960400191505060405180910390fd5b6000611a91613620565b9050611aa181878787878761392d565b60005b8451811015611ba7576000858281518110611abb57fe5b602002602001015190506000858381518110611ad357fe5b60200260200101519050611b40816040518060600160405280602a8152602001614c38602a91396002600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613a3f9092919063ffffffff16565b60008381526002602090815260408083206001600160a01b038e811685529252808320939093558a1681522054611b7790826135c6565b60009283526002602090815260408085206001600160a01b038c1686529091529092209190915550600101611aa4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611c2d578181015183820152602001611c15565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015611c6c578181015183820152602001611c54565b5050505090500194505050505060405180910390a4611c8f818787878787613ad6565b505050505050565b6000606060008060008560078111611cae57600080fd5b6000818152600c602052604090205460ff16611cc957600080fd5b6000878152600c602090815260409182902080546003820154600483015460058401546002948501805488516101006001831615026000190190911696909604601f810188900488028701880190985287865260ff909416969395929491939092869190830182828015611d7e5780601f10611d5357610100808354040283529160200191611d7e565b820191906000526020600020905b815481529060010190602001808311611d6157829003601f168201915b50505050509350955095509550955095505091939590929450565b611db0600080516020614bf5833981519152613d4c565b5050565b600082815260208190526040902060020154611dd790611dd2613620565b612943565b611e125760405162461bcd60e51b815260040180806020018281038252602f815260200180614ac7602f913960400191505060405180910390fd5b611db08282613d5f565b611e24613620565b6001600160a01b0316816001600160a01b031614611e735760405162461bcd60e51b815260040180806020018281038252602f815260200180614d1e602f913960400191505060405180910390fd5b611db08282613dc8565b606060008060008460078111611e9257600080fd5b6000818152600c602052604090205460ff16611ead57600080fd5b6000868152600c6020908152604091829020600681015460078201546008830154600193840180548751600296821615610100026000190190911695909504601f8101879004870286018701909752868552959294919390929091869190830182828015611f5c5780601f10611f3157610100808354040283529160200191611f5c565b820191906000526020600020905b815481529060010190602001808311611f3f57829003601f168201915b505050505093509450945094509450509193509193565b6000806000808460078111611f8757600080fd5b6000818152600c602052604090205460ff16611fa257600080fd5b50505060009283525050600c60205260409020601181015460128201546013830154601490930154919390929190565b600083600081118015611fe6575060078111155b611fef57600080fd5b600160065460ff16600181111561200257fe5b1461200c57600080fd5b60008581526009602052604090205460ff1661202757600080fd5b61203085613e31565b61203957600080fd5b6000612047600f548761332a565b90508034101561205657600080fd5b600060076120706001600a546135c690919063ffffffff16565b016000818152600b60205260409020549091506001600160a01b03161561209357fe5b6000818152600c602052604090205460ff16156120ac57fe5b6120b461484e565b60018152604080516020601f8901819004810282018101909252878152908890889081908401838280828437600081840152601f19601f820116905080830192505050505050508160200181905250600f54816080018181525050878160a001818152505060096000898152602001908152602001600020600101548160c001818152505060096000898152602001908152602001600020600201548160e0018181525050600960008981526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122035780601f106121d857610100808354040283529160200191612203565b820191906000526020600020905b8154815290600101906020018083116121e657829003601f168201915b50505050506040828101919091526000838152600c60209081529190208251815460ff191690151517815581830151805184936122479260018501929101906147d0565b50604082015180516122639160028401916020909101906147d0565b50606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e0820151600782015561010082015160088201556101208201516009820155610140820151600a820155610160820151600b820155610180820151600c8201556101a0820151600d8201556101c0820151600e8201556101e0820151600f820155610200820151601082015561022082015160118201556102408201516012820155610260820151601382015561028082015160148201556102a082015160158201556102c082015160168201556102e082015160178201556103008201516018820155610320820151601982015561034090910151601a90910155600061237483613f06565b600084815260146020526040902081905590506123926115b7613620565b61239a613620565b6000848152600b6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055600a546123d49060016135c6565b600a55600f546000908152600d602090815260408083208c84529091529020546123ff9060016135c6565b600f546000908152600d602090815260408083208d8452909152812091909155612435600a61242f876008613fbe565b90614017565b60008b8152600860205260408082205490519293506001600160a01b031691829084908381818185875af1925050503d8060008114612490576040519150601f19603f3d011682016040523d82523d6000602084013e612495565b606091505b50509050806124dc576040805162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b6124e58761372c565b7ff34a510082f5a02e39555458564800fc1fe73bfd8d3aa07cbf063fe662e7657e8661250f613620565b604080519283526001600160a01b0390911660208301528051918290030190a150939a9950505050505050505050565b600080600080846007811161255357600080fd5b6000818152600c602052604090205460ff1661256e57600080fd5b50505060009283525050600c60205260409020600d810154600e820154600f830154601090930154919390929190565b6007545b90565b606081518351146125e75760405162461bcd60e51b8152600401808060200182810382526029815260200180614cac6029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561260157600080fd5b5060405190808252806020026020018201604052801561262b578160200160208202803683370190505b50905060005b84518110156126895761266a85828151811061264957fe5b602002602001015185838151811061265d57fe5b60200260200101516112b6565b82828151811061267657fe5b6020908102919091010152600101612631565b509392505050565b600081600781116126a157600080fd5b6000818152600c602052604090205460ff166126bc57600080fd5b6000838152600b60205260409020546001600160a01b03166126dd57600080fd5b50506000908152600b60205260409020546001600160a01b031690565b60008160008111801561270e575060078111155b61271757600080fd5b600f5484111561272657600080fd5b50506000918252600d6020908152604080842092845291905290205490565b6016818154811061275257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152935090918301828280156127e35780601f106127b8576101008083540402835291602001916127e3565b820191906000526020600020905b8154815290600101906020018083116127c657829003601f168201915b505050505081565b6000816000811180156127ff575060078111155b61280857600080fd5b6000838152600860205260409020546001600160a01b031661282957600080fd5b50506000908152600860205260409020546001600160a01b031690565b600e5481565b600080600080600080866007811161286357600080fd5b6000818152600c602052604090205460ff1661287e57600080fd5b50505060009485525050600c60205250506040902060158101546016820154601783015460188401546019850154601a909501549395929491939092565b60008060008084600781116128d057600080fd5b6000818152600c602052604090205460ff166128eb57600080fd5b50505060009283525050600c602081905260409091206009810154600a820154600b83015492909301549093565b600f5481565b6000828152602081905260408120612937908361407e565b9392505050565b600781565b600082815260208190526040812061293790836135b1565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146129d8576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b611db0828261408a565b6129f9600080516020614bf5833981519152613d4c565b8060108484604051808383808284379190910194855250506040519283900360200190922080546001600160a01b03949094166001600160a01b031990941693909317909255505060118054600181018255600091909152612a7e907f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6801848461491a565b50505050565b612aad7fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db3613d4c565b60168054600181018255600091909152612aea907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428901838361491a565b505050565b600081565b816001600160a01b0316612b06613620565b6001600160a01b03161415612b4c5760405162461bcd60e51b8152600401808060200182810382526029815260200180614c836029913960400191505060405180910390fd5b8060036000612b59613620565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612b9d613620565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612bfa600080516020614bf5833981519152613d4c565b600060075411612c0957600080fd5b60015b60078111612c3c5760008181526009602052604090205460ff1615612c3457612c348161409c565b600101612c0c565b50600f54612c4b9060016135c6565b600f556040517f0143b2c36fac98f86168603d28d499bde9ce0367d41e111cef9f2ecbc9eeabfc90600090a1565b8060078111612c8757600080fd5b6000818152600c602052604090205460ff16612ca257600080fd5b60008281526014602052604090205480612cbb57600080fd5b60008181526015602052604090205480612cd457600080fd5b6000848152600c602052604081206001601190910155612cf5600283614138565b6000878152600c60205260409020600801919091559050612d17600482614138565b6000878152600c60205260409020600901919091559050612d39600482614138565b6000878152600c60205260409020600a01919091559050612d5b600482614138565b6000878152600c60205260409020600b01919091559050612d7d600482614138565b6000878152600c6020819052604090912001919091559050612da0600982614138565b6000878152600c60205260409020600d01919091559050612dc2601e82614138565b6000878152600c60205260409020600e01919091559050612de4601882614138565b6000878152600c60205260409020600f01919091559050612e06600582614138565b6000878152600c60205260409020601001919091559050612e28601582614138565b6000878152600c602052604090206012018290559150612e499060096135c6565b6000868152600c6020526040902060120155612e66601582614138565b6000878152600c602052604090206013018290559150612e879060096135c6565b6000868152600c6020526040902060130155612ea4601f82614138565b6000878152600c602052604090206014018290559150612ec59060096135c6565b6000868152600c6020526040902060140155612ee2601082614138565b6000878152600c602052604090206015018290559150612f039060026135c6565b6000868152600c6020526040902060150155612f20601082614138565b6000878152600c602052604090206016018290559150612f419060026135c6565b6000868152600c6020526040902060160155612f5e601082614138565b6000878152600c602052604090206017018290559150612f7f9060026135c6565b6000868152600c6020526040902060170155612f9c601082614138565b6000878152600c602052604090206018018290559150612fbd9060026135c6565b6000868152600c6020526040902060180155612fda601082614138565b6000878152600c602052604090206019018290559150612ffb9060026135c6565b6000868152600c6020526040902060190155613018601082614138565b6000878152600c60205260409020601a0182905591506130399060026135c6565b6000958652600c6020526040909520601a019490945550505050565b60075481565b613072600080516020614bf5833981519152613d4c565b6006805482919060ff19166001838181111561308a57fe5b021790555050565b60008181526020819052604081206113229061415e565b600a5481565b6000828152602081905260409020600201546130cd90611dd2613620565b611e735760405162461bcd60e51b8152600401808060200182810382526030815260200180614b6e6030913960400191505060405180910390fd5b61311f600080516020614bf5833981519152613d4c565b600e55565b6011818154811061275257fe5b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166131a45760405162461bcd60e51b8152600401808060200182810382526025815260200180614b9e6025913960400191505060405180910390fd5b6131ac613620565b6001600160a01b0316856001600160a01b031614806131d257506131d285611a47613620565b61320d5760405162461bcd60e51b8152600401808060200182810382526029815260200180614b456029913960400191505060405180910390fd5b6000613217613620565b905061323781878761322888614169565b61323188614169565b8761392d565b61327e836040518060600160405280602a8152602001614c38602a913960008781526002602090815260408083206001600160a01b038d1684529091529020549190613a3f565b60008581526002602090815260408083206001600160a01b038b811685529252808320939093558716815220546132b590846135c6565b60008581526002602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4611c8f8187878787876141ad565b60008160008111801561333e575060078111155b61334757600080fd5b600f5484111561335657600080fd5b6000848152600d6020908152604080832086845290915281205461337b9060016135c6565b90506133868161431e565b95945050505050565b6133a6600080516020614bf5833981519152613d4c565b601754604080518082018252600a81526950524943455f5741525360b01b60208083019182529251636cadcd7960e11b8152600481019384528251602482015282516000956001600160a01b03169463d95b9af2949390928392604490910191908083838b5b8381101561342457818101518382015260200161340c565b50505050905090810190601f1680156134515780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561347057600080fd5b505af1158015613484573d6000803e3d6000fd5b505050506040513d602081101561349a57600080fd5b5051604080516372d7f66560e11b8152306004820152905191925082916000916001600160a01b0384169163e5afecca9160248082019260209290919082900301818787803b1580156134ec57600080fd5b505af1158015613500573d6000803e3d6000fd5b505050506040513d602081101561351657600080fd5b505190506135447fae0c232b87105e0a8134f8b92146dcd1d99373d32394be9d70f700f90b3a3db382611db4565b806001600160a01b031663d65ab5f26040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561357f57600080fd5b505af1158015613593573d6000803e3d6000fd5b50505050505050565b6000612937836001600160a01b038416614370565b6000612937836001600160a01b0384166143ba565b600082820183811015612937576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0384166136695760405162461bcd60e51b8152600401808060200182810382526021815260200180614cfd6021913960400191505060405180910390fd5b6000613673613620565b90506136858160008761322888614169565b60008481526002602090815260408083206001600160a01b03891684529091529020546136b290846135c6565b60008581526002602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4613725816000878787876141ad565b5050505050565b600061373834836138d0565b111561379a5760003361374b34846138d0565b604051600081818185875af1925050503d8060008114613787576040519150601f19603f3d011682016040523d82523d6000602084013e61378c565b606091505b5050905080611db057600080fd5b50565b6001600160a01b0383166137e25760405162461bcd60e51b8152600401808060200182810382526023815260200180614c156023913960400191505060405180910390fd5b60006137ec613620565b905061381c818560006137fe87614169565b61380787614169565b6040518060200160405280600081525061392d565b61386382604051806060016040528060248152602001614b216024913960008681526002602090815260408083206001600160a01b038b1684529091529020549190613a3f565b60008481526002602090815260408083206001600160a01b03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b600082821115613927576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b61393b868686868686611c8f565b60005b835181101561359357600084828151811061395557fe5b602002602001015111801561397e5750600784828151811061397357fe5b602002602001015111155b156139cf57846008600086848151811061399457fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60078482815181106139dd57fe5b60200260200101511115613a375784600b60008684815181106139fc57fe5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60010161393e565b60008184841115613ace5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613a93578181015183820152602001613a7b565b50505050905090810190601f168015613ac05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b613ae8846001600160a01b03166143d2565b15611c8f57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613b76578181015183820152602001613b5e565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613bb5578181015183820152602001613b9d565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015613bf1578181015183820152602001613bd9565b50505050905090810190601f168015613c1e5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015613c4357600080fd5b505af1925050508015613c6857506040513d6020811015613c6357600080fd5b505160015b613cfd57613c746149a3565b80613c7f5750613cc6565b60405162461bcd60e51b8152602060048201818152835160248401528351849391928392604401919085019080838360008315613a93578181015183820152602001613a7b565b60405162461bcd60e51b8152600401808060200182810382526034815260200180614a496034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146135935760405162461bcd60e51b8152600401808060200182810382526028815260200180614a9f6028913960400191505060405180910390fd5b613d568133612943565b61379a57600080fd5b6000828152602081905260409020613d77908261359c565b15611db057613d84613620565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020613de090826143d8565b15611db057613ded613620565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600f546000908152600d6020908152604080832084845290915281205460041115613e5e57506001611346565b600f546000908152600d6020908152604080832085845290915290205460015b6007548111613ed357600f546000908152600d60209081526040808320848452909152902054821115613ecb57600f546000908152600d6020908152604080832084845290915290205491505b600101613e7e565b50613edf816002613fbe565b600f546000908152600d602090815260408083208784529091529020541115915050919050565b60006013547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613f7857600080fd5b505afa158015613f8c573d6000803e3d6000fd5b505050506040513d6020811015613fa257600080fd5b50511015613faf57600080fd5b611322601254601354846143ed565b600082613fcd57506000611322565b82820282848281613fda57fe5b04146129375760405162461bcd60e51b8152600401808060200182810382526021815260200180614c626021913960400191505060405180910390fd5b600080821161406d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161407657fe5b049392505050565b60006129378383614597565b60009182526015602052604090912055565b806000811180156140ae575060078111155b6140b757600080fd5b60008281526009602052604090205460ff166140d257600080fd5b6000828152600860205260409020546140f6906001600160a01b031683600161379d565b6007546141049060016138d0565b60075550600090815260086020908152604080832080546001600160a01b031916905560099091529020805460ff19169055565b60008061414583856145fb565b60010161415384600a614017565b915091509250929050565b600061132282614662565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061419c57fe5b602090810291909101015292915050565b6141bf846001600160a01b03166143d2565b15611c8f57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561424e578181015183820152602001614236565b50505050905090810190601f16801561427b5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561429e57600080fd5b505af19250505080156142c357506040513d60208110156142be57600080fd5b505160015b6142cf57613c746149a3565b6001600160e01b0319811663f23a6e6160e01b146135935760405162461bcd60e51b8152600401808060200182810382526028815260200180614a9f6028913960400191505060405180910390fd5b6000806001614345606461242f600261433f88670de0b6b3a7640000613fbe565b90613fbe565b9150614368614361600a61242f84670de0b6b3a7640000613fbe565b83906135c6565b949350505050565b600061437c83836143ba565b6143b257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611322565b506000611322565b60009081526001919091016020526040902054151590565b3b151590565b6000612937836001600160a01b038416614666565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156144c95781810151838201526020016144b1565b50505050905090810190601f1680156144f65780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561451757600080fd5b505af115801561452b573d6000803e3d6000fd5b505050506040513d602081101561454157600080fd5b50506000848152600560205260408120546145619086908590309061472c565b60008681526005602052604090205490915061457e9060016135c6565b6000868152600560205260409020556133868582614773565b815460009082106145d95760405162461bcd60e51b8152600401808060200182810382526022815260200180614a7d6022913960400191505060405180910390fd5b8260000182815481106145e857fe5b9060005260206000200154905092915050565b6000808211614651576040805162461bcd60e51b815260206004820152601860248201527f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000604482015290519081900360640190fd5b81838161465a57fe5b069392505050565b5490565b60008181526001830160205260408120548015614722578354600019808301919081019060009087908390811061469957fe5b90600052602060002001549050808760000184815481106146b657fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806146e657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611322565b6000915050611322565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040518060a00160405280600015158152602001600081526020016000815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061481157805160ff191683800117855561483e565b8280016001018555821561483e579182015b8281111561483e578251825591602001919060010190614823565b5061484a929150614988565b5090565b60405180610360016040528060001515815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061495b5782800160ff1982351617855561483e565b8280016001018555821561483e579182015b8281111561483e57823582559160200191906001019061496d565b5b8082111561484a5760008155600101614989565b60e01c90565b600060443d10156149b3576125a2565b600481823e6308c379a06149c7825161499d565b146149d1576125a2565b6040513d600319016004823e80513d67ffffffffffffffff8160248401118184111715614a0157505050506125a2565b82840192508251915080821115614a1b57505050506125a2565b503d83016020828401011115614a33575050506125a2565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220be2cd48f27d0b771ecc739de1b1a4b10494d7b7e17c29d0193739b4b328c8e8064736f6c634300060c0033",
  "deployedSourceMap": "743:28117:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2976:228:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;965:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;965:148:1;-1:-1:-1;;;;;;965:148:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1087:25:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2729:105:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8471:1740:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8471:1740:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8471:1740:12;;;;;;;;;;-1:-1:-1;8471:1740:12;;-1:-1:-1;8471:1740:12;-1:-1:-1;8471:1740:12;:::i;23272:532::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23272:532:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4282:112:0;;:::i;27616:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27616:144:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27616:144:12;;;;;;;;;;-1:-1:-1;27616:144:12;;-1:-1:-1;27616:144:12;-1:-1:-1;27616:144:12;:::i;:::-;;;;-1:-1:-1;;;;;27616:144:12;;;;;;;;;;;;;;19523:734;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19523:734:12;;:::i;:::-;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5534:1184:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5534:1184:5;;-1:-1:-1;5534:1184:5;;-1:-1:-1;;;;;5534:1184:5:i;23953:549:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23953:549:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18084:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18084:88:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18084:88:12;;;;;;;;;;-1:-1:-1;18084:88:12;;-1:-1:-1;18084:88:12;-1:-1:-1;18084:88:12;:::i;4644:223:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4644:223:0;;;;;;-1:-1:-1;;;;;4644:223:0;;:::i;5818:205::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5818:205:0;;;;;;-1:-1:-1;;;;;5818:205:0;;:::i;24631:404:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24631:404:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26270:377;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26270:377:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10765:2327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10765:2327:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10765:2327:12;;;;;;;;;;-1:-1:-1;10765:2327:12;;-1:-1:-1;10765:2327:12;-1:-1:-1;10765:2327:12;:::i;25696:465::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25696:465:12;;:::i;27890:107::-;;;;;;;;;;;;;:::i;3361:530:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3361:530:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3361:530:5;;-1:-1:-1;3361:530:5;;-1:-1:-1;;;;;3361:530:5:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17631:236:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17631:236:12;;:::i;22425:295::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22425:295:12;;;;;;;:::i;3591:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3591:40:12;;:::i;10352:253::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10352:253:12;;:::i;2914:29::-;;;;;;;;;;;;;:::i;26815:618::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26815:618:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25163:399;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25163:399:12;;:::i;2981:27::-;;;;;;;;;;;;;:::i;3965:136:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3965:136:0;;;;;;;:::i;1933:48:12:-;;;;;;;;;;;;;:::i;2950:137:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2950:137:0;;;;;;-1:-1:-1;;;;;2950:137:0;;:::i;9496:217:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9496:217:15;;;;;;;:::i;7591:195:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7591:195:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7591:195:12;;;;;;;;;;;;-1:-1:-1;7591:195:12;-1:-1:-1;7591:195:12;-1:-1:-1;;;;;7591:195:12;;:::i;28183:156::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28183:156:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;28183:156:12;;;;;;;;;;-1:-1:-1;28183:156:12;;-1:-1:-1;28183:156:12;-1:-1:-1;28183:156:12;:::i;1727:49:0:-;;;;;;;;;;;;;:::i;3959:306:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3959:306:5;;;;;;;;;;:::i;18230:399:12:-;;;;;;;;;;;;;:::i;14205:2851::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14205:2851:12;;:::i;2086:31::-;;;;;;;;;;;;;:::i;6970:87::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6970:87:12;;;;:::i;3255:125:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3255:125:0;;:::i;2431:31:12:-;;;;;;;;;;;;;:::i;5101:226:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5101:226:0;;;;;;-1:-1:-1;;;;;5101:226:0;;:::i;7932:109:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7932:109:12;;:::i;3175:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:26:12;;:::i;4332:166:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4332:166:5;;;;;;;;;;:::i;4565:897::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4565:897:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4565:897:5;;-1:-1:-1;4565:897:5;;-1:-1:-1;;;;;4565:897:5:i;20508:380:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20508:380:12;;;;;;;:::i;28451:407::-;;;;;;;;;;;;;:::i;2976:228:5:-;3062:7;-1:-1:-1;;;;;3089:21:5;;3081:77;;;;-1:-1:-1;;;3081:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:13:5;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3175:22:5;;;;;;;;;;2976:228;;;;;:::o;965:148:1:-;-1:-1:-1;;;;;;1073:33:1;;1050:4;1073:33;;;:20;:33;;;;;;;;965:148;;;;:::o;1087:25:12:-;;;;;;:::o;2729:105:5:-;2823:4;2816:11;;;;;;;;-1:-1:-1;;2816:11:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:13;;2816:11;;2823:4;;2816:11;;2823:4;2816:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105;;;:::o;8471:1740:12:-;8620:7;;8647:12;;;;;:32;;;;;;;;8639:41;;;;;;1980:1;8740:12;;:35;8732:44;;;;;;8852:14;;8839:9;:27;;8831:36;;;;;;8948:1;-1:-1:-1;;;;;8915:35:12;:11;8927:8;;8915:21;;;;;;;;;;;;;;;;-1:-1:-1;;8915:21:12;;;;;;;;;;;;-1:-1:-1;;;;;8915:21:12;:35;;;;;;-1:-1:-1;8907:44:12;;-1:-1:-1;8907:44:12;;;;;9085:12;;9067:15;;9085:19;;9102:1;9085:16;:19::i;:::-;9154:1;9121:21;;;:12;:21;;;;;;9067:37;;-1:-1:-1;;;;;;9121:21:12;:35;9114:43;;;;9215:22;;;;:13;:22;;;;;:28;;;:37;9208:45;;;;9363:20;9441:11;9453:8;;9441:21;;;;;;;;;;;;;;;;-1:-1:-1;;9441:21:12;;;;;;;;;;;;-1:-1:-1;;;9419:62:12;;;;-1:-1:-1;;;;;9441:21:12;;;;9419:60;;-1:-1:-1;9419:62:12;;;;;-1:-1:-1;9419:62:12;;;;;;;;9441:21;9419:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9419:62:12;;;;-1:-1:-1;9527:24:12;;:::i;:::-;9575:4;9561:18;;9589:12;;;;:21;;;9620:13;;;;:23;;;9653:25;;;;;;;;;;;;;;;;;;;;;9670:8;;;;;;9653:25;;9670:8;;;;9653:25;;;;;;;;;-1:-1:-1;;;;9653:14:12;;;:25;9688:19;;;:35;;;9758;9764:12;:10;:12::i;:::-;9778:7;9787:1;9758:35;;;;;;;;;;;;:5;:35::i;:::-;9911:12;:10;:12::i;:::-;9887:21;;;;:12;:21;;;;;;;;:36;;-1:-1:-1;;;;;;9887:36:12;-1:-1:-1;;;;;9887:36:12;;;;;;;;;;;9933:13;:22;;;;;;:30;;;;-1:-1:-1;;9933:30:12;;;;;;;;;;;-1:-1:-1;9933:30:12;;;;;;;;;;;;;;;;;;;:22;:30;;;;;;;;;;:::i;:::-;-1:-1:-1;9933:30:12;;;;;;;;;;;10024:12;;:19;;10041:1;10024:16;:19::i;:::-;10009:12;:34;10108:14;;10094:29;;:13;:29::i;:::-;10139:40;10157:7;10166:12;:10;:12::i;:::-;10139:40;;;;;;-1:-1:-1;;;;;10139:40:12;;;;;;;;;;;;;;;;-1:-1:-1;10197:7:12;;8471:1740;-1:-1:-1;;;;;;8471:1740:12:o;23272:532::-;23428:4;23446:7;23467;23488:13;23515:6;23389:7;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;23546:30:::1;;:::i;:::-;23579:22;::::0;;;:13:::1;:22;::::0;;;;;;;;23546:55;;::::1;::::0;::::1;::::0;;;;::::1;;;;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;23546:55:12;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;23579:22;;23546:55;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;23546:55:12;;;-1:-1:-1;;23546:55:12::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;23632:17;;23663:18;;::::1;::::0;23695:19:::1;::::0;::::1;::::0;23728:20:::1;::::0;::::1;::::0;23762:25:::1;::::0;;::::1;::::0;23632:17;;23663:18;;-1:-1:-1;23695:19:12;-1:-1:-1;23728:20:12;;-1:-1:-1;23762:25:12;-1:-1:-1;23272:532:12;-1:-1:-1;;;;23272:532:12:o;4282:112:0:-;4339:7;4365:12;;;;;;;;;;:22;;;;4282:112::o;27616:144:12:-;27706:7;27732:11;27744:8;;27732:21;;;;;;;;;;;;;;;;-1:-1:-1;;27732:21:12;;;;;;;;;;;;-1:-1:-1;;;;;27732:21:12;;-1:-1:-1;;;27616:144:12;;;;:::o;19523:734::-;19587:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;19613:15:::1;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;19605:30;;;::::0;::::1;;19722:12;:10;:12::i;:::-;19699:19;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;19699:19:12;;::::1;:35:::0;::::1;;19691:44;;;::::0;::::1;;19796:19;::::0;;;:11:::1;:19;::::0;;;;;19790:37:::1;::::0;-1:-1:-1;;;;;19796:19:12::1;19808:6:::0;19796:19;19790:5:::1;:37::i;:::-;19901:15;19919::::0;;;:7:::1;:15;::::0;;;;;;;:23:::1;::::0;::::1;::::0;19972:27:::1;::::0;;::::1;::::0;20049:28;;;:17:::1;:28:::0;;;;;:37;;;;;;;;;:44:::1;::::0;20091:1:::1;20049:41;:44::i;:::-;20009:28;::::0;;;:17:::1;:28;::::0;;;;;;;:37;;;;;;;;:84;;;;20145:19;;;:11:::1;:19:::0;;;;;:32;;-1:-1:-1;;;;;;20145:32:12::1;::::0;;20187:7:::1;:15:::0;;;;;;:29;;-1:-1:-1;;20187:29:12::1;::::0;;20232:18;;;;;;;::::1;::::0;;;;;;;;::::1;5897:1;;19523:734:::0;;:::o;5534:1184:5:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;-1:-1:-1;;;5766:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5865:16:5;;5857:66;;;;-1:-1:-1;;;5857:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;-1:-1:-1;;;;;5954:20:5;:4;-1:-1:-1;;;;;5954:20:5;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5933:157;;;;-1:-1:-1;;;5933:157:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;-1:-1:-1;;;;;6366:19:5;-1:-1:-1;;;;;6366:19:5;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6344:19:5;;;;;;;;;;:145;;;;6523:17;;;;;;:29;;6545:6;6523:21;:29::i;:::-;6503:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6503:17:5;;;;;;;;;;:49;;;;-1:-1:-1;6250:3:5;;6214:349;;;;6608:2;-1:-1:-1;;;;;6578:47:5;6602:4;-1:-1:-1;;;;;6578:47:5;6592:8;-1:-1:-1;;;;;6578:47:5;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;23953:549:12:-;24099:4;24126:13;24165:6;24203:7;24240;24061:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;24305:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;:21;;24378:29:::1;::::0;::::1;::::0;24421:27:::1;::::0;::::1;::::0;24462:23:::1;::::0;::::1;::::0;24340:24:::1;::::0;;::::1;24284:211:::0;;;;24305:21:::1;::::0;24284:211;::::1;;;-1:-1:-1::0;;24284:211:12;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;24305:21:::1;::::0;;::::1;::::0;24340:24;;24378:29;;24421:27;;24462:23;;24340:24;;24284:211;;::::1;24340:24:::0;24284:211;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23953:549:::0;;;;;;;;:::o;18084:88::-;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;18084:88;;:::o;4644:223:0:-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;5818:205::-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:0;:7;-1:-1:-1;;;;;5904:23:0;;5896:83;;;;-1:-1:-1;;;5896:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;24631:404:12:-;24776:13;24811:7;24843;24876;24738:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;24930:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;;;24952:22:::1;::::0;::::1;::::0;24976:23:::1;::::0;::::1;::::0;25001:26:::1;::::0;::::1;::::0;24930:20:::1;::::0;;::::1;24922:106:::0;;;;::::1;::::0;;::::1;;;;-1:-1:-1::0;;24922:106:12;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;24930:20;24952:22;;24976:23;;25001:26;;24922:106;;24930:20;;24922:106;;::::1;24930:20:::0;24922:106;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24631:404:::0;;;;;;:::o;26270:377::-;26414:7;26444;26471;26500;26376:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;-1:-1:-1;;;26551:15:12::1;::::0;;;-1:-1:-1;;26551:7:12::1;:15;::::0;;;;:21:::1;::::0;::::1;::::0;26574:18:::1;::::0;::::1;::::0;26594:20:::1;::::0;::::1;::::0;26616:23:::1;::::0;;::::1;::::0;26551:21;;26574:18;;26594:20;26616:23;26270:377::o;10765:2327::-;10931:7;10905;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;10978:15:::1;10962:12;::::0;::::1;;::::0;:31;::::1;;;;;;;10954:40;;;::::0;::::1;;11050:22;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;11042:37;;;::::0;::::1;;11149:21;11162:7;11149:12;:21::i;:::-;11141:30;;;::::0;::::1;;11241:17;11261:39;11278:12;;11292:7;11261:16;:39::i;:::-;11241:59;;11331:9;11318;:22;;11310:31;;;::::0;::::1;;11414:14;1980:1;11431:19;11448:1;11431:12;;:16;;:19;;;;:::i;:::-;:42;11521:1;11490:19:::0;;;:11:::1;:19;::::0;;;;;11431:42;;-1:-1:-1;;;;;;11490:19:12::1;:33:::0;11483:41:::1;;;;11584:15;::::0;;;:7:::1;:15;::::0;;;;:21;::::1;;:30;11577:38;;;;11702:16;;:::i;:::-;11741:4;11728:17:::0;;11755:20:::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;11767:8;;;;;;11755:20;::::1;11767:8:::0;;;;11755:20;::::1;;;;;;;;;;;;;;;;;;;;;;;;;:4;:9;;:20;;;;11804:12;;11785:4;:16;;:31;;;::::0;::::1;11841:7;11826:4;:12;;:22;;;::::0;::::1;11872:13;:22;11886:7;11872:22;;;;;;;;;;;:29;;;11858:4;:11;;:43;;;::::0;::::1;11926:13;:22;11940:7;11926:22;;;;;;;;;;;:30;;;11911:4;:12;;:45;;;::::0;::::1;11982:13;:22;11996:7;11982:22;;;;;;;;;;;:31;;11966:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;11966:13:12::1;::::0;;::::1;:47:::0;;;;12023:15:::1;::::0;;;:7:::1;:15;::::0;;;;;;:22;;;;-1:-1:-1;;12023:22:12::1;::::0;::::1;;;::::0;;;;::::1;::::0;;;11966:13;;12023:22:::1;::::0;-1:-1:-1;12023:22:12;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12023:22:12::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12023:22:12::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;12137:24:12::1;12154:6:::0;12137:16:::1;:24::i;:::-;12171:26;::::0;;;:18:::1;:26;::::0;;;;:38;;;12117:44;-1:-1:-1;12244:34:12::1;12250:12;:10;:12::i;12244:34::-;12396:12;:10;:12::i;:::-;12374:19;::::0;;;:11:::1;:19;::::0;;;;:34;;-1:-1:-1;;;;;;12374:34:12::1;-1:-1:-1::0;;;;;12374:34:12;;;::::1;::::0;;;::::1;::::0;;12494:12:::1;::::0;:19:::1;::::0;-1:-1:-1;12494:16:12::1;:19::i;:::-;12479:12;:34:::0;12584:12:::1;::::0;12566:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;;:47:::1;::::0;12611:1:::1;12566:44;:47::i;:::-;12541:12;::::0;12523:31:::1;::::0;;;:17:::1;:31;::::0;;;;;;;:40;;;;;;;;:90;;;;12675:51:::1;12723:2;12675:43;:9:::0;1768:1:::1;12675:13;:43::i;:::-;:47:::0;::::1;:51::i;:::-;12736:17;12756:21:::0;;;:12:::1;:21;::::0;;;;;;12806:39;;12654:72;;-1:-1:-1;;;;;;12756:21:12::1;::::0;;;12654:72;;12736:17;12806:39;12736:17;12806:39;12654:72;12756:21;12806:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12787:58;;;12863:7;12855:34;;;::::0;;-1:-1:-1;;;12855:34:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;12855:34:12;;;;;;;;;;;;;::::1;;12989:24;13003:9;12989:13;:24::i;:::-;13029:32;13040:6;13048:12;:10;:12::i;:::-;13029:32;::::0;;;;;-1:-1:-1;;;;;13029:32:12;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;13079:6:12;;10765:2327;-1:-1:-1;;;;;;;;;;10765:2327:12:o;25696:465::-;25838:7;25872;25907;25940;25800:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;-1:-1:-1;;;26004:15:12::1;::::0;;;-1:-1:-1;;26004:7:12::1;:15;::::0;;;;:25:::1;::::0;::::1;::::0;26043:26:::1;::::0;::::1;::::0;26083:24:::1;::::0;::::1;::::0;26121:23:::1;::::0;;::::1;::::0;26004:25;;26043:26;;26083:24;26121:23;25696:465::o;27890:107::-;27978:12;;27890:107;;:::o;3361:530:5:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;-1:-1:-1;;;3566:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3693:30:5;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;;;;;:49;3775:3;;3734:120;;;-1:-1:-1;3871:13:5;3361:530;-1:-1:-1;;;3361:530:5:o;17631:236:12:-;17719:7;17702:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;17777:1:::1;17746:19:::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;17746:19:12::1;17738:42;;;::::0;::::1;;-1:-1:-1::0;;17841:19:12::1;::::0;;;:11:::1;:19;::::0;;;;;-1:-1:-1;;;;;17841:19:12::1;::::0;17631:236::o;22425:295::-;22587:7;22561;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;22627:12:::1;;22618:5;:21;;22610:30;;;::::0;::::1;;-1:-1:-1::0;;22680:24:12::1;::::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;;22425:295::o;3591:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3591:40:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3591:40:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10352:253::-;10452:7;10434;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;10512:1:::1;10479:21:::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10479:21:12::1;10471:44;;;::::0;::::1;;-1:-1:-1::0;;10577:21:12::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;10577:21:12::1;::::0;10352:253::o;2914:29::-;;;;:::o;26815:618::-;26958:7;26991;27025;27062;27099;27130;26920:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;-1:-1:-1;;;27195:15:12::1;::::0;;;-1:-1:-1;;27195:7:12::1;:15;::::0;-1:-1:-1;;27195:15:12;;;:24:::1;::::0;::::1;::::0;27233:25:::1;::::0;::::1;::::0;27272:28:::1;::::0;::::1;::::0;27314::::1;::::0;::::1;::::0;27356:22:::1;::::0;::::1;::::0;27392:24:::1;::::0;;::::1;::::0;27195;;27233:25;;27272:28;;27314;;26815:618::o;25163:399::-;25313:7;25345;25377;25409;25275:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;-1:-1:-1;;;25460:15:12::1;::::0;;;-1:-1:-1;;25460:7:12::1;:15;::::0;;;;;;;:22:::1;::::0;::::1;::::0;25484::::1;::::0;::::1;::::0;25508::::1;::::0;::::1;::::0;25532;;;::::1;::::0;25460;;25163:399::o;2981:27::-;;;;:::o;3965:136:0:-;4038:7;4064:12;;;;;;;;;;:30;;4088:5;4064:23;:30::i;:::-;4057:37;3965:136;-1:-1:-1;;;3965:136:0:o;1933:48:12:-;1980:1;1933:48;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;3042:29;:38::i;9496:217:15:-;9592:10;-1:-1:-1;;;;;9606:14:15;9592:28;;9584:72;;;;;-1:-1:-1;;;9584:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;9666:40;9684:9;9695:10;9666:17;:40::i;7591:195:12:-;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;7730:11:::1;7703;7715;;7703:24;;;;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;7703:24:12::1;::::0;;;;;::::1;::::0;;;;:38;;-1:-1:-1;;;;;7703:38:12;;;::::1;-1:-1:-1::0;;;;;;7703:38:12;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;7751:10:12::1;:28:::0;;7703:38;7751:28;::::1;::::0;;7703:24:::1;7751:28:::0;;;;::::1;::::0;;::::1;7767:11:::0;;7751:28:::1;:::i;:::-;;7591:195:::0;;;:::o;28183:156::-;5988:25;1484:28;5988:8;:25::i;:::-;28286:24:::1;:46:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;28286:46:12;;;;::::1;::::0;;::::1;28316:15:::0;;28286:46:::1;:::i;:::-;;28183:156:::0;;:::o;1727:49:0:-;1772:4;1727:49;:::o;3959:306:5:-;4077:8;-1:-1:-1;;;;;4061:24:5;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4061:24:5;;;4053:78;;;;-1:-1:-1;;;4053:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;-1:-1:-1;;;;;4142:32:5;;;;;;;;;;;;;;;;;-1:-1:-1;4142:32:5;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4142:53:5;;;;;;;;;;;4225:12;:10;:12::i;:::-;-1:-1:-1;;;;;4210:48:5;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;18230:399:12:-;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;18313:1:::1;18298:12;;:16;18290:25;;;::::0;::::1;;18378:1;18361:150;1980:1;18381;:25;18361:150;;18431:16;::::0;;;:13:::1;:16;::::0;;;;:22;::::1;;18427:74;;;18473:13;18484:1;18473:10;:13::i;:::-;18408:3;;18361:150;;;-1:-1:-1::0;18567:12:12::1;::::0;:19:::1;::::0;18584:1:::1;18567:16;:19::i;:::-;18552:12;:34:::0;18602:20:::1;::::0;::::1;::::0;;;::::1;18230:399::o:0;14205:2851::-;14270:6;1980:1;5759:6;:29;5751:38;;;;;;5838:15;;;;:7;:15;;;;;:21;;;5830:30;;;;;;14288:21:::1;14312:26:::0;;;:18:::1;:26;::::0;;;;;14356:18;14348:27:::1;;;::::0;::::1;;14443:20;14466:32:::0;;;:17:::1;:32;::::0;;;;;14516:17;14508:26:::1;;;::::0;::::1;;14588:23;14622:15:::0;;;:7:::1;:15;::::0;;;;14646:1:::1;14622:21;::::0;;::::1;:25:::0;14721:26:::1;14731:1;14734:12:::0;14721:9:::1;:26::i;:::-;14674:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;14673:74:::0;;;;;-1:-1:-1;14816:29:12::1;14826:1;14673:74:::0;14816:9:::1;:29::i;:::-;14773:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;14772:73:::0;;;;;-1:-1:-1;14913:29:12::1;14923:1;14772:73:::0;14913:9:::1;:29::i;:::-;14870:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;14869:73:::0;;;;;-1:-1:-1;15010:29:12::1;15020:1;14869:73:::0;15010:9:::1;:29::i;:::-;14967:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;14966:73:::0;;;;;-1:-1:-1;15107:29:12::1;15117:1;14966:73:::0;15107:9:::1;:29::i;:::-;15064:15;::::0;;;:7:::1;:15;::::0;;;;;;;:22:::1;15063:73:::0;;;;;-1:-1:-1;15208:29:12::1;15218:1;15063:73:::0;15208:9:::1;:29::i;:::-;15162:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;15161:76:::0;;;;;-1:-1:-1;15309:30:12::1;15319:2;15161:76:::0;15309:9:::1;:30::i;:::-;15262:15;::::0;;;:7:::1;:15;::::0;;;;:26:::1;;15261:78:::0;;;;;-1:-1:-1;15410:30:12::1;15420:2;15261:78:::0;15410:9:::1;:30::i;:::-;15365:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;15364:76:::0;;;;;-1:-1:-1;15510:29:12::1;15520:1;15364:76:::0;15510:9:::1;:29::i;:::-;15466:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;15465:74:::0;;;;;-1:-1:-1;15604:30:12::1;15614:2;15465:74:::0;15604:9:::1;:30::i;:::-;15565:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;15564:70:::0;;;;-1:-1:-1;15679:25:12::1;::::0;15702:1:::1;15679:22;:25::i;:::-;15658:15;::::0;;;:7:::1;:15;::::0;;;;:18:::1;;:46:::0;15756:30:::1;15766:2;15770:15:::0;15756:9:::1;:30::i;:::-;15715:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;15714:72:::0;;;;-1:-1:-1;15833:27:12::1;::::0;15858:1:::1;15833:24;:27::i;:::-;15810:15;::::0;;;:7:::1;:15;::::0;;;;:20:::1;;:50:::0;15915:30:::1;15925:2;15929:15:::0;15915:9:::1;:30::i;:::-;15871:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;15870:75:::0;;;;-1:-1:-1;15995:30:12::1;::::0;16023:1:::1;15995:27;:30::i;:::-;15969:15;::::0;;;:7:::1;:15;::::0;;;;:23:::1;;:56:::0;16082:30:::1;16092:2;16096:15:::0;16082:9:::1;:30::i;:::-;16037:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;16036:76:::0;;;;-1:-1:-1;16162:31:12::1;::::0;16191:1:::1;16162:28;:31::i;:::-;16135:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;:58:::0;16250:30:::1;16260:2;16264:15:::0;16250:9:::1;:30::i;:::-;16204:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;16203:77:::0;;;;-1:-1:-1;16331:32:12::1;::::0;16361:1:::1;16331:29;:32::i;:::-;16303:15;::::0;;;:7:::1;:15;::::0;;;;:25:::1;;:60:::0;16423:30:::1;16433:2;16437:15:::0;16423:9:::1;:30::i;:::-;16374:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16373:80:::0;;;;-1:-1:-1;16507:35:12::1;::::0;16540:1:::1;16507:32;:35::i;:::-;16476:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:66:::0;16602:30:::1;16612:2;16616:15:::0;16602:9:::1;:30::i;:::-;16553:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;16552:80:::0;;;;-1:-1:-1;16686:35:12::1;::::0;16719:1:::1;16686:32;:35::i;:::-;16655:15;::::0;;;:7:::1;:15;::::0;;;;:28:::1;;:66:::0;16775:30:::1;16785:2;16789:15:::0;16775:9:::1;:30::i;:::-;16732:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;16731:74:::0;;;;-1:-1:-1;16853:29:12::1;::::0;16880:1:::1;16853:26;:29::i;:::-;16828:15;::::0;;;:7:::1;:15;::::0;;;;:22:::1;;:54:::0;16938:30:::1;16948:2;16952:15:::0;16938:9:::1;:30::i;:::-;16893:15;::::0;;;:7:::1;:15;::::0;;;;:24:::1;;16892:76:::0;;;;-1:-1:-1;17018:31:12::1;::::0;17047:1:::1;17018:28;:31::i;:::-;16991:15;::::0;;;:7:::1;:15;::::0;;;;;:24:::1;;:58:::0;;;;-1:-1:-1;;;;14205:2851:12:o;2086:31::-;;;;:::o;6970:87::-;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;7030:12:::1;:20:::0;;7045:5;;7030:12;-1:-1:-1;;7030:20:12::1;::::0;7045:5;7030:20;;::::1;;;;;;;;;;;6970:87:::0;:::o;3255:125:0:-;3318:7;3344:12;;;;;;;;;;:29;;:27;:29::i;2431:31:12:-;;;;:::o;5101:226:0:-;5193:6;:12;;;;;;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7932:109:12;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;8012:14:::1;:22:::0;7932:109::o;3175:26::-;;;;;;;;;;4332:166:5;-1:-1:-1;;;;;4454:27:5;;;4431:4;4454:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4332:166::o;4565:897::-;-1:-1:-1;;;;;4780:16:5;;4772:66;;;;-1:-1:-1;;;4772:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;-1:-1:-1;;;;;4869:20:5;:4;-1:-1:-1;;;;;4869:20:5;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;4893:36::-;4848:148;;;;-1:-1:-1;;;4848:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5178:19:5;;;;;;;;;;;:77;:23;:77::i;:::-;5156:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5156:19:5;;;;;;;;;;:99;;;;5285:17;;;;;;:29;;5307:6;5285:21;:29::i;:::-;5265:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5265:17:5;;;;;;;;;;;;;:49;;;;5330:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;20508:380:12:-;20666:7;20640;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;20706:12:::1;;20697:5;:21;;20689:30;;;::::0;::::1;;20777:18;20798:24:::0;;;:17:::1;:24;::::0;;;;;;;:33;;;;;;;;;:40:::1;::::0;20836:1:::1;20798:37;:40::i;:::-;20777:61;;20856:25;20870:10;20856:13;:25::i;:::-;20849:32:::0;20508:380;-1:-1:-1;;;;;20508:380:12:o;28451:407::-;6097:20;-1:-1:-1;;;;;;;;;;;6097:8:12;:20::i;:::-;28552:24:::1;::::0;28588:13:::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;28588:13:12::1;::::0;;::::1;::::0;;;28552:50;;-1:-1:-1;;;28552:50:12;;::::1;::::0;::::1;::::0;;;;;;;;;;;28518:31:::1;::::0;-1:-1:-1;;;;;28552:24:12::1;::::0;:35:::1;::::0;28588:13;28552:50;;;;;;;;;28588:13;28552:50;;28588:13;28518:31;28552:50:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28552:50:12;28720:46:::1;::::0;;-1:-1:-1;;;28720:46:12;;28760:4:::1;28720:46;::::0;::::1;::::0;;;28552:50;;-1:-1:-1;28552:50:12;;28612:33:::1;::::0;-1:-1:-1;;;;;28720:31:12;::::1;::::0;::::1;::::0;:46;;;;;28552:50:::1;::::0;28720:46;;;;;;;;28612:33;28720:31;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;28720:46:12;;-1:-1:-1;28776:45:12::1;1484:28;28720:46:::0;28776:9:::1;:45::i;:::-;28831:8;-1:-1:-1::0;;;;;28831:18:12::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6127:1;;;28451:407::o:0;6429:150:11:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:11;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:11;;7087:9;:55::i;2690:175:3:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:10;685:10;598:104;:::o;8015:572:5:-;-1:-1:-1;;;;;8129:21:5;;8121:67;;;;-1:-1:-1;;;8121:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;8241:107::-;8384:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8384:22:5;;;;;;;;;;:34;;8411:6;8384:26;:34::i;:::-;8359:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8359:22:5;;;;;;;;;;;;:59;;;;8433:57;;;;;;;;;;;;;8359:22;;8433:57;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;22812:237:12:-;22894:1;22872:19;:9;22886:4;22872:13;:19::i;:::-;:23;22868:175;;;22912:12;22930:10;22954:19;:9;22968:4;22954:13;:19::i;:::-;22930:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22911:68;;;23001:7;22993:16;;;;;22868:175;22812:237;:::o;9881:538:5:-;-1:-1:-1;;;;;9976:21:5;;9968:69;;;;-1:-1:-1;;;9968:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:16;10067:12;:10;:12::i;:::-;10048:31;;10090:105;10111:8;10121:7;10138:1;10142:21;10160:2;10142:17;:21::i;:::-;10165:25;10183:6;10165:17;:25::i;:::-;10090:105;;;;;;;;;;;;:20;:105::i;:::-;10231:108;10271:6;10231:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10231:22:5;;;;;;;;;;;:108;:26;:108::i;:::-;10206:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10206:22:5;;;;;;;;;;;;:133;;;;10355:57;;;;;;;;;;;;;10206:13;;:22;;10355:57;;;;;;;;;;;;;9881:538;;;;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:3;;;3136:155::o;21454:704:12:-;21685:66;21712:8;21722:4;21728:2;21732:3;21737:7;21746:4;21685:26;:66::i;:::-;21767:9;21762:390;21786:3;:10;21782:1;:14;21762:390;;;1611:1;21906:3;21910:1;21906:6;;;;;;;;;;;;;;:28;:62;;;;;1980:1;21938:3;21942:1;21938:6;;;;;;;;;;;;;;:30;;21906:62;21902:135;;;22019:2;21988:12;:20;22001:3;22005:1;22001:6;;;;;;;;;;;;;;21988:20;;;;;;;;;;;;:34;;;;;-1:-1:-1;;;;;21988:34:12;;;;;-1:-1:-1;;;;;21988:34:12;;;;;;21902:135;1980:1;22054:3;22058:1;22054:6;;;;;;;;;;;;;;:29;22050:92;;;22125:2;22103:11;:19;22115:3;22119:1;22115:6;;;;;;;;;;;;;;22103:19;;;;;;;;;;;;:24;;;;;-1:-1:-1;;;;;22103:24:12;;;;;-1:-1:-1;;;;;22103:24:12;;;;;;22050:92;21798:3;;21762:390;;5432:163:3;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:3;;;5432:163::o;13240:778:5:-;13484:15;:2;-1:-1:-1;;;;;13484:13:5;;:15::i;:::-;13480:532;;;13536:2;-1:-1:-1;;;;;13519:43:5;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;-1:-1:-1;;;;;13519:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13519:79:5;;;13515:487;;;;:::i;:::-;;;;;;;;13871:14;;-1:-1:-1;;;13871:14:5;;;;;;;;;;;;;;;;;13878:6;;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;-1:-1:-1;;;13925:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;-1:-1:-1;;;;;;13647:64:5;;-1:-1:-1;;;13647:64:5;13643:161;;13735:50;;-1:-1:-1;;;13735:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7151:120:12;7215:25;7223:4;7229:10;7215:7;:25::i;:::-;7207:34;;;;;7025:184:0;7098:6;:12;;;;;;;;;;:33;;7123:7;7098:24;:33::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:6;:12;;;;;;;;;;:36;;7317:7;7289:27;:36::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:0;7364:7;-1:-1:-1;;;;;7346:40:0;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;13458:666:12:-;13592:12;;13520:4;13574:31;;;:17;:31;;;;;;;;:40;;;;;;;;;13617:1;-1:-1:-1;13570:86:12;;;-1:-1:-1;13641:4:12;13634:11;;13570:86;13779:12;;13731:27;13761:31;;;:17;:31;;;;;;;;:40;;;;;;;;;13828:1;13811:219;13836:12;;13831:1;:17;13811:219;;13891:12;;13873:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;:56;-1:-1:-1;13869:151:12;;;13989:12;;13971:31;;;;:17;:31;;;;;;;;:34;;;;;;;;;;-1:-1:-1;13869:151:12;13850:3;;13811:219;;;-1:-1:-1;14091:26:12;:19;14115:1;14091:23;:26::i;:::-;14065:12;;14047:31;;;;:17;:31;;;;;;;;:40;;;;;;;;;:70;;;-1:-1:-1;;13458:666:12;;;:::o;6298:272::-;6368:17;6438:4;;6405;-1:-1:-1;;;;;6405:14:12;;6428:4;6405:29;;;;;;;;;;;;;-1:-1:-1;;;;;6405:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6405:29:12;:37;;6397:46;;;;;;6512:51;6530:8;;6540:4;;6546:16;6512:17;:51::i;3538:215:3:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:3;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;7677:156:11:-;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6719:142:12:-;6813:28;;;;:17;:28;;;;;;:41;6719:142::o;18775:580::-;18842:7;1611:1;5584:7;:29;:64;;;;;1980:1;5617:7;:31;;5584:64;5576:73;;;;;;18869:22:::1;::::0;;;:13:::1;:22;::::0;;;;:28;::::1;;18861:37;;;::::0;::::1;;19136:21;::::0;;;:12:::1;:21;::::0;;;;;19130:40:::1;::::0;-1:-1:-1;;;;;19136:21:12::1;19149:7:::0;19136:21;19130:5:::1;:40::i;:::-;19239:12;::::0;:19:::1;::::0;19256:1:::1;19239:16;:19::i;:::-;19224:12;:34:::0;-1:-1:-1;19300:1:12::1;19268:21:::0;;;:12:::1;:21;::::0;;;;;;;:34;;-1:-1:-1;;;;;;19268:34:12::1;::::0;;19312:13:::1;:22:::0;;;;;:36;;-1:-1:-1;;19312:36:12::1;::::0;;18775:580::o;17320:180::-;17403:7;;17439:27;:12;17456:9;17439:16;:27::i;:::-;17469:1;17439:31;17472:20;:12;17489:2;17472:16;:20::i;:::-;17431:62;;;;17320:180;;;;;:::o;7230:115:11:-;7293:7;7319:19;7327:3;7319:7;:19::i;14024:193:5:-;14143:16;;;14157:1;14143:16;;;;;;;;;14090;;;;14143;;;;;;;;;;;;-1:-1:-1;14143:16:5;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;;;;;:18;14205:5;14024:193;-1:-1:-1;;14024:193:5:o;12493:741::-;12712:15;:2;-1:-1:-1;;;;;12712:13:5;;:15::i;:::-;12708:520;;;12764:2;-1:-1:-1;;;;;12747:38:5;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;-1:-1:-1;;;;;12747:72:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12747:72:5;;;12743:475;;;;:::i;:::-;-1:-1:-1;;;;;;12868:59:5;;-1:-1:-1;;;12868:59:5;12864:156;;12951:50;;-1:-1:-1;;;12951:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21125:261:12;21190:7;;21247:1;21266:37;21299:3;21266:28;21292:1;21266:21;:9;21280:6;21266:13;:21::i;:::-;:25;;:28::i;:37::-;21258:45;-1:-1:-1;21321:35:12;21331:24;21352:2;21331:16;:4;21340:6;21331:8;:16::i;:24::-;21321:5;;:9;:35::i;:::-;21313:43;21125:261;-1:-1:-1;;;;21125:261:12:o;1640:404:11:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:11;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;726:413:9:-;1086:20;1124:8;;;726:413::o;6747:156:11:-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:11;;6843:7;:53::i;7527:1090:15:-;7649:17;7678:4;-1:-1:-1;;;;;7678:20:15;;7699:14;7715:4;7732:8;7742:5;7721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:71;;;;;;;;;;;;;-1:-1:-1;;;;;7678:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7996:15:15;8063:16;;;:6;7678:71;8063:16;;;;;8014:66;;8031:8;;8041:5;;8056:4;;8014:16;:66::i;:::-;8538:16;;;;:6;:16;;;;;;7996:84;;-1:-1:-1;8538:23:15;;8559:1;8538:20;:23::i;:::-;8519:16;;;;:6;:16;;;;;:42;8578:32;8526:8;8602:7;8578:13;:32::i;4452:201:11:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:11;;;;-1:-1:-1;;;4538:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4820:148:3:-;4878:7;4909:1;4905;:5;4897:42;;;;;-1:-1:-1;;;4897:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:1;4956;:5;;;;;;;4820:148;-1:-1:-1;;;4820:148:3:o;4013:107:11:-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:11;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;826:264:16;1030:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1030:51:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:62;;;;;;826:264::o;1490:172::-;1613:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:52;;;;;;1490:172::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:106;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Oozyx",
    "events": {
      "ElderSpiritMinted(uint256,address)": {
        "params": {
          "elderId": "The elder id belonging to the minted elder",
          "owner": "The address of the owner"
        }
      },
      "HeroBurned(uint256)": {
        "params": {
          "heroId": "The hero id of the hero that was burned"
        }
      },
      "HeroMinted(uint256,address)": {
        "params": {
          "heroId": "The hero id belonging to the hero that was minted",
          "owner": "The address of the owner"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "burnElders()": {
        "notice": "Burns all the elder spirits in game"
      },
      "burnHero(uint256)": {
        "details": "This will only be able to be called from the owner of the hero",
        "notice": "Burns the hero for a refund",
        "params": {
          "heroId": "The hero id to burn"
        }
      },
      "createAffinity(string,address)": {
        "details": "This will be called by a priviledged address. It will allow to create new affinities. May need to add a remove affinity function as well.",
        "notice": "Creates a new token affinity",
        "params": {
          "feedAddress": "The price feed address",
          "tokenTicker": "The token ticker of the affinity"
        }
      },
      "declareRoundWinner(string)": {
        "details": "This can only be called by a game admin contract",
        "notice": "Declares a winning affinity for a round",
        "params": {
          "winningAffinity": "The affinity that won the game"
        }
      },
      "disburseRewards(string)": {
        "details": "This will be called from a priviledged address",
        "notice": "Disburses the rewards evenly among the heroes of the winning affinity",
        "params": {
          "winningAffinity": "The winning affinity token ticker"
        }
      },
      "getAffinityFeedAddress(string)": {
        "notice": "Fetches the feed address for a given affinity",
        "params": {
          "affinity": "The affinity being searched for"
        },
        "returns": {
          "_0": "The address of the affinity's feed address"
        }
      },
      "getElderOwner(uint256)": {
        "notice": "Gets the elder owner for the given elder id",
        "params": {
          "elderId": "The elder id"
        },
        "returns": {
          "_0": "The owner of the elder"
        }
      },
      "getElderSpawnsAmount(uint256,uint256)": {
        "notice": "Gets the amount of heroes spawn from the elder with the specified id during the specified round",
        "params": {
          "elderId": "The elder id",
          "round": "The round the elder was created"
        },
        "returns": {
          "_0": "The amount of heroes spawned from the elder"
        }
      },
      "getElderSpirit(uint256)": {
        "notice": "Fetches the data of a single elder spirit",
        "params": {
          "elderId": "The id of the elder being searched for"
        },
        "returns": {
          "_0": "The elder's attributes in the following order (valid, raceId, classId, affinity)"
        }
      },
      "getHeroGameData(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "valid, affinity, affinity price, round minted, elder id"
        }
      },
      "getHeroLore(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "alignment, background, hometown, weather"
        }
      },
      "getHeroMintPrice(uint256,uint256)": {
        "notice": "Gets the minting price of a hero based on specified elder spirit",
        "params": {
          "elderId": "The elder id for which the hero will be based on",
          "round": "The round of the hero to be minted"
        },
        "returns": {
          "_0": "The hero mint price"
        }
      },
      "getHeroOwner(uint256)": {
        "notice": "Get the hero owner for the given hero id",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "The owner address"
        }
      },
      "getHeroStats(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "stamina, strength, dexterity, constitution, intelligence, wisdom, charisma"
        }
      },
      "getHeroTraitsSkills(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "trait 1, trait 2, skill 1, skill 2"
        }
      },
      "getHeroVisuals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "name, race id, class id, appearance"
        }
      },
      "getHeroVitals(uint256)": {
        "notice": "Hero getter function",
        "params": {
          "heroId": "The hero id"
        },
        "returns": {
          "_0": "level, hp, mana"
        }
      },
      "getNumEldersInGame()": {
        "notice": "Fetches the number of elders currently in the game",
        "returns": {
          "_0": "The current number of elders in the game"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "mintElderSpirit(uint256,uint256,string)": {
        "details": "For now only race, class, and token (affinity) are needed. This will change. The race and class ids will probably be public constants defined in the crypto champions contract, this is subject to change.",
        "notice": "Mints an elder spirit",
        "params": {
          "affinity": "The affinity of the minted hero",
          "classId": "The class id",
          "raceId": "The race id"
        },
        "returns": {
          "_0": "The elder spirit id"
        }
      },
      "mintHero(uint256,string)": {
        "notice": "Mints a hero based on an elder spirit",
        "params": {
          "elderId": "The id of the elder spirit this hero is based on"
        },
        "returns": {
          "_0": "The hero id"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setElderMintPrice(uint256)": {
        "details": "Can only be called by an admin address",
        "notice": "Sets the elder mint price",
        "params": {
          "price": "The new elder mint price"
        }
      },
      "setPhase(uint8)": {
        "notice": "Sets the contract's phase",
        "params": {
          "phase": "The phase the contract should be set to"
        }
      },
      "startNewPriceGame()": {
        "details": "This can only be called by the admin of the contract",
        "notice": "Starts a new price game"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "trainHero(uint256)": {
        "notice": "Sets the hero attributes",
        "params": {
          "heroId": "The hero id"
        }
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "notice": "This is the crypto champions class",
    "title": "Crypto Champions Interface",
    "version": 1
  },
  "offset": [
    743,
    28860
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79935FE0 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xA4AEEC53 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1160 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x119B JUMPI DUP1 PUSH4 0xF32C4974 EQ PUSH2 0x1271 JUMPI DUP1 PUSH4 0xFBC120F9 EQ PUSH2 0x12A1 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x10D3 JUMPI DUP1 PUSH4 0xE3E98382 EQ PUSH2 0x110C JUMPI DUP1 PUSH4 0xE5B0A993 EQ PUSH2 0x1136 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0xA4AEEC53 EQ PUSH2 0x1013 JUMPI DUP1 PUSH4 0xAD313C24 EQ PUSH2 0x1028 JUMPI DUP1 PUSH4 0xBF61211F EQ PUSH2 0x1052 JUMPI DUP1 PUSH4 0xC03AFB59 EQ PUSH2 0x1067 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1094 JUMPI DUP1 PUSH4 0xCAAB7EF8 EQ PUSH2 0x10BE JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xE5B JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0xE94 JUMPI DUP1 PUSH4 0x9D5B82C0 EQ PUSH2 0xEC4 JUMPI DUP1 PUSH4 0x9E315008 EQ PUSH2 0xF48 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xFC3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xFD8 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x79935FE0 EQ PUSH2 0xD65 JUMPI DUP1 PUSH4 0x835A4398 EQ PUSH2 0xD7A JUMPI DUP1 PUSH4 0x8423B077 EQ PUSH2 0xDD7 JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0xE01 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE16 JUMPI DUP1 PUSH4 0x90DED47E EQ PUSH2 0xE46 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x4C52B2A9 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4C52B2A9 EQ PUSH2 0xB22 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0xB37 JUMPI DUP1 PUSH4 0x56B4D760 EQ PUSH2 0xCB7 JUMPI DUP1 PUSH4 0x59CA19D3 EQ PUSH2 0xCE1 JUMPI DUP1 PUSH4 0x6DE51353 EQ PUSH2 0xD11 JUMPI DUP1 PUSH4 0x72EDA5BB EQ PUSH2 0xD3B JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x90A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0x46E6F13D EQ PUSH2 0x97C JUMPI DUP1 PUSH4 0x48772D79 EQ PUSH2 0xA33 JUMPI DUP1 PUSH4 0x498E8219 EQ PUSH2 0xA83 JUMPI DUP1 PUSH4 0x4C2ED018 EQ PUSH2 0xAF8 JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x26D4D15A EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x27E50B18 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0x2EE1F0A0 EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0x2EFB8874 EQ PUSH2 0x88F JUMPI PUSH2 0x2AD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xFBEA841 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x21C2F72A EQ PUSH2 0x494 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1328 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x40C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x13EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x17F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x180E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1848 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1994 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x839 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1E7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA22 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F73 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1FD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x253F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x259E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x25A5 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCA3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC8B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2691 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x26FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2745 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x27EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2846 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x284C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x28BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2919 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x291F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x293E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2943 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x295B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2A84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2AEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2AF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH2 0x2BE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2C79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x3055 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x305B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3092 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x30A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3108 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3131 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x11BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x315F SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x332A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63F PUSH2 0x338F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AF6 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1400 JUMPI INVALID JUMPDEST EQ PUSH2 0x140A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD LT PUSH2 0x1418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD CALLVALUE LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP3 EQ ISZERO SWAP2 POP PUSH2 0x1472 SWAP1 POP JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1483 SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14A5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14BE JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x20 ADD DUP5 KECCAK256 SLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP6 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xFEAF968C SWAP4 POP PUSH1 0x4 DUP1 DUP3 ADD SWAP4 POP PUSH1 0xA0 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x154D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH2 0x155C PUSH2 0x479F JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1F DUP9 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP7 DUP2 MSTORE SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x15CF PUSH2 0x15B7 PUSH2 0x3620 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3624 JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 SWAP3 PUSH2 0x164A SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x47D0 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH2 0x1666 SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xE SLOAD PUSH2 0x1675 SWAP1 PUSH2 0x372C JUMP JUMPDEST PUSH32 0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1 DUP4 PUSH2 0x169F PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x16E6 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F7 PUSH2 0x479F JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH2 0x100 SWAP5 DUP3 AND ISZERO SWAP5 SWAP1 SWAP5 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP4 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP6 DUP3 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x17BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1790 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x179E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP13 SWAP2 SWAP12 POP SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 GT PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x188C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1894 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x18BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x379D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP3 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH2 0x1918 SWAP1 PUSH1 0x1 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP7 DUP3 MSTORE PUSH1 0xB DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xC DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CD5 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B9E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1A4C JUMPI POP PUSH2 0x1A4C DUP6 PUSH2 0x1A47 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x3131 JUMP JUMPDEST PUSH2 0x1A87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4BC3 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A91 PUSH2 0x3620 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AA1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x392D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1BA7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1ABB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AD3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1B40 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4C38 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3A3F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1B77 SWAP1 DUP3 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1AA4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C15 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C6C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C54 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C8F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3AD6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT PUSH2 0x1CAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP7 SWAP1 SWAP7 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP8 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1D7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1DB0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1DD7 SWAP1 PUSH2 0x1DD2 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x2943 JUMP JUMPDEST PUSH2 0x1E12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AC7 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB0 DUP3 DUP3 PUSH2 0x3D5F JUMP JUMPDEST PUSH2 0x1E24 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4D1E PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB0 DUP3 DUP3 PUSH2 0x3DC8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x1 SWAP4 DUP5 ADD DUP1 SLOAD DUP8 MLOAD PUSH1 0x2 SWAP7 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP7 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP6 MSTORE SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F5C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F31 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F5C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F3F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x1F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x11 DUP2 ADD SLOAD PUSH1 0x12 DUP3 ADD SLOAD PUSH1 0x13 DUP4 ADD SLOAD PUSH1 0x14 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1FE6 JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2002 JUMPI INVALID JUMPDEST EQ PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2030 DUP6 PUSH2 0x3E31 JUMP JUMPDEST PUSH2 0x2039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2047 PUSH1 0xF SLOAD DUP8 PUSH2 0x332A JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x2056 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x2070 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x35C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2093 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20AC JUMPI INVALID JUMPDEST PUSH2 0x20B4 PUSH2 0x484E JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH1 0xF SLOAD DUP2 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP8 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2203 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2203 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x40 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE DUP2 DUP4 ADD MLOAD DUP1 MLOAD DUP5 SWAP4 PUSH2 0x2247 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x47D0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x2263 SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x47D0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD PUSH1 0xA DUP3 ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD PUSH1 0xC DUP3 ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD PUSH1 0xD DUP3 ADD SSTORE PUSH2 0x1C0 DUP3 ADD MLOAD PUSH1 0xE DUP3 ADD SSTORE PUSH2 0x1E0 DUP3 ADD MLOAD PUSH1 0xF DUP3 ADD SSTORE PUSH2 0x200 DUP3 ADD MLOAD PUSH1 0x10 DUP3 ADD SSTORE PUSH2 0x220 DUP3 ADD MLOAD PUSH1 0x11 DUP3 ADD SSTORE PUSH2 0x240 DUP3 ADD MLOAD PUSH1 0x12 DUP3 ADD SSTORE PUSH2 0x260 DUP3 ADD MLOAD PUSH1 0x13 DUP3 ADD SSTORE PUSH2 0x280 DUP3 ADD MLOAD PUSH1 0x14 DUP3 ADD SSTORE PUSH2 0x2A0 DUP3 ADD MLOAD PUSH1 0x15 DUP3 ADD SSTORE PUSH2 0x2C0 DUP3 ADD MLOAD PUSH1 0x16 DUP3 ADD SSTORE PUSH2 0x2E0 DUP3 ADD MLOAD PUSH1 0x17 DUP3 ADD SSTORE PUSH2 0x300 DUP3 ADD MLOAD PUSH1 0x18 DUP3 ADD SSTORE PUSH2 0x320 DUP3 ADD MLOAD PUSH1 0x19 DUP3 ADD SSTORE PUSH2 0x340 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1A SWAP1 SWAP2 ADD SSTORE PUSH1 0x0 PUSH2 0x2374 DUP4 PUSH2 0x3F06 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0x2392 PUSH2 0x15B7 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x239A PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0x23D4 SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x23FF SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x2435 PUSH1 0xA PUSH2 0x242F DUP8 PUSH1 0x8 PUSH2 0x3FBE JUMP JUMPDEST SWAP1 PUSH2 0x4017 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2490 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x24DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185E5B595B9D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24E5 DUP8 PUSH2 0x372C JUMP JUMPDEST PUSH32 0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E DUP7 PUSH2 0x250F PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP SWAP4 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x2553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD DUP2 ADD SLOAD PUSH1 0xE DUP3 ADD SLOAD PUSH1 0xF DUP4 ADD SLOAD PUSH1 0x10 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CAC PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x262B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2689 JUMPI PUSH2 0x266A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2649 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x265D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12B6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2676 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2631 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 DUP2 GT PUSH2 0x26A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x270E JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2752 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP4 POP SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x27E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x27FF JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x2808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x7 DUP2 GT PUSH2 0x2863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x287E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP5 DUP6 MSTORE POP POP PUSH1 0xC PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x15 DUP2 ADD SLOAD PUSH1 0x16 DUP3 ADD SLOAD PUSH1 0x17 DUP4 ADD SLOAD PUSH1 0x18 DUP5 ADD SLOAD PUSH1 0x19 DUP6 ADD SLOAD PUSH1 0x1A SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x7 DUP2 GT PUSH2 0x28D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x28EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE POP POP PUSH1 0xC PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x9 DUP2 ADD SLOAD PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xB DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP4 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2937 SWAP1 DUP4 PUSH2 0x407E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x2937 SWAP1 DUP4 PUSH2 0x35B1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x29D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1DB0 DUP3 DUP3 PUSH2 0x408A JUMP JUMPDEST PUSH2 0x29F9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST DUP1 PUSH1 0x10 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2A7E SWAP1 PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP5 DUP5 PUSH2 0x491A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2AAD PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 PUSH2 0x3D4C JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2AEA SWAP1 PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD DUP4 DUP4 PUSH2 0x491A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B06 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2B4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C83 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x2B59 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x2B9D PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2BFA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD GT PUSH2 0x2C09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x7 DUP2 GT PUSH2 0x2C3C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C34 DUP2 PUSH2 0x409C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2C0C JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2C4B SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD PUSH32 0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 GT PUSH2 0x2C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2CA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x11 SWAP1 SWAP2 ADD SSTORE PUSH2 0x2CF5 PUSH1 0x2 DUP4 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2D17 PUSH1 0x4 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2D39 PUSH1 0x4 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2D5B PUSH1 0x4 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2D7D PUSH1 0x4 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2DA0 PUSH1 0x9 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2DC2 PUSH1 0x1E DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xE ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2DE4 PUSH1 0x18 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2E06 PUSH1 0x5 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x10 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x2E28 PUSH1 0x15 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x12 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2E49 SWAP1 PUSH1 0x9 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x12 ADD SSTORE PUSH2 0x2E66 PUSH1 0x15 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x13 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2E87 SWAP1 PUSH1 0x9 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x13 ADD SSTORE PUSH2 0x2EA4 PUSH1 0x1F DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x14 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2EC5 SWAP1 PUSH1 0x9 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x14 ADD SSTORE PUSH2 0x2EE2 PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x15 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2F03 SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x15 ADD SSTORE PUSH2 0x2F20 PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x16 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2F41 SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x16 ADD SSTORE PUSH2 0x2F5E PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x17 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2F7F SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x17 ADD SSTORE PUSH2 0x2F9C PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x18 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2FBD SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x18 ADD SSTORE PUSH2 0x2FDA PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x19 ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x2FFB SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x19 ADD SSTORE PUSH2 0x3018 PUSH1 0x10 DUP3 PUSH2 0x4138 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1A ADD DUP3 SWAP1 SSTORE SWAP2 POP PUSH2 0x3039 SWAP1 PUSH1 0x2 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP6 KECCAK256 PUSH1 0x1A ADD SWAP5 SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3072 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x308A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1322 SWAP1 PUSH2 0x415E JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x30CD SWAP1 PUSH2 0x1DD2 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B6E PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x311F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2752 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x31A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B9E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31AC PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x31D2 JUMPI POP PUSH2 0x31D2 DUP6 PUSH2 0x1A47 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x320D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B45 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3217 PUSH2 0x3620 JUMP JUMPDEST SWAP1 POP PUSH2 0x3237 DUP2 DUP8 DUP8 PUSH2 0x3228 DUP9 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0x3231 DUP9 PUSH2 0x4169 JUMP JUMPDEST DUP8 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x327E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4C38 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3A3F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x32B5 SWAP1 DUP5 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1C8F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x41AD JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x333E JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x3347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP5 GT ISZERO PUSH2 0x3356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x337B SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x3386 DUP2 PUSH2 0x431E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33A6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3D4C JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x50524943455F57415253 PUSH1 0xB0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 MLOAD PUSH4 0x6CADCD79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x24 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH4 0xD95B9AF2 SWAP5 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3424 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x340C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3451 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x349A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72D7F665 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0xE5AFECCA SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x3544 PUSH32 0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD65AB5F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x357F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x43BA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2937 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4CFD PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3673 PUSH2 0x3620 JUMP JUMPDEST SWAP1 POP PUSH2 0x3685 DUP2 PUSH1 0x0 DUP8 PUSH2 0x3228 DUP9 PUSH2 0x4169 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x36B2 SWAP1 DUP5 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x3725 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x41AD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3738 CALLVALUE DUP4 PUSH2 0x38D0 JUMP JUMPDEST GT ISZERO PUSH2 0x379A JUMPI PUSH1 0x0 CALLER PUSH2 0x374B CALLVALUE DUP5 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3787 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x378C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x37E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C15 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37EC PUSH2 0x3620 JUMP JUMPDEST SWAP1 POP PUSH2 0x381C DUP2 DUP6 PUSH1 0x0 PUSH2 0x37FE DUP8 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0x3807 DUP8 PUSH2 0x4169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x392D JUMP JUMPDEST PUSH2 0x3863 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4B21 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x3A3F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3927 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x393B DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3593 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3955 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT DUP1 ISZERO PUSH2 0x397E JUMPI POP PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3973 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x39CF JUMPI DUP5 PUSH1 0x8 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3994 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3A37 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x39FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x393E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x3ACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A93 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A7B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3AC0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x3AE8 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43D2 JUMP JUMPDEST ISZERO PUSH2 0x1C8F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B76 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B5E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BB5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B9D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BF1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BD9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3C1E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3C68 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3CFD JUMPI PUSH2 0x3C74 PUSH2 0x49A3 JUMP JUMPDEST DUP1 PUSH2 0x3C7F JUMPI POP PUSH2 0x3CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x3A93 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A49 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x3593 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A9F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D56 DUP2 CALLER PUSH2 0x2943 JUMP JUMPDEST PUSH2 0x379A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3D77 SWAP1 DUP3 PUSH2 0x359C JUMP JUMPDEST ISZERO PUSH2 0x1DB0 JUMPI PUSH2 0x3D84 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3DE0 SWAP1 DUP3 PUSH2 0x43D8 JUMP JUMPDEST ISZERO PUSH2 0x1DB0 JUMPI PUSH2 0x3DED PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x4 GT ISZERO PUSH2 0x3E5E JUMPI POP PUSH1 0x1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0x3ED3 JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3ECB JUMPI PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3E7E JUMP JUMPDEST POP PUSH2 0x3EDF DUP2 PUSH1 0x2 PUSH2 0x3FBE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x3FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1322 PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD DUP5 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3FCD JUMPI POP PUSH1 0x0 PUSH2 0x1322 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3FDA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4C62 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x406D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x4076 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP4 DUP4 PUSH2 0x4597 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x40AE JUMPI POP PUSH1 0x7 DUP2 GT ISZERO JUMPDEST PUSH2 0x40B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x40D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x40F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH2 0x379D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x4104 SWAP1 PUSH1 0x1 PUSH2 0x38D0 JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4145 DUP4 DUP6 PUSH2 0x45FB JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4153 DUP5 PUSH1 0xA PUSH2 0x4017 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1322 DUP3 PUSH2 0x4662 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x419C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41BF DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x43D2 JUMP JUMPDEST ISZERO PUSH2 0x1C8F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x424E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4236 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x427B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x429E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x42C3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x42CF JUMPI PUSH2 0x3C74 PUSH2 0x49A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x3593 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A9F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x4345 PUSH1 0x64 PUSH2 0x242F PUSH1 0x2 PUSH2 0x433F DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3FBE JUMP JUMPDEST SWAP1 PUSH2 0x3FBE JUMP JUMPDEST SWAP2 POP PUSH2 0x4368 PUSH2 0x4361 PUSH1 0xA PUSH2 0x242F DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3FBE JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x35C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP4 DUP4 PUSH2 0x43BA JUMP JUMPDEST PUSH2 0x43B2 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4666 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP6 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x44C9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x44B1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x44F6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x452B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4561 SWAP1 DUP7 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH2 0x472C JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x457E SWAP1 PUSH1 0x1 PUSH2 0x35C6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x3386 DUP6 DUP3 PUSH2 0x4773 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x45D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A7D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x45E8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4651 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x465A JUMPI INVALID JUMPDEST MOD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4722 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4699 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x46B6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x46E6 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4811 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x483E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x483E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x483E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4823 JUMP JUMPDEST POP PUSH2 0x484A SWAP3 SWAP2 POP PUSH2 0x4988 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x495B JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x483E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x483E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x483E JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x496D JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x484A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4989 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x49B3 JUMPI PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x49C7 DUP3 MLOAD PUSH2 0x499D JUMP JUMPDEST EQ PUSH2 0x49D1 JUMPI PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x4A01 JUMPI POP POP POP POP PUSH2 0x25A2 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A1B JUMPI POP POP POP POP PUSH2 0x25A2 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x4A33 JUMPI POP POP POP PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x6365455243313135353A2063616C6C PUSH6 0x72206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x766564416363657373436F6E74726F6C GASPRICE KECCAK256 PUSH20 0x656E646572206D75737420626520616E2061646D PUSH10 0x6E20746F207265766F6B PUSH6 0x455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x2172861495 0xE7 0xB8 0x5E 0xDA 0xC7 RETURNDATACOPY EXTCODECOPY 0xD5 0xFB 0xB4 0x2D 0xD6 PUSH22 0xBAADF627720E687BCFDACA025096455243313135353A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135353A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F72207472616E73666572 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77455243313135353A20 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x7358221220BE2C 0xD4 DUP16 0x27 0xD0 0xB7 PUSH18 0xECC739DE1B1A4B10494D7B7E17C29D019373 SWAP12 0x4B ORIGIN DUP13 DUP15 DUP1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x79935FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x175"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA4AEEC53"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE985E9C5"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1160"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF242432A"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x119B"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF32C4974"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1271"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFBC120F9"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A1"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D3"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE3E98382"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x110C"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE5B0A993"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1136"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "148": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "149": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "150": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA4AEEC53"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1013"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAD313C24"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1028"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xBF61211F"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1052"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC03AFB59"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1067"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCA15C873"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1094"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCAAB7EF8"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10BE"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "219": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "220": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "221": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12E"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE5B"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x94985DDD"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE94"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9D5B82C0"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEC4"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9E315008"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF48"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFC3"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA22CB465"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFD8"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "301": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "302": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "303": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x79935FE0"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD65"
    },
    "313": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x835A4398"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD7A"
    },
    "324": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "325": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8423B077"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "332": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDD7"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8A19C8BC"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE01"
    },
    "346": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "347": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "348": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9010D07C"
    },
    "353": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "354": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE16"
    },
    "357": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "358": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "359": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90DED47E"
    },
    "364": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "365": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE46"
    },
    "368": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "369": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "372": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "373": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "374": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "375": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "380": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "381": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "384": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "385": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "386": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C52B2A9"
    },
    "391": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "392": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D2"
    },
    "395": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "396": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "397": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C52B2A9"
    },
    "402": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "403": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB22"
    },
    "406": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "407": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "408": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4E1273F4"
    },
    "413": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "414": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB37"
    },
    "417": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "418": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "419": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x56B4D760"
    },
    "424": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "425": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCB7"
    },
    "428": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "429": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "430": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x59CA19D3"
    },
    "435": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "436": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCE1"
    },
    "439": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "440": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "441": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6DE51353"
    },
    "446": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "447": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD11"
    },
    "450": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "451": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "452": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x72EDA5BB"
    },
    "457": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "458": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD3B"
    },
    "461": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "462": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "465": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "466": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "467": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "468": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "473": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "474": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90A"
    },
    "477": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "478": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "479": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x36568ABE"
    },
    "484": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "485": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x943"
    },
    "488": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "489": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "490": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x46E6F13D"
    },
    "495": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "496": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97C"
    },
    "499": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "500": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "501": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x48772D79"
    },
    "506": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "507": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA33"
    },
    "510": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "511": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "512": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x498E8219"
    },
    "517": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "518": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA83"
    },
    "521": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "522": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "523": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4C2ED018"
    },
    "528": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "529": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAF8"
    },
    "532": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "533": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "536": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "537": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "538": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "539": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "544": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "GT",
      "path": "12"
    },
    "545": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26B"
    },
    "548": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "549": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "550": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "555": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "556": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x554"
    },
    "559": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "560": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "561": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x26D4D15A"
    },
    "566": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "567": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x57E"
    },
    "570": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "571": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "572": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x27E50B18"
    },
    "577": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "578": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x615"
    },
    "581": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "582": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "583": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EB2C2D6"
    },
    "588": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "589": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x641"
    },
    "592": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "593": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "594": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EE1F0A0"
    },
    "599": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "600": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80F"
    },
    "603": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "604": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "605": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EFB8874"
    },
    "610": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "611": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x88F"
    },
    "614": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "615": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "618": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "619": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "620": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "621": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0xFDD58E"
    },
    "625": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "626": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B2"
    },
    "629": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "630": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "631": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1FFC9A7"
    },
    "636": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "637": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FD"
    },
    "640": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "641": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "642": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x55AD42E"
    },
    "647": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "648": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x345"
    },
    "651": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "652": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "653": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE89341C"
    },
    "658": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "659": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37B"
    },
    "662": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "663": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "664": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFBEA841"
    },
    "669": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "670": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41A"
    },
    "673": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "674": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "675": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x21C2F72A"
    },
    "680": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "EQ",
      "path": "12"
    },
    "681": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x494"
    },
    "684": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "685": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "686": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "688": {
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "689": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        28860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "690": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "691": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "692": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "693": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "694": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BE"
    },
    "697": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "698": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "701": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "702": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "703": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "704": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EB"
    },
    "707": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "709": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "710": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "711": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "712": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "714": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "715": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "LT",
      "path": "5"
    },
    "716": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "717": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D5"
    },
    "720": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "721": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "723": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "724": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "REVERT",
      "path": "5"
    },
    "725": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "736": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "737": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "AND",
      "path": "5"
    },
    "738": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "739": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "741": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "742": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "743": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B6"
    },
    "746": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "747": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "748": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "750": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "751": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "753": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP3",
      "path": "5"
    },
    "754": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "755": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "756": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "757": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "758": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "759": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SUB",
      "path": "5"
    },
    "760": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "762": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "ADD",
      "path": "5"
    },
    "763": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "764": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "RETURN",
      "path": "5"
    },
    "765": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "766": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "767": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "768": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "769": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "772": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "773": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "775": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "776": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "777": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "778": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "779": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "782": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "785": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "786": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "787": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "789": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "790": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "1"
    },
    "791": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "792": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "795": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "796": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "798": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "799": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "800": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "op": "NOT"
    },
    "812": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "1"
    },
    "813": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1328"
    },
    "816": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "820": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "821": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "824": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "825": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "827": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "828": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "829": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "830": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "831": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "832": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "1"
    },
    "835": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "836": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "1"
    },
    "837": {
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "838": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "839": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP1",
      "path": "12"
    },
    "840": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "841": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x351"
    },
    "844": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "845": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "847": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP1",
      "path": "12"
    },
    "848": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "REVERT",
      "path": "12"
    },
    "849": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "850": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "POP",
      "path": "12"
    },
    "851": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35A"
    },
    "854": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x134B"
    },
    "857": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMP",
      "path": "12"
    },
    "858": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "859": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "861": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "862": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP1",
      "path": "12"
    },
    "863": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP3",
      "path": "12"
    },
    "864": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "866": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP2",
      "path": "12"
    },
    "867": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "GT",
      "path": "12"
    },
    "868": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "869": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36A"
    },
    "872": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "873": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "INVALID",
      "path": "12"
    },
    "874": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "875": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP2",
      "path": "12"
    },
    "876": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "877": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "879": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "ADD",
      "path": "12"
    },
    "880": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "881": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "POP",
      "path": "12"
    },
    "882": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "POP",
      "path": "12"
    },
    "883": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "885": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "886": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP1",
      "path": "12"
    },
    "887": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "888": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "SUB",
      "path": "12"
    },
    "889": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "890": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "RETURN",
      "path": "12"
    },
    "891": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "892": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "893": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "894": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "895": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x387"
    },
    "898": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "899": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "902": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "903": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "904": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "905": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A5"
    },
    "908": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "910": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "911": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "912": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "913": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "915": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "916": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "917": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "918": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E"
    },
    "921": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "922": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "924": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "925": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "926": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "929": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1354"
    },
    "932": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "933": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "934": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "936": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "937": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "938": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "940": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "941": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "942": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "943": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "944": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "945": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "946": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "947": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "948": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "949": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "950": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "951": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "952": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "953": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "954": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "955": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "956": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "957": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "958": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "959": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP6",
      "path": "5"
    },
    "960": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "961": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "962": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "963": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "964": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "965": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "967": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "968": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "969": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "970": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "LT",
      "path": "5"
    },
    "971": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "972": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3DF"
    },
    "975": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "976": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "977": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "978": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "979": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "980": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "981": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "982": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "983": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "984": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "986": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "987": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C7"
    },
    "990": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "991": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "992": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "993": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "994": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "995": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "996": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "997": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "998": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "999": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1000": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1001": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1002": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1004": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1005": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1006": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1007": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40C"
    },
    "1010": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1011": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1012": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1013": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1014": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1015": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1016": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1018": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1019": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1021": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1022": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1025": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "EXP",
      "path": "5"
    },
    "1026": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1027": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "NOT",
      "path": "5"
    },
    "1028": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "AND",
      "path": "5"
    },
    "1029": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1030": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1031": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1033": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "ADD",
      "path": "5"
    },
    "1034": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1035": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1036": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1037": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1038": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1039": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1040": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1041": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "1042": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1045": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1046": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1047": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SUB",
      "path": "5"
    },
    "1048": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1050": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1051": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "1054": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1056": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1057": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1058": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SUB",
      "path": "12"
    },
    "1059": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1061": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1062": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "LT",
      "path": "12"
    },
    "1063": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1064": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x430"
    },
    "1067": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1068": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1070": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1071": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1072": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1073": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1074": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1075": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1076": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1078": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1079": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1080": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1081": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1082": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1083": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1084": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1085": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1087": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1088": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1089": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1091": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1092": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1093": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1100": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "GT",
      "path": "12"
    },
    "1101": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1102": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x456"
    },
    "1105": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1106": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1108": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1109": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1110": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1111": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1112": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1113": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1114": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1116": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1117": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1118": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "GT",
      "path": "12"
    },
    "1119": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1120": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x468"
    },
    "1123": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1124": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1126": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1127": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1128": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1129": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1130": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1131": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1132": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1134": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1135": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1137": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1139": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1140": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "MUL",
      "path": "12"
    },
    "1141": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1142": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ADD",
      "path": "12"
    },
    "1143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "GT",
      "path": "12"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1150": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "GT",
      "path": "12"
    },
    "1151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "OR",
      "path": "12"
    },
    "1152": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1153": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x489"
    },
    "1156": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1157": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1159": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1160": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1161": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1164": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13EC"
    },
    "1171": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1172": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1173": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1174": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1175": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1176": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A0"
    },
    "1179": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1180": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1182": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1183": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1184": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1185": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1186": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4BE"
    },
    "1189": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1191": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1192": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1193": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1194": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1196": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1197": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "LT",
      "path": "12"
    },
    "1198": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1199": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B7"
    },
    "1202": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1203": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1205": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1206": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1207": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1210": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16CB"
    },
    "1213": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1214": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1215": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1217": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1218": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1219": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1220": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1221": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1222": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1223": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1224": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1226": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1227": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1228": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1229": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1230": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1232": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1233": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1234": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1235": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1236": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1238": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1239": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1240": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1242": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1243": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1244": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1245": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1246": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1248": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1249": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1250": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1251": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1252": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1253": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1254": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1255": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1256": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1257": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1258": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1259": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1260": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1262": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1263": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1264": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1265": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1266": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1267": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1268": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1270": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1271": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1272": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1273": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1274": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1275": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1277": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1278": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1279": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1280": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "LT",
      "path": "12"
    },
    "1281": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1282": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x515"
    },
    "1285": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1286": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1287": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1288": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1289": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1290": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1291": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1292": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1293": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1294": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1296": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1297": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FD"
    },
    "1300": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1301": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1302": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1303": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1304": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1305": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1306": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1307": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1308": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1309": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1310": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1311": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1312": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "1314": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "AND",
      "path": "12"
    },
    "1315": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1316": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1317": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x542"
    },
    "1320": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1321": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1322": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1323": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1324": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1325": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1326": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1328": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1329": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1331": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1332": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1335": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "EXP",
      "path": "12"
    },
    "1336": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1337": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "NOT",
      "path": "12"
    },
    "1338": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "AND",
      "path": "12"
    },
    "1339": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1340": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1341": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1343": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "ADD",
      "path": "12"
    },
    "1344": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1345": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1346": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1347": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1348": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1349": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1350": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1351": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1352": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1353": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1354": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1355": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "POP",
      "path": "12"
    },
    "1356": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1358": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1359": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1360": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1361": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SUB",
      "path": "12"
    },
    "1362": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1363": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1364": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1365": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1366": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1367": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1368": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x560"
    },
    "1371": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1372": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1374": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1375": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1376": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1377": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1378": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "1381": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1383": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1384": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1385": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "SUB",
      "path": "0"
    },
    "1386": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1388": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1389": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "LT",
      "path": "0"
    },
    "1390": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1391": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x577"
    },
    "1394": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1395": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1397": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1398": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1399": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1402": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F9"
    },
    "1405": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1406": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1407": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1408": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1409": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1410": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x58A"
    },
    "1413": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1414": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1416": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1417": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1418": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1419": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "POP",
      "path": "12"
    },
    "1420": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5F9"
    },
    "1423": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1425": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1426": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1427": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SUB",
      "path": "12"
    },
    "1428": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1430": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1431": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "LT",
      "path": "12"
    },
    "1432": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1433": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1437": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1439": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1440": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1441": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1442": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1443": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1444": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1445": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1447": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1448": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1449": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1450": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1457": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "GT",
      "path": "12"
    },
    "1458": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1459": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5BB"
    },
    "1462": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1463": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1465": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1466": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1467": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1468": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1469": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1470": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1471": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1473": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1474": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1475": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "GT",
      "path": "12"
    },
    "1476": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1477": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1481": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1483": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1484": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1485": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1486": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1487": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1488": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1489": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1491": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1492": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1493": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1494": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1496": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1497": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "MUL",
      "path": "12"
    },
    "1498": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1499": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1500": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "GT",
      "path": "12"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1507": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "GT",
      "path": "12"
    },
    "1508": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "OR",
      "path": "12"
    },
    "1509": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1510": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5EE"
    },
    "1513": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1514": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1516": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1517": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1518": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1521": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180E"
    },
    "1528": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "i",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1529": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1530": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1532": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1533": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1543": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1544": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "AND",
      "path": "12"
    },
    "1545": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1546": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1547": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1548": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1549": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1550": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1551": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SUB",
      "path": "12"
    },
    "1552": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1554": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "ADD",
      "path": "12"
    },
    "1555": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1556": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1557": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1558": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1559": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1560": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1561": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x621"
    },
    "1564": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1565": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1567": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1568": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1569": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1570": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "POP",
      "path": "12"
    },
    "1571": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "1574": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1576": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1577": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1578": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "SUB",
      "path": "12"
    },
    "1579": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1581": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1582": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "LT",
      "path": "12"
    },
    "1583": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1584": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x638"
    },
    "1587": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1588": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1590": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1591": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1592": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1595": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1848"
    },
    "1598": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1599": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1600": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "STOP",
      "path": "12"
    },
    "1601": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1602": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1603": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1604": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1605": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64D"
    },
    "1608": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1609": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1611": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1612": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1613": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1614": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "1615": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63F"
    },
    "1618": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1620": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1621": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1622": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SUB",
      "path": "5"
    },
    "1623": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1625": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1626": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "LT",
      "path": "5"
    },
    "1627": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1628": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x664"
    },
    "1631": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1632": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1634": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1635": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1636": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "op": "SUB"
    },
    "1645": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1646": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1647": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1648": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1649": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1650": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1653": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1654": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1655": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1656": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1657": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "AND",
      "path": "5"
    },
    "1658": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1661": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1662": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1664": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1668": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1679": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x697"
    },
    "1682": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1683": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1686": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1687": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1690": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1691": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1693": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1694": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1695": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1696": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1697": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A9"
    },
    "1700": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1701": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1703": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1704": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1705": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1706": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1707": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1708": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1709": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1712": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1713": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1714": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1717": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1718": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1719": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1727": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1728": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1729": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1730": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6CA"
    },
    "1733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1736": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1738": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1741": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1742": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1745": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1755": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1759": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1762": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1763": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1764": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1765": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1770": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1771": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1774": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1781": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1782": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1784": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1793": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1795": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1798": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x719"
    },
    "1812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1815": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1819": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72B"
    },
    "1830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1831": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1837": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1842": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1843": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1848": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1857": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74C"
    },
    "1863": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1866": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1869": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1876": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1883": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1884": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1885": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1887": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1889": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1890": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1891": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1894": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1895": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1901": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "1908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1918": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1919": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1939": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79B"
    },
    "1942": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1943": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1945": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1950": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7AD"
    },
    "1960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1964": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1971": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1973": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "1978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "1980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "GT",
      "path": "5"
    },
    "1988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "OR",
      "path": "5"
    },
    "1989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1990": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1994": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1996": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1997": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1998": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1999": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2000": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2001": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2006": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DIV",
      "path": "5"
    },
    "2011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MUL",
      "path": "5"
    },
    "2012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2029": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2030": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2038": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2040": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "ADD",
      "path": "5"
    },
    "2045": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2051": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1994"
    },
    "2056": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2063": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2064": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2065": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2066": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2067": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x81B"
    },
    "2070": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2071": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2073": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2074": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2075": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2076": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "POP",
      "path": "12"
    },
    "2077": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x839"
    },
    "2080": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2082": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2083": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2084": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SUB",
      "path": "12"
    },
    "2085": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2087": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2088": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "LT",
      "path": "12"
    },
    "2089": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2090": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x832"
    },
    "2093": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2094": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2096": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2097": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2098": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2099": {
      "op": "POP"
    },
    "2100": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2101": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C97"
    },
    "2104": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "i",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2105": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2106": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2108": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2109": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2110": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2111": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2112": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2113": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2114": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2115": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2117": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2118": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2119": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2121": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2122": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2123": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2124": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2125": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2127": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2128": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2129": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2130": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2131": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2133": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2134": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2135": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2136": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2137": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2139": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2140": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2141": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2142": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SUB",
      "path": "12"
    },
    "2143": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2144": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2145": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2146": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2147": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2148": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2149": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2150": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2151": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2153": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2154": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2155": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "POP",
      "path": "12"
    },
    "2156": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2157": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2158": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2159": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2161": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2162": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2163": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2164": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2165": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2166": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2168": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2169": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2170": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "LT",
      "path": "12"
    },
    "2171": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2172": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x515"
    },
    "2175": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2176": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2177": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2178": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2179": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2180": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2181": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2182": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2183": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2184": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2186": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "ADD",
      "path": "12"
    },
    "2187": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4FD"
    },
    "2190": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2191": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2192": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2193": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2194": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2195": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x89B"
    },
    "2198": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2199": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2201": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2202": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2203": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2204": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "POP",
      "path": "12"
    },
    "2205": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "2208": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2210": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2211": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2212": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SUB",
      "path": "12"
    },
    "2213": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2215": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2216": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "LT",
      "path": "12"
    },
    "2217": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2218": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B2"
    },
    "2221": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2222": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2224": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2225": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2226": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2227": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2228": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2229": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2230": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2232": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2233": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2234": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2235": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2240": {
      "op": "SHL"
    },
    "2241": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2242": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "GT",
      "path": "12"
    },
    "2243": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2244": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8CC"
    },
    "2247": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2248": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2250": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2251": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2252": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2253": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2254": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2255": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2256": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2258": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2259": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2260": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "GT",
      "path": "12"
    },
    "2261": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2262": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8DE"
    },
    "2265": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2266": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2268": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2269": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2270": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2271": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2272": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2273": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2274": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2276": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2277": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2278": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2279": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2281": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2282": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "MUL",
      "path": "12"
    },
    "2283": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2284": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ADD",
      "path": "12"
    },
    "2285": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "GT",
      "path": "12"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2292": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "GT",
      "path": "12"
    },
    "2293": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "OR",
      "path": "12"
    },
    "2294": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2295": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8FF"
    },
    "2298": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2299": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2301": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2302": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2303": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2306": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2307": {
      "op": "POP"
    },
    "2308": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D99"
    },
    "2313": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "i",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2314": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2315": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2316": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2317": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2318": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "2321": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2322": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2324": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2325": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2326": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2327": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "POP",
      "path": "0"
    },
    "2328": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "2331": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2333": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2334": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2335": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SUB",
      "path": "0"
    },
    "2336": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2338": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2339": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "LT",
      "path": "0"
    },
    "2340": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2341": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92D"
    },
    "2344": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2345": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2347": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2348": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2349": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2352": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2353": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2354": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2356": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "ADD",
      "path": "0"
    },
    "2357": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "AND",
      "path": "0"
    },
    "2367": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB4"
    },
    "2370": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2371": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2372": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2373": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2375": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94F"
    },
    "2378": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2379": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2381": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2382": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2383": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2384": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "POP",
      "path": "0"
    },
    "2385": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "2388": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2390": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2391": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2392": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SUB",
      "path": "0"
    },
    "2393": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2395": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2396": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "LT",
      "path": "0"
    },
    "2397": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2398": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "2401": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2402": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2404": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2405": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2406": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2409": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2410": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2411": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2413": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "ADD",
      "path": "0"
    },
    "2414": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "AND",
      "path": "0"
    },
    "2424": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1C"
    },
    "2427": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2428": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2429": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2430": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2431": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2432": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x988"
    },
    "2435": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2436": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2438": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2439": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2440": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2441": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2442": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9A6"
    },
    "2445": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2447": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2448": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2449": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2450": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2452": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2453": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "LT",
      "path": "12"
    },
    "2454": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2455": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x99F"
    },
    "2458": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2459": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2461": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2462": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2463": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2466": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E7D"
    },
    "2469": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "i",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2470": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2471": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2473": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2474": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2475": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2476": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2478": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2479": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2480": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2481": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2482": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2484": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2485": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2486": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2487": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2488": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2490": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2491": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2492": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2493": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2494": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2496": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2497": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2498": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2499": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2500": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2501": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2502": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2503": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2504": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2505": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2506": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2507": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2508": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2510": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2511": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2512": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2513": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2514": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2515": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2516": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2518": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2519": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2520": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2521": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2522": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2523": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2525": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2526": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2527": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2528": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "LT",
      "path": "12"
    },
    "2529": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2530": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F5"
    },
    "2533": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2534": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2535": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2536": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2537": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2538": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2539": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2540": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2541": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2542": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2544": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2545": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9DD"
    },
    "2548": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2549": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2550": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2551": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2552": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2553": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2554": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2555": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2556": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2557": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2558": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2559": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2560": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2562": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "AND",
      "path": "12"
    },
    "2563": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2564": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2565": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA22"
    },
    "2568": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2569": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2570": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2571": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2572": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2573": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2574": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2576": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2577": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2579": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2580": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2583": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "EXP",
      "path": "12"
    },
    "2584": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2585": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "NOT",
      "path": "12"
    },
    "2586": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "AND",
      "path": "12"
    },
    "2587": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2588": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2589": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2591": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "ADD",
      "path": "12"
    },
    "2592": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2593": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2594": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2595": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2596": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2597": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2598": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2599": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2600": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2601": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2602": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "2603": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2605": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2606": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2607": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2608": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SUB",
      "path": "12"
    },
    "2609": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2610": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "RETURN",
      "path": "12"
    },
    "2611": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2612": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2613": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2614": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2615": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3F"
    },
    "2618": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2619": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2621": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2622": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2623": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2624": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "POP",
      "path": "12"
    },
    "2625": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5D"
    },
    "2628": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2630": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2631": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2632": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SUB",
      "path": "12"
    },
    "2633": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2635": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2636": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "LT",
      "path": "12"
    },
    "2637": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2638": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA56"
    },
    "2641": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2642": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2644": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2645": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2646": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2649": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F73"
    },
    "2652": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "i",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2653": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2654": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2656": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2657": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2658": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2659": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2660": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2661": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2663": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2664": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ADD",
      "path": "12"
    },
    "2665": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2666": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2667": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2668": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2669": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2670": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2671": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ADD",
      "path": "12"
    },
    "2672": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2673": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2674": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2675": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2676": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2678": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2679": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ADD",
      "path": "12"
    },
    "2680": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2681": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2682": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2683": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2684": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2685": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SUB",
      "path": "12"
    },
    "2686": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2688": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "ADD",
      "path": "12"
    },
    "2689": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2690": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "RETURN",
      "path": "12"
    },
    "2691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2692": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "2695": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2698": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SUB",
      "path": "12"
    },
    "2700": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2702": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2703": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "LT",
      "path": "12"
    },
    "2704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2705": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA99"
    },
    "2708": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2709": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2711": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2712": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2714": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2718": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2723": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2725": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2728": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2729": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2734": {
      "op": "SHL"
    },
    "2735": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2736": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "GT",
      "path": "12"
    },
    "2737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xABA"
    },
    "2741": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2742": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2745": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2752": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2753": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "GT",
      "path": "12"
    },
    "2755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xACC"
    },
    "2759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2760": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2763": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2764": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2772": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2773": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2776": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "MUL",
      "path": "12"
    },
    "2777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2778": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ADD",
      "path": "12"
    },
    "2779": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "GT",
      "path": "12"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2786": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "GT",
      "path": "12"
    },
    "2787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "OR",
      "path": "12"
    },
    "2788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2789": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAED"
    },
    "2792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2800": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FD2"
    },
    "2807": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2808": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2809": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2810": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2811": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2812": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB04"
    },
    "2815": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2816": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2818": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2819": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2820": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2821": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "POP",
      "path": "12"
    },
    "2822": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5D"
    },
    "2825": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2827": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2828": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2829": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "SUB",
      "path": "12"
    },
    "2830": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2832": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2833": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "LT",
      "path": "12"
    },
    "2834": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2835": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB1B"
    },
    "2838": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2839": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2841": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2842": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2843": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "2846": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x253F"
    },
    "2849": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "i",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2850": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2851": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2852": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2853": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2854": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2E"
    },
    "2857": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2858": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2860": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2861": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2862": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2863": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "POP",
      "path": "12"
    },
    "2864": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "2867": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x259E"
    },
    "2870": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "i",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2871": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2872": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2873": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2874": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2875": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB43"
    },
    "2878": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2879": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2881": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2882": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2883": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2884": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "2885": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC67"
    },
    "2888": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2890": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2891": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2892": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "2893": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2895": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2896": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "2897": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2898": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5A"
    },
    "2901": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2902": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2904": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2905": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2906": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2907": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2908": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2909": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2910": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2912": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2913": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2914": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2915": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2922": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2923": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2924": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB74"
    },
    "2927": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2930": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2935": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2936": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2938": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2939": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB86"
    },
    "2945": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2946": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2948": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2949": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2952": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "2953": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2958": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2959": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2961": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2962": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "2963": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2964": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2965": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2972": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "2973": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "2974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2975": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA7"
    },
    "2978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2979": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2981": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2982": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2983": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2984": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2985": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2986": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2987": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2988": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2990": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "2991": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2993": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "2994": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2996": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2997": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2998": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2999": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3004": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3005": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3006": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3007": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3008": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3009": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3010": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3011": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3013": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3014": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3015": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3016": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3018": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3019": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3020": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3021": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3022": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3023": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3027": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3028": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3036": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3038": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3039": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3040": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3044": {
      "op": "POP"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3052": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF6"
    },
    "3057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC08"
    },
    "3075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3081": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "3083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "GT",
      "path": "5"
    },
    "3103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "OR",
      "path": "5"
    },
    "3104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC29"
    },
    "3108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3112": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3116": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "3153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3158": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3161": {
      "op": "POP"
    },
    "3162": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3164": {
      "op": "POP"
    },
    "3165": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25A5"
    },
    "3168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3182": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3205": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MUL",
      "path": "5"
    },
    "3206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "LT",
      "path": "5"
    },
    "3215": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3216": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA3"
    },
    "3219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3227": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3228": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3231": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8B"
    },
    "3234": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3239": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3241": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "ADD",
      "path": "5"
    },
    "3243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "POP",
      "path": "5"
    },
    "3247": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3250": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3251": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SUB",
      "path": "5"
    },
    "3253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "RETURN",
      "path": "5"
    },
    "3255": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3256": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3257": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3258": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3259": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCC3"
    },
    "3262": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3263": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3265": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3266": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3267": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3268": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "POP",
      "path": "12"
    },
    "3269": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5F9"
    },
    "3272": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3274": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3275": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3276": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "SUB",
      "path": "12"
    },
    "3277": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3279": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3280": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "LT",
      "path": "12"
    },
    "3281": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3282": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCDA"
    },
    "3285": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3286": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3288": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3289": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3290": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3293": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2691"
    },
    "3296": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "i",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3297": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3298": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3299": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3300": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3301": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCED"
    },
    "3304": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3305": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3307": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3308": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3309": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3310": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "POP",
      "path": "12"
    },
    "3311": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "3314": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3316": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3317": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3318": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "SUB",
      "path": "12"
    },
    "3319": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3321": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3322": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "LT",
      "path": "12"
    },
    "3323": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3324": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD04"
    },
    "3327": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3328": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3330": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3331": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3332": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3333": {
      "op": "POP"
    },
    "3334": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3335": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3336": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3337": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3339": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "ADD",
      "path": "12"
    },
    "3340": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3341": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26FA"
    },
    "3344": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3345": {
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3346": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3347": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3348": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3349": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD1D"
    },
    "3352": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3353": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3355": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3356": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3357": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3358": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "3359": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A5"
    },
    "3362": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3364": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3365": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3366": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SUB",
      "path": "12"
    },
    "3367": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3369": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3370": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "LT",
      "path": "12"
    },
    "3371": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3372": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD34"
    },
    "3375": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3376": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3378": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3379": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3380": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "offset": [
        3591,
        3631
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3383": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2745"
    },
    "3386": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "i",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3387": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3388": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3389": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3390": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3391": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD47"
    },
    "3394": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3395": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3397": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3398": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3399": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3400": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "POP",
      "path": "12"
    },
    "3401": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5F9"
    },
    "3404": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3406": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3407": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3408": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "SUB",
      "path": "12"
    },
    "3409": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3411": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3412": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "LT",
      "path": "12"
    },
    "3413": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3414": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD5E"
    },
    "3417": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3418": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3420": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3421": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3422": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3425": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27EB"
    },
    "3428": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3429": {
      "offset": [
        2914,
        2943
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3430": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3431": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3432": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3433": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD71"
    },
    "3436": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3437": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3439": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3440": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3441": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3442": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "POP",
      "path": "12"
    },
    "3443": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "3446": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2846"
    },
    "3449": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "i",
      "offset": [
        2914,
        2943
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3450": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3451": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3452": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3453": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3454": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD86"
    },
    "3457": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3458": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3460": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3461": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3462": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3463": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "POP",
      "path": "12"
    },
    "3464": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDA4"
    },
    "3467": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3469": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3470": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3471": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SUB",
      "path": "12"
    },
    "3472": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3474": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3475": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "LT",
      "path": "12"
    },
    "3476": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3477": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD9D"
    },
    "3480": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3481": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3483": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3484": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3485": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3488": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x284C"
    },
    "3491": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "i",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3492": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3493": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3495": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3496": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3497": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "3498": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3499": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3500": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3502": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3503": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3504": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3505": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3506": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3507": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3508": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3509": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3510": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3511": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3512": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3513": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3514": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3515": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "3517": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3518": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3519": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3520": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3521": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3522": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3523": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "3525": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3526": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3527": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3528": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "3530": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3531": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3532": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3533": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3534": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3535": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3536": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3537": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SUB",
      "path": "12"
    },
    "3538": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "3540": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "ADD",
      "path": "12"
    },
    "3541": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3542": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "RETURN",
      "path": "12"
    },
    "3543": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3544": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3545": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3546": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3547": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDE3"
    },
    "3550": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3551": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3553": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3554": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3555": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3556": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "POP",
      "path": "12"
    },
    "3557": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5D"
    },
    "3560": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3562": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3563": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3564": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "SUB",
      "path": "12"
    },
    "3565": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3567": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3568": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "LT",
      "path": "12"
    },
    "3569": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3570": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDFA"
    },
    "3573": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3574": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3576": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3577": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3578": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3581": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28BC"
    },
    "3584": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3585": {
      "offset": [
        2981,
        3008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3586": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3587": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3588": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3589": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE0D"
    },
    "3592": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3593": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3595": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3596": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3597": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3598": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "POP",
      "path": "12"
    },
    "3599": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "3602": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2919"
    },
    "3605": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "i",
      "offset": [
        2981,
        3008
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3606": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3607": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3608": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3609": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3610": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE22"
    },
    "3613": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3614": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3616": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3617": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3618": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3619": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "POP",
      "path": "0"
    },
    "3620": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "3623": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3625": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3626": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3627": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SUB",
      "path": "0"
    },
    "3628": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3630": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3631": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "LT",
      "path": "0"
    },
    "3632": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3633": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE39"
    },
    "3636": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3637": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3639": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3640": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3641": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3644": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3645": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3646": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3648": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "ADD",
      "path": "0"
    },
    "3649": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3650": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291F"
    },
    "3653": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3654": {
      "offset": [
        1933,
        1981
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3655": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3656": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3657": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3658": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE52"
    },
    "3661": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3662": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3664": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3665": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3666": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3667": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "POP",
      "path": "12"
    },
    "3668": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "3671": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        1933,
        1981
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x293E"
    },
    "3674": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        1933,
        1981
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3675": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3676": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3677": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3678": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3679": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE67"
    },
    "3682": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3683": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3685": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3686": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3687": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3688": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "POP",
      "path": "0"
    },
    "3689": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331"
    },
    "3692": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3694": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3695": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3696": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SUB",
      "path": "0"
    },
    "3697": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3699": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3700": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "LT",
      "path": "0"
    },
    "3701": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3702": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "3705": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3706": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3708": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3709": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3710": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3713": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3714": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3715": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3717": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3718": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "op": "SUB"
    },
    "3727": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "AND",
      "path": "0"
    },
    "3728": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2943"
    },
    "3731": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3732": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3733": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "3734": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3735": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3736": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3740": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3742": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3743": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3744": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3745": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "POP",
      "path": "15"
    },
    "3746": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x63F"
    },
    "3749": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3751": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3752": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3753": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SUB",
      "path": "15"
    },
    "3754": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3756": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3757": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "LT",
      "path": "15"
    },
    "3758": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3759": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB7"
    },
    "3762": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3763": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3765": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3766": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3767": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3770": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "3771": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3772": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3774": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "ADD",
      "path": "15"
    },
    "3775": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "3776": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x295B"
    },
    "3779": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3780": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3781": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3782": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3783": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3784": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xED0"
    },
    "3787": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3788": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3790": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3791": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3792": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3793": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "POP",
      "path": "12"
    },
    "3794": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "3797": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3799": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3800": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3801": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SUB",
      "path": "12"
    },
    "3802": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3804": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3805": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "LT",
      "path": "12"
    },
    "3806": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3807": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEE7"
    },
    "3810": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3811": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3813": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3814": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3815": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3816": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3817": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3818": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3819": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3821": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3822": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3823": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3824": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3831": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "GT",
      "path": "12"
    },
    "3832": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3833": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF01"
    },
    "3836": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3837": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3839": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3840": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3841": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3842": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3843": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3844": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3845": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3847": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3848": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3849": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "GT",
      "path": "12"
    },
    "3850": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3851": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF13"
    },
    "3854": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3855": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3857": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3858": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3859": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3860": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3861": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3862": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3863": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3865": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3866": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3867": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3868": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3870": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3871": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "MUL",
      "path": "12"
    },
    "3872": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3873": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ADD",
      "path": "12"
    },
    "3874": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "GT",
      "path": "12"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3879": {
      "op": "SHL"
    },
    "3880": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3881": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "GT",
      "path": "12"
    },
    "3882": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "OR",
      "path": "12"
    },
    "3883": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3884": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF34"
    },
    "3887": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3888": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3890": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3891": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3892": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3893": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3894": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3905": {
      "op": "SHL"
    },
    "3906": {
      "op": "SUB"
    },
    "3907": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "AND",
      "path": "12"
    },
    "3908": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29E2"
    },
    "3911": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3912": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3913": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "3914": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3915": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3916": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF54"
    },
    "3919": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3920": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3922": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3923": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3924": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3925": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "POP",
      "path": "12"
    },
    "3926": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "3929": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3931": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3932": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "3933": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SUB",
      "path": "12"
    },
    "3934": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3936": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3937": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "LT",
      "path": "12"
    },
    "3938": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3939": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF6B"
    },
    "3942": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3943": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3945": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3946": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3947": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3948": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3949": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "3950": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3951": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3953": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3954": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "3955": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3956": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3963": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "GT",
      "path": "12"
    },
    "3964": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3965": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF85"
    },
    "3968": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3969": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3971": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3972": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3973": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3974": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3975": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "3976": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3977": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3979": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3980": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "3981": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "GT",
      "path": "12"
    },
    "3982": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3983": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF97"
    },
    "3986": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3987": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3989": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3990": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3991": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3992": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3993": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "3994": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3995": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3997": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "3998": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3999": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4000": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4002": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4003": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "MUL",
      "path": "12"
    },
    "4004": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4005": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ADD",
      "path": "12"
    },
    "4006": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "GT",
      "path": "12"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4013": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "GT",
      "path": "12"
    },
    "4014": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "OR",
      "path": "12"
    },
    "4015": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4016": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFB8"
    },
    "4019": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4020": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4022": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4023": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4024": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4027": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A84"
    },
    "4034": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4035": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4036": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4037": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4038": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4039": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFCF"
    },
    "4042": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4043": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4045": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4046": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4047": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4048": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "POP",
      "path": "0"
    },
    "4049": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "4052": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        1727,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AEF"
    },
    "4055": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4056": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4057": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4058": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4059": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4060": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFE4"
    },
    "4063": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4064": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4066": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4067": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4068": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4069": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "4070": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63F"
    },
    "4073": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4075": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4076": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4077": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SUB",
      "path": "5"
    },
    "4078": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4080": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4081": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "LT",
      "path": "5"
    },
    "4082": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4083": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFB"
    },
    "4086": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4087": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4089": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4090": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4091": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4102": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4103": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "AND",
      "path": "5"
    },
    "4104": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4105": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4107": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ADD",
      "path": "5"
    },
    "4108": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4109": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4110": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4111": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AF4"
    },
    "4114": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4115": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4116": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4117": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4118": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4119": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101F"
    },
    "4122": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4123": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4125": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4126": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4127": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4128": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "POP",
      "path": "12"
    },
    "4129": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "4132": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BE3"
    },
    "4135": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4136": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4137": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4138": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4139": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4140": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1034"
    },
    "4143": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4144": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4146": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4147": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4148": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4149": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "POP",
      "path": "12"
    },
    "4150": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "4153": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4155": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4156": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4157": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "SUB",
      "path": "12"
    },
    "4158": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4160": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4161": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "LT",
      "path": "12"
    },
    "4162": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4163": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x104B"
    },
    "4166": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4167": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4169": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4170": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4171": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4174": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C79"
    },
    "4177": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4178": {
      "offset": [
        2086,
        2117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4179": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4180": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4181": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4182": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x105E"
    },
    "4185": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4186": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4188": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4189": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4190": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4191": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "POP",
      "path": "12"
    },
    "4192": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "4195": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3055"
    },
    "4198": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        2086,
        2117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4199": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4200": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4201": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4202": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4203": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1073"
    },
    "4206": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4207": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4209": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4210": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4211": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4212": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "POP",
      "path": "12"
    },
    "4213": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "4216": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4218": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4219": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4220": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "SUB",
      "path": "12"
    },
    "4221": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4223": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4224": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "LT",
      "path": "12"
    },
    "4225": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4226": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x108A"
    },
    "4229": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4230": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4232": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4233": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4234": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4235": {
      "op": "POP"
    },
    "4236": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4237": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "4239": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "AND",
      "path": "12"
    },
    "4240": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x305B"
    },
    "4243": {
      "fn": "CryptoChampions.setPhase",
      "jump": "i",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4244": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4245": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4246": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4247": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4248": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "4251": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4252": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4254": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4255": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4256": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4257": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "POP",
      "path": "0"
    },
    "4258": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "4261": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4263": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4264": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4265": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "SUB",
      "path": "0"
    },
    "4266": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4268": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4269": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "LT",
      "path": "0"
    },
    "4270": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4271": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B7"
    },
    "4274": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4275": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4277": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4278": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4279": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4282": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3092"
    },
    "4285": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4286": {
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4287": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4288": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4289": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4290": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10CA"
    },
    "4293": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4294": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4296": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4297": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4298": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4299": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "POP",
      "path": "12"
    },
    "4300": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "4303": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30A9"
    },
    "4306": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4307": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4308": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "4309": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4310": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4311": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DF"
    },
    "4314": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4315": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4317": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4318": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4319": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4320": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "POP",
      "path": "0"
    },
    "4321": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "4324": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4326": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4327": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4328": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SUB",
      "path": "0"
    },
    "4329": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4331": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4332": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "LT",
      "path": "0"
    },
    "4333": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4334": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F6"
    },
    "4337": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4338": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4340": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4341": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4342": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4345": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4346": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4347": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4349": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4350": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4357": {
      "op": "SHL"
    },
    "4358": {
      "op": "SUB"
    },
    "4359": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "AND",
      "path": "0"
    },
    "4360": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30AF"
    },
    "4363": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4364": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4365": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4366": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4367": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4368": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1118"
    },
    "4371": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4372": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4374": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4375": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4376": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4377": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "POP",
      "path": "12"
    },
    "4378": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "4381": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4383": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4384": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4385": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "SUB",
      "path": "12"
    },
    "4386": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4388": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4389": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "LT",
      "path": "12"
    },
    "4390": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4391": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x112F"
    },
    "4394": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4395": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4397": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4398": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4399": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4402": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3108"
    },
    "4405": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4406": {
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4407": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4408": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4409": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4410": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1142"
    },
    "4413": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4414": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4416": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4417": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4418": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4419": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "POP",
      "path": "12"
    },
    "4420": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A5"
    },
    "4423": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4425": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4426": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4427": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "SUB",
      "path": "12"
    },
    "4428": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4430": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4431": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "LT",
      "path": "12"
    },
    "4432": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4433": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1159"
    },
    "4436": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4437": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4439": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4440": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4441": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "offset": [
        3175,
        3201
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4444": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3124"
    },
    "4447": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "i",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4448": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4449": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4450": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4451": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4452": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x116C"
    },
    "4455": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4456": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4458": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4459": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4460": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4461": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "POP",
      "path": "5"
    },
    "4462": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x331"
    },
    "4465": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4467": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4468": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4469": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SUB",
      "path": "5"
    },
    "4470": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4472": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4473": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "LT",
      "path": "5"
    },
    "4474": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4475": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1183"
    },
    "4478": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4479": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4481": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4482": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4483": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4494": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4495": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4496": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4497": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4498": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4500": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "ADD",
      "path": "5"
    },
    "4501": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4502": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "AND",
      "path": "5"
    },
    "4503": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3131"
    },
    "4506": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4507": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4508": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "4509": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4510": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4511": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A7"
    },
    "4514": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4515": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4517": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4518": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4519": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4520": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "POP",
      "path": "5"
    },
    "4521": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63F"
    },
    "4524": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4526": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4527": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4528": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SUB",
      "path": "5"
    },
    "4529": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4531": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4532": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "LT",
      "path": "5"
    },
    "4533": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4534": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11BE"
    },
    "4537": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4538": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4540": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4541": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4542": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4549": {
      "op": "SHL"
    },
    "4550": {
      "op": "SUB"
    },
    "4551": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4552": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4553": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4554": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4555": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4556": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4558": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4559": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4560": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4561": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4562": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "AND",
      "path": "5"
    },
    "4564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4565": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4567": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4570": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4571": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4573": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4574": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4575": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4576": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4577": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4578": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4579": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4580": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4582": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4583": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4584": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "4586": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4587": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4588": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4593": {
      "op": "SHL"
    },
    "4594": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4595": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4596": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4597": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11FD"
    },
    "4600": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4601": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4603": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4605": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4607": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4609": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4611": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4612": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4613": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4614": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4615": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x120F"
    },
    "4618": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4619": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4621": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4622": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4624": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4625": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "4626": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4627": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4629": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4630": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4631": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4632": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4634": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4635": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4636": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4643": {
      "op": "SHL"
    },
    "4644": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4645": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "GT",
      "path": "5"
    },
    "4646": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "OR",
      "path": "5"
    },
    "4647": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1230"
    },
    "4651": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4652": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4655": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4657": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4658": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4659": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4660": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4661": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4663": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4667": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DIV",
      "path": "5"
    },
    "4669": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MUL",
      "path": "5"
    },
    "4670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4672": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4677": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4678": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4685": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4686": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4687": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4689": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4690": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4694": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4695": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4696": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "4699": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4701": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "ADD",
      "path": "5"
    },
    "4703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4706": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x315F"
    },
    "4714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4721": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4722": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4723": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4724": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4725": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x127D"
    },
    "4728": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4729": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4731": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4732": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4733": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4734": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "POP",
      "path": "12"
    },
    "4735": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "4738": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4740": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4741": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "4742": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "SUB",
      "path": "12"
    },
    "4743": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4745": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4746": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "LT",
      "path": "12"
    },
    "4747": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4748": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1294"
    },
    "4751": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4752": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4754": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4755": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4756": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4757": {
      "op": "POP"
    },
    "4758": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4759": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4760": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4761": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4763": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "ADD",
      "path": "12"
    },
    "4764": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "4765": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x332A"
    },
    "4768": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4769": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4770": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4771": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4772": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4773": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12AD"
    },
    "4776": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4777": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4779": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4780": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4781": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4782": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "POP",
      "path": "12"
    },
    "4783": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "4786": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x338F"
    },
    "4789": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4790": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4791": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3062,
        3069
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4799": {
      "op": "SHL"
    },
    "4800": {
      "op": "SUB"
    },
    "4801": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 0
    },
    "4802": {
      "branch": 255,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3089,
        3110
      ],
      "op": "AND",
      "path": "5"
    },
    "4803": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12FD"
    },
    "4806": {
      "branch": 255,
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4807": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4809": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4816": {
      "op": "SHL"
    },
    "4817": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4818": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4819": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4821": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4822": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4823": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4824": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4826": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4827": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4828": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4829": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4830": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4831": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4832": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4834": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4835": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4836": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4838": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4839": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4840": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AF6"
    },
    "4843": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2B"
    },
    "4845": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4846": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "4847": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4849": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "ADD",
      "path": "5"
    },
    "4850": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4851": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4852": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "POP",
      "path": "5"
    },
    "4853": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4855": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4856": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4857": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4858": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SUB",
      "path": "5"
    },
    "4859": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4860": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4861": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3081,
        3158
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x0"
    },
    "4865": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4866": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4867": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4868": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4870": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4872": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4873": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4874": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4875": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4877": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4878": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4879": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3188
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4886": {
      "op": "SHL"
    },
    "4887": {
      "op": "SUB"
    },
    "4888": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4889": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "AND",
      "path": "5"
    },
    "4890": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4891": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4892": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4893": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4894": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4895": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4896": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4897": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        3175,
        3197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4898": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4899": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4900": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4901": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4902": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2976,
        3204
      ],
      "op": "POP",
      "path": "5"
    },
    "4903": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2976,
        3204
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4904": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4911": {
      "op": "SHL"
    },
    "4912": {
      "op": "SUB"
    },
    "4913": {
      "op": "NOT"
    },
    "4914": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "4915": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "4916": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4918": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4919": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4920": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4921": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4923": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4925": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4926": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4928": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4929": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4930": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4931": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4933": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "4934": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4935": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4936": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4937": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "4938": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4939": {
      "offset": [
        1087,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4940": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "4942": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4943": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "4945": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "AND",
      "path": "12"
    },
    "4946": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1087,
        1112
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4947": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        1087,
        1112
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4948": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4949": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x4"
    },
    "4951": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4952": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4953": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4955": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4956": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4957": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4959": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4961": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4965": {
      "op": "NOT"
    },
    "4966": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4969": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4971": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4972": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "4973": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4974": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "4975": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "4976": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4977": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4978": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "4979": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4980": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4981": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4982": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "4983": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4984": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4985": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "4986": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4987": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4988": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "4989": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4990": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "4991": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4992": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "4993": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4994": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "4995": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4996": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4997": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4998": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4999": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5000": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5001": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5003": {
      "fn": "ERC1155.uri",
      "offset": [
        2791,
        2804
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5004": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5005": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5006": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5007": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5008": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5009": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5010": {
      "fn": "ERC1155.uri",
      "offset": [
        2823,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5011": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5012": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5013": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5014": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E0"
    },
    "5017": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5018": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5019": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5021": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "LT",
      "path": "5"
    },
    "5022": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B5"
    },
    "5025": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5026": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5029": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5030": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5031": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5032": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DIV",
      "path": "5"
    },
    "5033": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MUL",
      "path": "5"
    },
    "5034": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5035": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5036": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5037": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5039": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5040": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5041": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E0"
    },
    "5044": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5045": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5046": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5047": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5048": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5049": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5050": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5052": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5053": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5055": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5057": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5058": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5059": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5060": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5061": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5062": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5063": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5064": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5065": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5067": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5068": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5069": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5071": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5072": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5073": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5074": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "GT",
      "path": "5"
    },
    "5075": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13C3"
    },
    "5078": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5079": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5080": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5081": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SUB",
      "path": "5"
    },
    "5082": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5084": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "AND",
      "path": "5"
    },
    "5085": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5086": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "ADD",
      "path": "5"
    },
    "5087": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5088": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5089": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5090": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5091": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5092": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5093": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5094": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5095": {
      "fn": "ERC1155.uri",
      "offset": [
        2816,
        2827
      ],
      "op": "POP",
      "path": "5"
    },
    "5096": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5097": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5098": {
      "fn": "ERC1155.uri",
      "offset": [
        2729,
        2834
      ],
      "op": "POP",
      "path": "5"
    },
    "5099": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        2729,
        2834
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5100": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5101": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8620,
        8627
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5103": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8620,
        8627
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5104": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8659
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x6"
    },
    "5106": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8659
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5107": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5109": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8659
      ],
      "op": "AND",
      "path": "12"
    },
    "5110": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5112": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5113": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "GT",
      "path": "12"
    },
    "5114": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5115": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1400"
    },
    "5118": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5119": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5120": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5121": {
      "branch": 222,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8647,
        8679
      ],
      "op": "EQ",
      "path": "12"
    },
    "5122": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x140A"
    },
    "5125": {
      "branch": 222,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5126": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5128": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5129": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5130": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8639,
        8680
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5131": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5133": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8740,
        8752
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 5
    },
    "5134": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8740,
        8752
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5135": {
      "branch": 223,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8740,
        8775
      ],
      "op": "LT",
      "path": "12"
    },
    "5136": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1418"
    },
    "5139": {
      "branch": 223,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5140": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5142": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5143": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5144": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8732,
        8776
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5145": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8852,
        8866
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0xE"
    },
    "5147": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8852,
        8866
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5148": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8839,
        8848
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "5149": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8839,
        8866
      ],
      "op": "LT",
      "path": "12"
    },
    "5150": {
      "branch": 224,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8839,
        8866
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5151": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1427"
    },
    "5154": {
      "branch": 224,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5155": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5157": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5158": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5159": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8831,
        8867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5160": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8948,
        8949
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x0"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5168": {
      "op": "SHL"
    },
    "5169": {
      "op": "SUB"
    },
    "5170": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "AND",
      "path": "12"
    },
    "5171": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8926
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "5173": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8927,
        8935
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5174": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8927,
        8935
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5175": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5177": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5178": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5179": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5180": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5181": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5182": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5183": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5184": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5185": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5186": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5187": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5188": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "ADD",
      "path": "12"
    },
    "5189": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5190": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5191": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5192": {
      "op": "POP"
    },
    "5193": {
      "op": "POP"
    },
    "5194": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5196": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5197": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5198": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5199": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5200": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SUB",
      "path": "12"
    },
    "5201": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5203": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "ADD",
      "path": "12"
    },
    "5204": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5205": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5206": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5207": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "SUB"
    },
    "5216": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8936
      ],
      "op": "AND",
      "path": "12"
    },
    "5217": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5218": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5219": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5220": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "EQ",
      "path": "12"
    },
    "5221": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5222": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8915,
        8950
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1472"
    },
    "5227": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "branch": 225,
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5230": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5232": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5233": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5234": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8907,
        8951
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5235": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9097
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5237": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9097
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5238": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9067,
        9082
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5240": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9067,
        9082
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5241": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9104
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1483"
    },
    "5244": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5245": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9102,
        9103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5247": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "5250": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9085,
        9104
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5251": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9085,
        9104
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5252": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9154,
        9155
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x0"
    },
    "5254": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5255": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5256": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5257": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9133
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5259": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5261": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5262": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5264": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5265": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5266": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5267": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9067,
        9104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5268": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9067,
        9104
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5276": {
      "op": "SHL"
    },
    "5277": {
      "op": "SUB"
    },
    "5278": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9142
      ],
      "op": "AND",
      "path": "12"
    },
    "5279": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9121,
        9156
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5280": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9114,
        9157
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14A5"
    },
    "5283": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9114,
        9157
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5284": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9114,
        9157
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5285": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9114,
        9157
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5286": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x0"
    },
    "5288": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5289": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5290": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5291": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "5293": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5295": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5296": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5298": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5299": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9237
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5300": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9243
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5301": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9243
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5303": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9243
      ],
      "op": "AND",
      "path": "12"
    },
    "5304": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9215,
        9252
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5305": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9208,
        9253
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14BE"
    },
    "5308": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9208,
        9253
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5309": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9208,
        9253
      ],
      "op": "INVALID",
      "path": "12"
    },
    "5310": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9208,
        9253
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5311": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9363,
        9383
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5313": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9452
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x10"
    },
    "5315": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9453,
        9461
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5316": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9453,
        9461
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5317": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5319": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5320": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5321": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5322": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5323": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5324": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5325": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5326": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5327": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5328": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5329": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5330": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "ADD",
      "path": "12"
    },
    "5331": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5332": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5333": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "op": "POP"
    },
    "5336": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5338": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5339": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5340": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5341": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5342": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5343": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SUB",
      "path": "12"
    },
    "5344": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5346": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "ADD",
      "path": "12"
    },
    "5347": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5348": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5349": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5350": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5357": {
      "op": "SHL"
    },
    "5358": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5359": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5360": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5361": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5368": {
      "op": "SHL"
    },
    "5369": {
      "op": "SUB"
    },
    "5370": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5371": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5372": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "AND",
      "path": "12"
    },
    "5373": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5374": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9479
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFEAF968C"
    },
    "5379": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9479
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5380": {
      "op": "POP"
    },
    "5381": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5383": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5384": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5385": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ADD",
      "path": "12"
    },
    "5386": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5387": {
      "op": "POP"
    },
    "5388": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5390": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5391": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5392": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5393": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5394": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SUB",
      "path": "12"
    },
    "5395": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ADD",
      "path": "12"
    },
    "5396": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5397": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9441,
        9462
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5398": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5399": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5400": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5401": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5402": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5403": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1523"
    },
    "5406": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5407": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5409": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5410": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5411": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5412": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "POP",
      "path": "12"
    },
    "5413": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "GAS",
      "path": "12"
    },
    "5414": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "5415": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5416": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5417": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5418": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1537"
    },
    "5421": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5422": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5423": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5425": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5426": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5427": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5428": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5430": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5431": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5432": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "POP",
      "path": "12"
    },
    "5433": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "POP",
      "path": "12"
    },
    "5434": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "POP",
      "path": "12"
    },
    "5435": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "POP",
      "path": "12"
    },
    "5436": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5438": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5439": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5440": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5442": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5443": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "LT",
      "path": "12"
    },
    "5444": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5445": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x154D"
    },
    "5448": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5449": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5451": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5452": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5453": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5454": {
      "op": "POP"
    },
    "5455": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5457": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "ADD",
      "path": "12"
    },
    "5458": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5459": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9419,
        9481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5460": {
      "op": "POP"
    },
    "5461": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9527,
        9551
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x155C"
    },
    "5464": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9527,
        9551
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x479F"
    },
    "5467": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9527,
        9551
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5468": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9527,
        9551
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5469": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9575,
        9579
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x1"
    },
    "5471": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9561,
        9579
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5472": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9561,
        9579
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5473": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9601
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x20"
    },
    "5475": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5476": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5477": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5478": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9610
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5479": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9610
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5480": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9589,
        9610
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5481": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9633
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x40"
    },
    "5483": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9633
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5484": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9633
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5485": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9633
      ],
      "op": "ADD",
      "path": "12"
    },
    "5486": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9643
      ],
      "op": "DUP10",
      "path": "12"
    },
    "5487": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5488": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9620,
        9643
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5489": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 14
    },
    "5490": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5491": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5493": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5494": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "12"
    },
    "5495": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5496": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5497": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DIV",
      "path": "12"
    },
    "5498": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5499": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MUL",
      "path": "12"
    },
    "5500": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5501": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "12"
    },
    "5502": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5503": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "12"
    },
    "5504": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5505": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5506": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5507": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5508": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5509": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5510": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5511": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5512": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5513": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5514": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5515": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5516": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5517": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5518": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "12"
    },
    "5519": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5520": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5521": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5522": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9670,
        9678
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5523": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5524": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "5525": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5527": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5528": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "12"
    },
    "5529": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5530": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5531": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5532": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "op": "POP"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9667
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5539": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9667
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5540": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9667
      ],
      "op": "ADD",
      "path": "12"
    },
    "5541": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9653,
        9678
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5542": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 15,
      "value": "0x80"
    },
    "5544": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9707
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5545": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9707
      ],
      "op": "ADD",
      "path": "12"
    },
    "5546": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9723
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5547": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9723
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5548": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9688,
        9723
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5549": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 16,
      "value": "0x15CF"
    },
    "5552": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9764,
        9776
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B7"
    },
    "5555": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9764,
        9774
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "5558": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9764,
        9776
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5559": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9764,
        9776
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5560": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9778,
        9785
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5561": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9787,
        9788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5563": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5565": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5566": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5567": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5569": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "ADD",
      "path": "12"
    },
    "5570": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5572": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5573": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5574": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5576": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5577": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5578": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "POP",
      "path": "12"
    },
    "5579": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3624"
    },
    "5582": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9758,
        9793
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5583": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9758,
        9793
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5584": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9911,
        9923
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0x15D7"
    },
    "5587": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9911,
        9921
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "5590": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9911,
        9923
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5591": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9911,
        9923
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5592": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5594": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5595": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5596": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5597": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9899
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5599": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5601": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5602": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5603": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5604": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5606": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5607": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5608": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9908
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5609": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5610": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5617": {
      "op": "SHL"
    },
    "5618": {
      "op": "SUB"
    },
    "5619": {
      "op": "NOT"
    },
    "5620": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "AND",
      "path": "12"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "SUB"
    },
    "5629": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5630": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5631": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5632": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "AND",
      "path": "12"
    },
    "5633": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5634": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5635": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5636": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "OR",
      "path": "12"
    },
    "5637": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5638": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5639": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9887,
        9923
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5640": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9946
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x9"
    },
    "5642": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5643": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5644": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5645": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5646": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5647": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5648": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5649": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5650": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5651": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5654": {
      "op": "NOT"
    },
    "5655": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "AND",
      "path": "12"
    },
    "5656": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5657": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5658": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5659": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "OR",
      "path": "12"
    },
    "5660": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5661": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5662": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5663": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5664": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5665": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5668": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5669": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5670": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5671": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5672": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5673": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5674": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5675": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5677": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5678": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5679": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5680": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5682": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5683": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5684": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5685": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5686": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5687": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5688": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5689": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9955
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5690": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x164A"
    },
    "5693": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5694": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "5696": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5697": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5698": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5699": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5700": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5701": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5702": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47D0"
    },
    "5705": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        9933,
        9963
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5706": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "5710": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5711": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5712": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5713": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5714": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5715": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5717": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5718": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5719": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "ADD",
      "path": "12"
    },
    "5720": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        9933,
        9963
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5721": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10036
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x7"
    },
    "5723": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10036
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5724": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1666"
    },
    "5727": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10043
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5728": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10041,
        10042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5730": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10040
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "5733": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10024,
        10043
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5734": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10024,
        10043
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5735": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10009,
        10021
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5737": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10009,
        10043
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5738": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10108,
        10122
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0xE"
    },
    "5740": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10108,
        10122
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5741": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10094,
        10123
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1675"
    },
    "5744": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10094,
        10123
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5745": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10094,
        10107
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x372C"
    },
    "5748": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10094,
        10123
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5749": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10094,
        10123
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5750": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 21,
      "value": "0x3560F0337E62819199860BA21B425B8BDE9A01FA6E514DD58AB6EDF7DAF1D1F1"
    },
    "5783": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10157,
        10164
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5784": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10166,
        10178
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x169F"
    },
    "5787": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10166,
        10176
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "5790": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "i",
      "offset": [
        10166,
        10178
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5791": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10166,
        10178
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5792": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5794": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5795": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5796": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5797": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5798": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5805": {
      "op": "SHL"
    },
    "5806": {
      "op": "SUB"
    },
    "5807": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5808": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5809": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "AND",
      "path": "12"
    },
    "5810": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5812": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5813": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "ADD",
      "path": "12"
    },
    "5814": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5815": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5816": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5817": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5818": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5819": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5820": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SUB",
      "path": "12"
    },
    "5821": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "ADD",
      "path": "12"
    },
    "5822": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5823": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10139,
        10179
      ],
      "op": "LOG1",
      "path": "12"
    },
    "5824": {
      "op": "POP"
    },
    "5825": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10197,
        10204
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 22
    },
    "5826": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        10197,
        10204
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5827": {
      "fn": "CryptoChampions.mintElderSpirit",
      "offset": [
        8471,
        10211
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "op": "POP"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "fn": "CryptoChampions.mintElderSpirit",
      "jump": "o",
      "offset": [
        8471,
        10211
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5835": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5836": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23428,
        23432
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5838": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23446,
        23453
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5839": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23467,
        23474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5841": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23488,
        23501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5843": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23515,
        23521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5845": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23389,
        23396
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5846": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5848": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5849": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "5850": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5851": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5852": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16E6"
    },
    "5855": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5856": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "5857": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5859": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5860": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "5861": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5862": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5863": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16EF"
    },
    "5866": {
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5867": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5869": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5870": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5871": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5872": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23576
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16F7"
    },
    "5875": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23576
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x479F"
    },
    "5878": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "i",
      "offset": [
        23546,
        23576
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5879": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23576
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5880": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5882": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5883": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5884": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5885": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23592
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "5887": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5889": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5890": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5891": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5892": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5894": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5895": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5896": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5897": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5898": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5899": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5900": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5902": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5903": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5904": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5905": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5906": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5907": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5908": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5910": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "AND",
      "path": "12"
    },
    "5911": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5912": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5913": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5914": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5915": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5917": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5918": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5919": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5920": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5921": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5922": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5923": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5924": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5925": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5927": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5928": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5929": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5930": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5931": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5932": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5933": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5934": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5935": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "5937": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5938": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5939": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5940": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5941": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5942": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5943": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "5946": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5947": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5948": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "AND",
      "path": "12"
    },
    "5949": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5950": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5951": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5952": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5953": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MUL",
      "path": "12"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5956": {
      "op": "NOT"
    },
    "5957": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5958": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "AND",
      "path": "12"
    },
    "5959": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5960": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5961": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5962": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DIV",
      "path": "12"
    },
    "5963": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5965": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5966": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5967": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5968": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5969": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DIV",
      "path": "12"
    },
    "5970": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5971": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MUL",
      "path": "12"
    },
    "5972": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5973": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5974": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5975": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5976": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5977": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "5978": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5979": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5980": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5981": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5982": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5983": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "5984": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5985": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23579,
        23601
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5986": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5988": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5989": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5990": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5991": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5992": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5993": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5994": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5995": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5996": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "5997": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5998": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5999": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6000": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6001": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17BB"
    },
    "6004": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6005": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6006": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6008": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "LT",
      "path": "12"
    },
    "6009": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1790"
    },
    "6012": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6013": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6016": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6017": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6018": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6019": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DIV",
      "path": "12"
    },
    "6020": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MUL",
      "path": "12"
    },
    "6021": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6022": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6023": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6024": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6026": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6027": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6028": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17BB"
    },
    "6031": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6032": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6033": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6034": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6035": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6036": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6037": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6039": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6040": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6042": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6044": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6045": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6046": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6047": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6048": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6049": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6050": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6051": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6052": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6054": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6055": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6056": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6058": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6059": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6060": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6061": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "GT",
      "path": "12"
    },
    "6062": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x179E"
    },
    "6065": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6066": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6067": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6068": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SUB",
      "path": "12"
    },
    "6069": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6071": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "AND",
      "path": "12"
    },
    "6072": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6073": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6074": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6075": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "POP"
    },
    "6078": {
      "op": "POP"
    },
    "6079": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6080": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6081": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6082": {
      "op": "POP"
    },
    "6083": {
      "op": "POP"
    },
    "6084": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6086": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6087": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6088": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6089": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6090": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6091": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6093": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6094": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6095": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "ADD",
      "path": "12"
    },
    "6096": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23546,
        23601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6097": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23632,
        23649
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 23
    },
    "6098": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23632,
        23649
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6099": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6100": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6101": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "ADD",
      "path": "12"
    },
    "6102": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6103": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23695,
        23714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6105": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23695,
        23714
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6106": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23695,
        23714
      ],
      "op": "ADD",
      "path": "12"
    },
    "6107": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23695,
        23714
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6108": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6110": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6111": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "ADD",
      "path": "12"
    },
    "6112": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6113": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "6115": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6116": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6117": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "ADD",
      "path": "12"
    },
    "6118": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6119": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23632,
        23649
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6120": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23632,
        23649
      ],
      "op": "SWAP13",
      "path": "12"
    },
    "6121": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6122": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23663,
        23681
      ],
      "op": "SWAP12",
      "path": "12"
    },
    "6123": {
      "op": "POP"
    },
    "6124": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23695,
        23714
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6127": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23728,
        23748
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23762,
        23787
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "6130": {
      "op": "POP"
    },
    "6131": {
      "fn": "CryptoChampions.getElderSpirit",
      "offset": [
        23272,
        23804
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "op": "POP"
    },
    "6134": {
      "op": "POP"
    },
    "6135": {
      "op": "POP"
    },
    "6136": {
      "fn": "CryptoChampions.getElderSpirit",
      "jump": "o",
      "offset": [
        23272,
        23804
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6137": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6138": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4339,
        4346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6140": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 24
    },
    "6141": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6142": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6143": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6145": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6146": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6147": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6148": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6150": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6151": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6152": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6154": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "ADD",
      "path": "0"
    },
    "6155": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6156": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4365,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6157": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4282,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6158": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6159": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27706,
        27713
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6161": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27743
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0x10"
    },
    "6163": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27744,
        27752
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6164": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27744,
        27752
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6165": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6167": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6168": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6169": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6170": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6171": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6172": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6173": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6174": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "6175": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6176": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6177": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6178": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "ADD",
      "path": "12"
    },
    "6179": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6180": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6181": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6182": {
      "op": "POP"
    },
    "6183": {
      "op": "POP"
    },
    "6184": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6186": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6187": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6188": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6189": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6190": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SUB",
      "path": "12"
    },
    "6191": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6193": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "ADD",
      "path": "12"
    },
    "6194": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6195": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6196": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6197": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6204": {
      "op": "SHL"
    },
    "6205": {
      "op": "SUB"
    },
    "6206": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "AND",
      "path": "12"
    },
    "6207": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27732,
        27753
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6208": {
      "op": "POP"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6212": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6213": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "POP",
      "path": "12"
    },
    "6214": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "offset": [
        27616,
        27760
      ],
      "op": "POP",
      "path": "12"
    },
    "6215": {
      "fn": "CryptoChampions.getAffinityFeedAddress",
      "jump": "o",
      "offset": [
        27616,
        27760
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6216": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6217": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19587,
        19593
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6218": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "6220": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6221": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "6222": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1856"
    },
    "6225": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6226": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6228": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6229": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6230": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6231": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6233": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6234": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6235": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6236": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "6238": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6240": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6241": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6243": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6244": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6245": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6246": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "6248": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "6249": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1871"
    },
    "6252": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6253": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6255": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6256": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6257": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6258": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 26,
      "value": "0x0"
    },
    "6260": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6261": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6262": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6263": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "6265": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6267": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6268": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6270": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6271": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19628
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6272": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19634
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6273": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "6275": {
      "branch": 226,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19613,
        19634
      ],
      "op": "AND",
      "path": "12"
    },
    "6276": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x188C"
    },
    "6279": {
      "branch": 226,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6280": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6282": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6283": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6284": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19605,
        19635
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6285": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19722,
        19734
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 27,
      "value": "0x1894"
    },
    "6288": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19722,
        19732
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "6291": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19722,
        19734
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6292": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19722,
        19734
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6293": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6295": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6296": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6297": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6298": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19710
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6300": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6302": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6303": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6305": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6306": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6307": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6314": {
      "op": "SHL"
    },
    "6315": {
      "op": "SUB"
    },
    "6316": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6317": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6318": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19718
      ],
      "op": "AND",
      "path": "12"
    },
    "6319": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19734
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6320": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19734
      ],
      "op": "AND",
      "path": "12"
    },
    "6321": {
      "branch": 227,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19699,
        19734
      ],
      "op": "EQ",
      "path": "12"
    },
    "6322": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18BA"
    },
    "6325": {
      "branch": 227,
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6326": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6328": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6329": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6330": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19691,
        19735
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6331": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x0"
    },
    "6333": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6334": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6335": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6336": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19807
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6338": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6340": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6341": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6343": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6344": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6345": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6346": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19790,
        19827
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18DE"
    },
    "6349": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19790,
        19827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6356": {
      "op": "SHL"
    },
    "6357": {
      "op": "SUB"
    },
    "6358": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "AND",
      "path": "12"
    },
    "6359": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19808,
        19814
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6360": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19796,
        19815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6362": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19790,
        19795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x379D"
    },
    "6365": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        19790,
        19827
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6366": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19790,
        19827
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6367": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19901,
        19916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6369": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6370": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6371": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6372": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19926
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "6374": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6376": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6377": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6378": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6379": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6381": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6382": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6383": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19934
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6384": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19942
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6386": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19942
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6387": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19942
      ],
      "op": "ADD",
      "path": "12"
    },
    "6388": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19919,
        19942
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6389": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19972,
        19999
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6391": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19972,
        19999
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6392": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19972,
        19999
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6393": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19972,
        19999
      ],
      "op": "ADD",
      "path": "12"
    },
    "6394": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19972,
        19999
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6395": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 29
    },
    "6396": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6397": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6398": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20066
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "6400": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6401": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6402": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6403": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6404": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20077
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6405": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6406": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6407": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6408": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6409": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6410": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6411": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6412": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6413": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20086
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6414": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1918"
    },
    "6417": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20093
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6418": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20091,
        20092
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6420": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20090
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38D0"
    },
    "6423": {
      "fn": "CryptoChampions.burnHero",
      "jump": "i",
      "offset": [
        20049,
        20093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6424": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20049,
        20093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6425": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6427": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6428": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6429": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6430": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "6432": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6434": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6435": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6436": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6437": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6439": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6440": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6441": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20037
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6442": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6443": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6444": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6445": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6446": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6447": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6448": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6449": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20046
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6450": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20093
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6451": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20093
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6452": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20093
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6453": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20009,
        20093
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6454": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 30
    },
    "6455": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6456": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6457": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20156
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6459": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6460": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6461": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6462": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6463": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20164
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6464": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20177
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6465": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20177
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6472": {
      "op": "SHL"
    },
    "6473": {
      "op": "SUB"
    },
    "6474": {
      "op": "NOT"
    },
    "6475": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20177
      ],
      "op": "AND",
      "path": "12"
    },
    "6476": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20177
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6477": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20145,
        20177
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6478": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20194
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 31,
      "value": "0xC"
    },
    "6480": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6481": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6482": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6483": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6484": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6485": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20202
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6486": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20216
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6487": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20216
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6490": {
      "op": "NOT"
    },
    "6491": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20216
      ],
      "op": "AND",
      "path": "12"
    },
    "6492": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20216
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6493": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20187,
        20216
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6494": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 32
    },
    "6495": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6496": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6497": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6498": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6499": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6500": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6501": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x76126F33D318ABE88F8B82C5136B7E5A52091AB897679A40F612D7590ADFC997"
    },
    "6534": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6535": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6536": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6537": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SUB",
      "path": "12"
    },
    "6538": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6539": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6540": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "ADD",
      "path": "12"
    },
    "6541": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6542": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        20232,
        20250
      ],
      "op": "LOG1",
      "path": "12"
    },
    "6543": {
      "offset": [
        5897,
        5898
      ],
      "op": "POP",
      "path": "12"
    },
    "6544": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        5897,
        5898
      ],
      "op": "POP",
      "path": "12"
    },
    "6545": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "POP",
      "path": "12"
    },
    "6546": {
      "fn": "CryptoChampions.burnHero",
      "offset": [
        19523,
        20257
      ],
      "op": "POP",
      "path": "12"
    },
    "6547": {
      "fn": "CryptoChampions.burnHero",
      "jump": "o",
      "offset": [
        19523,
        20257
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6548": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6549": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5795
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 33
    },
    "6550": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5788,
        5802
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6551": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5777
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6552": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6553": {
      "branch": 256,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5774,
        5802
      ],
      "op": "EQ",
      "path": "5"
    },
    "6554": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19D4"
    },
    "6557": {
      "branch": 256,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6558": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6560": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6567": {
      "op": "SHL"
    },
    "6568": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6569": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6570": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6572": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6573": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6574": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6575": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6577": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6578": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6579": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6580": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6581": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6582": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6583": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6585": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6586": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6587": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6589": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6590": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6591": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CD5"
    },
    "6594": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "6596": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6597": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6598": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6600": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "ADD",
      "path": "5"
    },
    "6601": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6602": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6603": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "POP",
      "path": "5"
    },
    "6604": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6606": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6607": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6608": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6609": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SUB",
      "path": "5"
    },
    "6610": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6611": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6612": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5766,
        5847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6619": {
      "op": "SHL"
    },
    "6620": {
      "op": "SUB"
    },
    "6621": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 34
    },
    "6622": {
      "branch": 257,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5865,
        5881
      ],
      "op": "AND",
      "path": "5"
    },
    "6623": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A19"
    },
    "6626": {
      "branch": 257,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6627": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6629": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6636": {
      "op": "SHL"
    },
    "6637": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6638": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6639": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6641": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6642": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6643": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6644": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6646": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6647": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6648": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6649": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6650": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6651": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6652": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6654": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6655": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6656": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6658": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6659": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6660": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B9E"
    },
    "6663": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "6665": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6666": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6667": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6669": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "ADD",
      "path": "5"
    },
    "6670": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6671": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6672": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "POP",
      "path": "5"
    },
    "6673": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6675": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6676": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6677": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6678": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SUB",
      "path": "5"
    },
    "6679": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6680": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6681": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5857,
        5923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6682": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 35,
      "value": "0x1A21"
    },
    "6685": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "6688": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6689": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5962,
        5974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "op": "SUB"
    },
    "6698": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6699": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5958
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6706": {
      "op": "SHL"
    },
    "6707": {
      "op": "SUB"
    },
    "6708": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "AND",
      "path": "5"
    },
    "6709": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        5974
      ],
      "op": "EQ",
      "path": "5"
    },
    "6710": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6711": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4C"
    },
    "6714": {
      "branch": 258,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6715": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5954,
        6014
      ],
      "op": "POP",
      "path": "5"
    },
    "6716": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4C"
    },
    "6719": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5995,
        5999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6720": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A47"
    },
    "6723": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6011
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "6726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6727": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6001,
        6013
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6728": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        5994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3131"
    },
    "6731": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6732": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5978,
        6014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A87"
    },
    "6736": {
      "branch": 259,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6739": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6746": {
      "op": "SHL"
    },
    "6747": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6748": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6752": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6753": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6756": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6757": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6758": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6759": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6760": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6761": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6762": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6764": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6765": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6766": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6768": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6769": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6770": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BC3"
    },
    "6773": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "6775": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6776": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6779": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "ADD",
      "path": "5"
    },
    "6780": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6781": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6782": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "POP",
      "path": "5"
    },
    "6783": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6785": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SUB",
      "path": "5"
    },
    "6789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5933,
        6090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6792": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6117
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6794": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A91"
    },
    "6797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "6800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6801": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6120,
        6132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6802": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6803": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6101,
        6132
      ],
      "op": "POP",
      "path": "5"
    },
    "6804": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0x1AA1"
    },
    "6807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6164,
        6172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6808": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6174,
        6178
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6809": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6180,
        6182
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6184,
        6187
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6189,
        6196
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6198,
        6202
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392D"
    },
    "6816": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6817": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6143,
        6203
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6818": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6219,
        6228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6241
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6238,
        6248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6823": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6234,
        6248
      ],
      "op": "LT",
      "path": "5"
    },
    "6825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BA7"
    },
    "6829": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6832": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6285
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6286,
        6287
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6835": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6837": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "LT",
      "path": "5"
    },
    "6838": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ABB"
    },
    "6841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6842": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6843": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MUL",
      "path": "5"
    },
    "6847": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6850": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "ADD",
      "path": "5"
    },
    "6851": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6282,
        6288
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6853": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6269,
        6288
      ],
      "op": "POP",
      "path": "5"
    },
    "6854": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6316
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6856": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6326
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6857": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6327,
        6328
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6861": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "LT",
      "path": "5"
    },
    "6862": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD3"
    },
    "6865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6866": {
      "dev": "Index out of range",
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6870": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MUL",
      "path": "5"
    },
    "6871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6319,
        6329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6876": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6877": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6302,
        6329
      ],
      "op": "POP",
      "path": "5"
    },
    "6878": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 37,
      "value": "0x1B40"
    },
    "6881": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6407,
        6413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6882": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6884": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6885": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6886": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6889": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6891": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6892": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6893": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6895": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6896": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6897": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6899": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "ADD",
      "path": "5"
    },
    "6900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C38"
    },
    "6903": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6906": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6911": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6376,
        6378
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6918": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6919": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "6923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6380,
        6384
      ],
      "op": "DUP14",
      "path": "5"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6935": {
      "op": "SHL"
    },
    "6936": {
      "op": "SUB"
    },
    "6937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6944": {
      "op": "SHL"
    },
    "6945": {
      "op": "SUB"
    },
    "6946": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "AND",
      "path": "5"
    },
    "6947": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6948": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6949": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6951": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "6952": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6953": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6954": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "ADD",
      "path": "5"
    },
    "6958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6960": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6961": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6385
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A3F"
    },
    "6965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6968": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "6974": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "AND",
      "path": "5"
    },
    "6975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6366,
        6489
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6977": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6979": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6980": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6984": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6987": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6988": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6989": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6991": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6992": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6993": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6357
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7000": {
      "op": "SHL"
    },
    "7001": {
      "op": "SUB"
    },
    "7002": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP15",
      "path": "5"
    },
    "7003": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7004": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "AND",
      "path": "5"
    },
    "7005": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7006": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7007": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7008": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7009": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7010": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7011": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6363
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7012": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7013": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7014": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6344,
        6489
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7016": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP11",
      "path": "5",
      "statement": 38
    },
    "7017": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "AND",
      "path": "5"
    },
    "7018": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7021": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6540
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7022": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B77"
    },
    "7025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6545,
        6551
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C6"
    },
    "7030": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6523,
        6552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7032": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7034": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7035": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7036": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7037": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7039": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7041": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7042": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7043": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7044": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7046": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7047": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7048": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6516
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7055": {
      "op": "SHL"
    },
    "7056": {
      "op": "SUB"
    },
    "7057": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP13",
      "path": "5"
    },
    "7058": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "5"
    },
    "7059": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7060": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7061": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7062": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7063": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7064": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7065": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7066": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6520
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7067": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7068": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7069": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7070": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6503,
        6552
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7071": {
      "op": "POP"
    },
    "7072": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x1"
    },
    "7074": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6250,
        6253
      ],
      "op": "ADD",
      "path": "5"
    },
    "7075": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA4"
    },
    "7078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7079": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7080": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6214,
        6563
      ],
      "op": "POP",
      "path": "5"
    },
    "7081": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6608,
        6610
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 40
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7088": {
      "op": "SHL"
    },
    "7089": {
      "op": "SUB"
    },
    "7090": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7091": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6602,
        6606
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7098": {
      "op": "SHL"
    },
    "7099": {
      "op": "SUB"
    },
    "7100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7101": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6592,
        6600
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7108": {
      "op": "SHL"
    },
    "7109": {
      "op": "SUB"
    },
    "7110": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "AND",
      "path": "5"
    },
    "7111": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "7144": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6612,
        6615
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7145": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6617,
        6624
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7146": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7148": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7149": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7150": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7151": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7153": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7154": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7155": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7157": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7158": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7159": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7160": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7161": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7162": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7163": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7164": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7166": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7167": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7168": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7169": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7171": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7172": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7173": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7174": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7175": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7176": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7177": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7179": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7180": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7181": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7183": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7184": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7185": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7186": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7187": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7189": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7190": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7191": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7192": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7193": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7194": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C2D"
    },
    "7197": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7198": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7199": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7200": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7201": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7202": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7203": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7204": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7205": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7206": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7208": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7209": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C15"
    },
    "7212": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7213": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7214": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7215": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7216": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7217": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7218": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7219": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7220": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7222": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7224": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7227": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7229": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7231": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7234": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7235": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7236": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7238": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7239": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7240": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7243": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MUL",
      "path": "5"
    },
    "7247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7250": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7254": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LT",
      "path": "5"
    },
    "7256": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7257": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C6C"
    },
    "7260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7261": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7262": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7266": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7267": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7268": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7269": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7271": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7272": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C54"
    },
    "7275": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7276": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7277": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7278": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7279": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7280": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7281": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7283": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "5"
    },
    "7284": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7286": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7287": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7288": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7289": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "POP",
      "path": "5"
    },
    "7290": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7292": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7293": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7294": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "5"
    },
    "7296": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7297": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6578,
        6625
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7298": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 41,
      "value": "0x1C8F"
    },
    "7301": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6672,
        6680
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7302": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6682,
        6686
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7303": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6688,
        6690
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6692,
        6695
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7305": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6697,
        6704
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7306": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6706,
        6710
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7307": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AD6"
    },
    "7310": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7311": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        6636,
        6711
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7313": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7314": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7315": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7316": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7317": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        5534,
        6718
      ],
      "op": "POP",
      "path": "5"
    },
    "7318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        5534,
        6718
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7319": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7320": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24099,
        24103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7322": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24126,
        24139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7324": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24165,
        24171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7326": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24203,
        24210
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7327": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24240,
        24247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7329": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24061,
        24067
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7330": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7332": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7333": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "7334": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CAE"
    },
    "7337": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7338": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7340": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7341": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7342": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7343": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7345": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7346": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7347": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7348": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "7350": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7352": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7353": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7355": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7356": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7357": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7358": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7360": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "7361": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CC9"
    },
    "7364": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7365": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7367": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7368": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7369": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7370": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 42,
      "value": "0x0"
    },
    "7372": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7373": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7374": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7375": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24312
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "7377": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7379": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7380": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7381": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7382": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7384": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7385": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7386": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7387": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24320
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7388": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7389": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7390": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "7392": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7393": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "ADD",
      "path": "12"
    },
    "7394": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7395": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7397": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7398": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "ADD",
      "path": "12"
    },
    "7399": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7400": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7402": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7403": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "ADD",
      "path": "12"
    },
    "7404": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7405": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7407": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7408": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7409": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "ADD",
      "path": "12"
    },
    "7410": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7411": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7412": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7413": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7414": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7417": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7419": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7420": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "AND",
      "path": "12"
    },
    "7421": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7422": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MUL",
      "path": "12"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7425": {
      "op": "NOT"
    },
    "7426": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7427": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7428": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7429": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "AND",
      "path": "12"
    },
    "7430": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7431": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7432": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7433": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DIV",
      "path": "12"
    },
    "7434": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7436": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7437": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7438": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7439": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7440": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DIV",
      "path": "12"
    },
    "7441": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7442": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MUL",
      "path": "12"
    },
    "7443": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7444": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7445": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7446": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7447": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7448": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "7449": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7450": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7451": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7452": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7453": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7455": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7456": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7457": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "AND",
      "path": "12"
    },
    "7458": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24305,
        24326
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7459": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7460": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7461": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7462": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24378,
        24407
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7463": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7464": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24421,
        24448
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7465": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7466": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24462,
        24485
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7467": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7468": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7469": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7470": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7471": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7472": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24340,
        24364
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7473": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7474": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7475": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7476": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D7E"
    },
    "7479": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7480": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7481": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7483": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "LT",
      "path": "12"
    },
    "7484": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D53"
    },
    "7487": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7488": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7491": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7492": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7493": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7494": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DIV",
      "path": "12"
    },
    "7495": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MUL",
      "path": "12"
    },
    "7496": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7497": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7498": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7499": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7501": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7502": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7503": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D7E"
    },
    "7506": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7507": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7508": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7509": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7510": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7511": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7512": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7514": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7515": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7517": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7519": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7520": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7521": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7522": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7523": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7524": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7525": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7526": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7527": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7529": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7530": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7531": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7533": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7534": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7535": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7536": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "GT",
      "path": "12"
    },
    "7537": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D61"
    },
    "7540": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7541": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7542": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7543": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SUB",
      "path": "12"
    },
    "7544": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7546": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "AND",
      "path": "12"
    },
    "7547": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7548": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "ADD",
      "path": "12"
    },
    "7549": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7550": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7551": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7552": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7553": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7554": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7555": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7556": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7557": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7558": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7559": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7560": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7561": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7562": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7563": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7564": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7565": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7566": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7567": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        24284,
        24495
      ],
      "op": "POP",
      "path": "12"
    },
    "7568": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "POP",
      "path": "12"
    },
    "7569": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7570": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7571": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7572": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7573": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7574": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7575": {
      "fn": "CryptoChampions.getHeroGameData",
      "offset": [
        23953,
        24502
      ],
      "op": "POP",
      "path": "12"
    },
    "7576": {
      "fn": "CryptoChampions.getHeroGameData",
      "jump": "o",
      "offset": [
        23953,
        24502
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7577": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7578": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DB0"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7583": {
      "op": "DUP1"
    },
    "7584": {
      "op": "MLOAD"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7587": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "7590": {
      "op": "DUP4"
    },
    "7591": {
      "op": "CODECOPY"
    },
    "7592": {
      "op": "DUP2"
    },
    "7593": {
      "op": "MLOAD"
    },
    "7594": {
      "op": "SWAP2"
    },
    "7595": {
      "op": "MSTORE"
    },
    "7596": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "7599": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7600": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7601": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "POP",
      "path": "12"
    },
    "7602": {
      "fn": "CryptoChampions.disburseRewards",
      "offset": [
        18084,
        18172
      ],
      "op": "POP",
      "path": "12"
    },
    "7603": {
      "fn": "CryptoChampions.disburseRewards",
      "jump": "o",
      "offset": [
        18084,
        18172
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7604": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4644,
        4867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7605": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x0"
    },
    "7607": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7608": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7609": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7610": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7612": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7613": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7614": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7615": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7617": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7618": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7619": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7621": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "ADD",
      "path": "0"
    },
    "7622": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7623": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD7"
    },
    "7626": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7627": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD2"
    },
    "7630": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "7633": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7634": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4759,
        4771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7635": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2943"
    },
    "7638": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7639": {
      "branch": 250,
      "fn": "AccessControl.grantRole",
      "offset": [
        4727,
        4772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7640": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E12"
    },
    "7643": {
      "branch": 250,
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7644": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7646": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7653": {
      "op": "SHL"
    },
    "7654": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7655": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7656": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7658": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7659": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7660": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7661": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7663": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7664": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7665": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7666": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7667": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7668": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7669": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7671": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7672": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7673": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7675": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7676": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7677": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC7"
    },
    "7680": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7682": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7683": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7684": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7686": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "ADD",
      "path": "0"
    },
    "7687": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7688": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7689": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "POP",
      "path": "0"
    },
    "7690": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7692": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7693": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7694": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7695": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SUB",
      "path": "0"
    },
    "7696": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7697": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7698": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4719,
        4824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7699": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1DB0"
    },
    "7702": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4846,
        4850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7703": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4852,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7704": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4835,
        4845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D5F"
    },
    "7707": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4835,
        4860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7708": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5818,
        6023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7709": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x1E24"
    },
    "7712": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "7715": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7716": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5915,
        5927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "op": "SUB"
    },
    "7725": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7726": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7733": {
      "op": "SHL"
    },
    "7734": {
      "op": "SUB"
    },
    "7735": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "AND",
      "path": "0"
    },
    "7736": {
      "branch": 251,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5904,
        5927
      ],
      "op": "EQ",
      "path": "0"
    },
    "7737": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E73"
    },
    "7740": {
      "branch": 251,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7741": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7743": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7750": {
      "op": "SHL"
    },
    "7751": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7752": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7753": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7755": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7756": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7757": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7758": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7760": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7761": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7762": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7763": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7764": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7765": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7766": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7768": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7769": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7770": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7772": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7773": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7774": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D1E"
    },
    "7777": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2F"
    },
    "7779": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7780": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "7781": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7783": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "ADD",
      "path": "0"
    },
    "7784": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7785": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7786": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "POP",
      "path": "0"
    },
    "7787": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7789": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7790": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7791": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7792": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SUB",
      "path": "0"
    },
    "7793": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7794": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7795": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5896,
        5979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7796": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6016
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x1DB0"
    },
    "7799": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6002,
        6006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7800": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        6008,
        6015
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7801": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5990,
        6001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC8"
    },
    "7804": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5990,
        6016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7805": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7806": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24776,
        24789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7808": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24811,
        24818
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7810": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24843,
        24850
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7811": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24876,
        24883
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7813": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24738,
        24744
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7814": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7816": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7817": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "7818": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E92"
    },
    "7821": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7822": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7824": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7825": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7826": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7827": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7829": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7830": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7831": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7832": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "7834": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7836": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7837": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7839": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7840": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7841": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7842": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7844": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "7845": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EAD"
    },
    "7848": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7849": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7851": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7852": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7853": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7854": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 47,
      "value": "0x0"
    },
    "7856": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7857": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7858": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7859": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24937
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "7861": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7863": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7864": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7865": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7866": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7868": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7869": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7870": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7871": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24945
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7872": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "7874": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7875": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "ADD",
      "path": "12"
    },
    "7876": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7877": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "7879": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7880": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "ADD",
      "path": "12"
    },
    "7881": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7882": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7884": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7885": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "ADD",
      "path": "12"
    },
    "7886": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7887": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7889": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7890": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7891": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "ADD",
      "path": "12"
    },
    "7892": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7893": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7894": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7895": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7896": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7898": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "7899": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7900": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "AND",
      "path": "12"
    },
    "7901": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7902": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7905": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MUL",
      "path": "12"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7908": {
      "op": "NOT"
    },
    "7909": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7910": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7911": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7912": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "AND",
      "path": "12"
    },
    "7913": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7914": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7915": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7916": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DIV",
      "path": "12"
    },
    "7917": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7919": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7920": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7921": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7922": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7923": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DIV",
      "path": "12"
    },
    "7924": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7925": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MUL",
      "path": "12"
    },
    "7926": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7927": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7928": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7929": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7930": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7931": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "7932": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7933": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7934": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7935": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7936": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "7937": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7938": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24952,
        24974
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7939": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7940": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24976,
        24999
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7941": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7942": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        25001,
        25027
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7943": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7944": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7945": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7946": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7947": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7948": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7949": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7950": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24930,
        24950
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7951": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7952": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7953": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7954": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F5C"
    },
    "7957": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7958": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7959": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7961": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "LT",
      "path": "12"
    },
    "7962": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F31"
    },
    "7965": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7966": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "7969": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7970": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7971": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7972": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DIV",
      "path": "12"
    },
    "7973": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MUL",
      "path": "12"
    },
    "7974": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7975": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7976": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7977": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7979": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7980": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7981": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F5C"
    },
    "7984": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7985": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7986": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7987": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "7988": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7989": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7990": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7992": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7993": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7995": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7997": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7998": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7999": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8000": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8001": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8002": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8003": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8004": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8005": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8007": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "8008": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8009": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8011": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "8012": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8013": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8014": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "GT",
      "path": "12"
    },
    "8015": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F3F"
    },
    "8018": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8019": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8020": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8021": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SUB",
      "path": "12"
    },
    "8022": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8024": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "AND",
      "path": "12"
    },
    "8025": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8026": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "ADD",
      "path": "12"
    },
    "8027": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8028": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8029": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8030": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8031": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8032": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8033": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8034": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8035": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8036": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "8037": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8038": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "8039": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8040": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "8041": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8042": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "8043": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24922,
        25028
      ],
      "op": "POP",
      "path": "12"
    },
    "8044": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "8045": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8046": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8047": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "POP",
      "path": "12"
    },
    "8048": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8049": {
      "fn": "CryptoChampions.getHeroVisuals",
      "offset": [
        24631,
        25035
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8050": {
      "fn": "CryptoChampions.getHeroVisuals",
      "jump": "o",
      "offset": [
        24631,
        25035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8051": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8052": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26414,
        26421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8054": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26444,
        26451
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8055": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26471,
        26478
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8057": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26500,
        26507
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8058": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26376,
        26382
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8059": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8061": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8062": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "8063": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F87"
    },
    "8066": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8067": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8069": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8070": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8071": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8072": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8074": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8075": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8076": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8077": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "8079": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8081": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8082": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8084": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8085": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8086": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8087": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8089": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "8090": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FA2"
    },
    "8093": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8094": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8096": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8097": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8098": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8099": {
      "op": "POP"
    },
    "8100": {
      "op": "POP"
    },
    "8101": {
      "op": "POP"
    },
    "8102": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 48,
      "value": "0x0"
    },
    "8104": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8105": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8106": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8107": {
      "op": "POP"
    },
    "8108": {
      "op": "POP"
    },
    "8109": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26558
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "8111": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8113": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8114": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8116": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8117": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26566
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8118": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "8120": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8121": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "ADD",
      "path": "12"
    },
    "8122": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8123": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "8125": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8126": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "ADD",
      "path": "12"
    },
    "8127": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8128": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26594,
        26614
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "8130": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26594,
        26614
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8131": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26594,
        26614
      ],
      "op": "ADD",
      "path": "12"
    },
    "8132": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26594,
        26614
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8133": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "8135": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8136": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8137": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "ADD",
      "path": "12"
    },
    "8138": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8139": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8140": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26551,
        26572
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8141": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8142": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26574,
        26592
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8143": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26594,
        26614
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8144": {
      "fn": "CryptoChampions.getHeroVitals",
      "offset": [
        26616,
        26639
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8145": {
      "fn": "CryptoChampions.getHeroVitals",
      "jump": "o",
      "offset": [
        26270,
        26647
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8146": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8147": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10931,
        10938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10905,
        10912
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8150": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8152": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8153": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "8154": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE6"
    },
    "8159": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8160": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "8161": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8163": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8164": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "8165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8166": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8167": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FEF"
    },
    "8170": {
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8171": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8174": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8175": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8176": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10978,
        10993
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 49,
      "value": "0x1"
    },
    "8178": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "8180": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10974
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8181": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10974
      ],
      "op": "AND",
      "path": "12"
    },
    "8184": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8187": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "GT",
      "path": "12"
    },
    "8188": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2002"
    },
    "8192": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "INVALID",
      "path": "12"
    },
    "8194": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8195": {
      "branch": 228,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10962,
        10993
      ],
      "op": "EQ",
      "path": "12"
    },
    "8196": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x200C"
    },
    "8199": {
      "branch": 228,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8202": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8203": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8204": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10954,
        10994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 50,
      "value": "0x0"
    },
    "8207": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8209": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8210": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11063
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "8212": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8214": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8215": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8217": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8218": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11072
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11078
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8220": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8222": {
      "branch": 229,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11050,
        11078
      ],
      "op": "AND",
      "path": "12"
    },
    "8223": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2027"
    },
    "8226": {
      "branch": 229,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8227": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8229": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11042,
        11079
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8232": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11149,
        11170
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 51,
      "value": "0x2030"
    },
    "8235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11162,
        11169
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8236": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11149,
        11161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E31"
    },
    "8239": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11149,
        11170
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8240": {
      "branch": 230,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11149,
        11170
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2039"
    },
    "8244": {
      "branch": 230,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8245": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8247": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8248": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8249": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11141,
        11171
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8250": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11241,
        11258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8252": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11261,
        11300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2047"
    },
    "8255": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11278,
        11290
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "8257": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11278,
        11290
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8258": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11292,
        11299
      ],
      "op": "DUP8",
      "path": "12"
    },
    "8259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11261,
        11277
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x332A"
    },
    "8262": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11261,
        11300
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11261,
        11300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11241,
        11300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11241,
        11300
      ],
      "op": "POP",
      "path": "12"
    },
    "8266": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11331,
        11340
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 52
    },
    "8267": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11318,
        11327
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "8268": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11318,
        11340
      ],
      "op": "LT",
      "path": "12"
    },
    "8269": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11318,
        11340
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2056"
    },
    "8273": {
      "branch": 231,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8276": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8277": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8278": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11310,
        11341
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8279": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11414,
        11428
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8281": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8283": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2070"
    },
    "8286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11448,
        11449
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11443
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "8290": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11443
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8291": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11447
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "8294": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11447
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8295": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8296": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8297": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "8302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "AND",
      "path": "12"
    },
    "8303": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11431,
        11450
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11450
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8305": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11473
      ],
      "op": "ADD",
      "path": "12"
    },
    "8306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11521,
        11522
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 53,
      "value": "0x0"
    },
    "8308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8309": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8311": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "8313": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8315": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8316": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8318": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8320": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11473
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8322": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11431,
        11473
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8323": {
      "op": "POP"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8330": {
      "op": "SHL"
    },
    "8331": {
      "op": "SUB"
    },
    "8332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11509
      ],
      "op": "AND",
      "path": "12"
    },
    "8333": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11490,
        11523
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11483,
        11524
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2093"
    },
    "8337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11483,
        11524
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11483,
        11524
      ],
      "op": "INVALID",
      "path": "12"
    },
    "8339": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11483,
        11524
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8340": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 54,
      "value": "0x0"
    },
    "8342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8343": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8344": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8345": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11591
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "8347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8349": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8350": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8352": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11599
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8354": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11605
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8357": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11605
      ],
      "op": "AND",
      "path": "12"
    },
    "8358": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11584,
        11614
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8359": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11577,
        11615
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20AC"
    },
    "8362": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11577,
        11615
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11577,
        11615
      ],
      "op": "INVALID",
      "path": "12"
    },
    "8364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11577,
        11615
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8365": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11702,
        11718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20B4"
    },
    "8368": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11702,
        11718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x484E"
    },
    "8371": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        11702,
        11718
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8372": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11702,
        11718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8373": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11741,
        11745
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 55,
      "value": "0x1"
    },
    "8375": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11728,
        11745
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8376": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11728,
        11745
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x40"
    },
    "8379": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8380": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8381": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8383": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8385": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8386": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8388": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8389": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DIV",
      "path": "12"
    },
    "8390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8391": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MUL",
      "path": "12"
    },
    "8392": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8393": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8395": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8396": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8398": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP8",
      "path": "12"
    },
    "8400": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8402": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8403": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8404": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8405": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8406": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8407": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8408": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8409": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8410": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8411": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8412": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8413": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8414": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11767,
        11775
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8415": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8416": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "8417": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8419": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8420": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8421": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8425": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "NOT",
      "path": "12"
    },
    "8426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8428": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8430": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "AND",
      "path": "12"
    },
    "8431": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8432": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "ADD",
      "path": "12"
    },
    "8436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8438": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8439": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8441": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8442": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8443": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8444": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11759
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8447": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11764
      ],
      "op": "ADD",
      "path": "12"
    },
    "8448": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8449": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8450": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8451": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11755,
        11775
      ],
      "op": "POP",
      "path": "12"
    },
    "8452": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11804,
        11816
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 57,
      "value": "0xF"
    },
    "8454": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11804,
        11816
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8455": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11789
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8456": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "8458": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11801
      ],
      "op": "ADD",
      "path": "12"
    },
    "8459": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11816
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8460": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11816
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8461": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11816
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8462": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11816
      ],
      "op": "POP",
      "path": "12"
    },
    "8463": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11785,
        11816
      ],
      "op": "POP",
      "path": "12"
    },
    "8464": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11841,
        11848
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 58
    },
    "8465": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11830
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8466": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11838
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "8468": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11838
      ],
      "op": "ADD",
      "path": "12"
    },
    "8469": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11848
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8470": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11848
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8471": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11848
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8472": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11848
      ],
      "op": "POP",
      "path": "12"
    },
    "8473": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11826,
        11848
      ],
      "op": "POP",
      "path": "12"
    },
    "8474": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11885
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 59,
      "value": "0x9"
    },
    "8476": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8478": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11886,
        11893
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8481": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "ADD",
      "path": "12"
    },
    "8484": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8485": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8486": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8489": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "ADD",
      "path": "12"
    },
    "8490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11894
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8495": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11901
      ],
      "op": "ADD",
      "path": "12"
    },
    "8496": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11872,
        11901
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8497": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11862
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8498": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11869
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "8500": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11869
      ],
      "op": "ADD",
      "path": "12"
    },
    "8501": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8502": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11901
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8504": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11901
      ],
      "op": "POP",
      "path": "12"
    },
    "8505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11858,
        11901
      ],
      "op": "POP",
      "path": "12"
    },
    "8506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11939
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 60,
      "value": "0x9"
    },
    "8508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8510": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11940,
        11947
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "ADD",
      "path": "12"
    },
    "8516": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "ADD",
      "path": "12"
    },
    "8522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8524": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11948
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8525": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11956
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8527": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11956
      ],
      "op": "ADD",
      "path": "12"
    },
    "8528": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11926,
        11956
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8529": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11915
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8530": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "8532": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11923
      ],
      "op": "ADD",
      "path": "12"
    },
    "8533": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11956
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8534": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11956
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8535": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11956
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8536": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11956
      ],
      "op": "POP",
      "path": "12"
    },
    "8537": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11911,
        11956
      ],
      "op": "POP",
      "path": "12"
    },
    "8538": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        11995
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 61,
      "value": "0x9"
    },
    "8540": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8542": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11996,
        12003
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8543": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8544": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8545": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8547": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "ADD",
      "path": "12"
    },
    "8548": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8549": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8550": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8551": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8553": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "ADD",
      "path": "12"
    },
    "8554": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8556": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12004
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8557": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "8559": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11982,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8560": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8561": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8562": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8564": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8565": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8567": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "AND",
      "path": "12"
    },
    "8568": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8569": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8572": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MUL",
      "path": "12"
    },
    "8573": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SUB",
      "path": "12"
    },
    "8574": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "AND",
      "path": "12"
    },
    "8575": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8577": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8578": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DIV",
      "path": "12"
    },
    "8579": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8580": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8582": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8583": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8585": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8586": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8587": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DIV",
      "path": "12"
    },
    "8588": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MUL",
      "path": "12"
    },
    "8589": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8591": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8592": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8594": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8595": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8596": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8597": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8598": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8600": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8601": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8602": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8603": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8604": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8605": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8606": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8607": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8608": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8610": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8611": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8612": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8613": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8614": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8616": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8617": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8619": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "AND",
      "path": "12"
    },
    "8620": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8621": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8624": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MUL",
      "path": "12"
    },
    "8625": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SUB",
      "path": "12"
    },
    "8626": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "AND",
      "path": "12"
    },
    "8627": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8629": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8630": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DIV",
      "path": "12"
    },
    "8631": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8632": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8633": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2203"
    },
    "8636": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8637": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8638": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8640": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "LT",
      "path": "12"
    },
    "8641": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21D8"
    },
    "8644": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8645": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8648": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8649": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8650": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8651": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DIV",
      "path": "12"
    },
    "8652": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MUL",
      "path": "12"
    },
    "8653": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8654": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8655": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8656": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8658": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8659": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8660": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2203"
    },
    "8663": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8664": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8665": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8666": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8667": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8668": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8669": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8671": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8672": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8674": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8676": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8677": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8678": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8679": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8680": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8681": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8682": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8683": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8684": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8686": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8687": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8688": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8690": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8691": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8692": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8693": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "GT",
      "path": "12"
    },
    "8694": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21E6"
    },
    "8697": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8698": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8699": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8700": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SUB",
      "path": "12"
    },
    "8701": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "8703": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "AND",
      "path": "12"
    },
    "8704": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8705": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "ADD",
      "path": "12"
    },
    "8706": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8707": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8708": {
      "op": "POP"
    },
    "8709": {
      "op": "POP"
    },
    "8710": {
      "op": "POP"
    },
    "8711": {
      "op": "POP"
    },
    "8712": {
      "op": "POP"
    },
    "8713": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8715": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8716": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8717": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "ADD",
      "path": "12"
    },
    "8718": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8719": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8720": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8721": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        12013
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8722": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 62,
      "value": "0x0"
    },
    "8724": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8725": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8726": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8727": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12030
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "8729": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8731": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8732": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8733": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8734": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8735": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8736": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12038
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8737": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8738": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8739": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8740": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8743": {
      "op": "NOT"
    },
    "8744": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "AND",
      "path": "12"
    },
    "8745": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8746": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8747": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8748": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "OR",
      "path": "12"
    },
    "8749": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8750": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8751": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8752": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8753": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8754": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8755": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8756": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8757": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8758": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        11966,
        11979
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8759": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2247"
    },
    "8762": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8765": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8766": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8767": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8768": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8769": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8770": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8771": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47D0"
    },
    "8774": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12023,
        12045
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8775": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8776": {
      "op": "POP"
    },
    "8777": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8779": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8780": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8781": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8782": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8783": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8784": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2263"
    },
    "8787": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8788": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8790": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8791": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8792": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8793": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8795": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8796": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8797": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8798": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8799": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x47D0"
    },
    "8802": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12023,
        12045
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8803": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8804": {
      "op": "POP"
    },
    "8805": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "8807": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8808": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8809": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8810": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "8812": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8813": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8814": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8815": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "8817": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8818": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8819": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8820": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8822": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8823": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8824": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8825": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "8827": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8828": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8829": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8830": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "8832": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8833": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8834": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8835": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC0"
    },
    "8837": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8838": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8839": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8840": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "8842": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8843": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8844": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8845": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "8847": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8848": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8849": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8850": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "8852": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8853": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8854": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8855": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8858": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8859": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8860": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8861": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8863": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8864": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8865": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8866": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "8869": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8870": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8871": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8872": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "8874": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8875": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8876": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8877": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x140"
    },
    "8880": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8881": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8882": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8883": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "8885": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8886": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8887": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8888": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160"
    },
    "8891": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8892": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8893": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8894": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "8896": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8897": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8898": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8899": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180"
    },
    "8902": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8903": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8904": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8905": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "8907": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8908": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8909": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8910": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A0"
    },
    "8913": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8914": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8915": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8916": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "8918": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8919": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8920": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8921": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C0"
    },
    "8924": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8925": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8926": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8927": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "8929": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8930": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8931": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8932": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E0"
    },
    "8935": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8936": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8937": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8938": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "8940": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8941": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8942": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8943": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x200"
    },
    "8946": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8947": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8948": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8949": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "8951": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8952": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8953": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8954": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x220"
    },
    "8957": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8958": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8959": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8960": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "8962": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8963": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8964": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8965": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "8968": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8969": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8970": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8971": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "8973": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8974": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8975": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8976": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "8979": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8980": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8981": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8982": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "8984": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8985": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8986": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8987": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x280"
    },
    "8990": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8991": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8992": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8993": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "8995": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8996": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "8997": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8998": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A0"
    },
    "9001": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9002": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9003": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9004": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "9006": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9007": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9008": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9009": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C0"
    },
    "9012": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9013": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9014": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9015": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "9017": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9018": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9019": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9020": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E0"
    },
    "9023": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9024": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9025": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9026": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "9028": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9029": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9030": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9031": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x300"
    },
    "9034": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9035": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9036": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9037": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "9039": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9040": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9041": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9042": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x320"
    },
    "9045": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9046": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9047": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9048": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "9050": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9051": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9052": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9053": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x340"
    },
    "9056": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9057": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9058": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9059": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9060": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "9062": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9063": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9064": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "ADD",
      "path": "12"
    },
    "9065": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12023,
        12045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9068": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12137,
        12161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2374"
    },
    "9071": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12154,
        12160
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9072": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12137,
        12153
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F06"
    },
    "9075": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12137,
        12161
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9076": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12137,
        12161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9077": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 63,
      "value": "0x0"
    },
    "9079": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9080": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9081": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9082": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12189
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "9084": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9086": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9087": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9089": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9090": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12197
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9091": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12209
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9092": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12209
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9093": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12171,
        12209
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9094": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12117,
        12161
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9095": {
      "op": "POP"
    },
    "9096": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12244,
        12278
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 64,
      "value": "0x2392"
    },
    "9099": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12250,
        12262
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B7"
    },
    "9102": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12250,
        12260
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "9105": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12250,
        12262
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9106": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12244,
        12278
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9107": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12396,
        12408
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 65,
      "value": "0x239A"
    },
    "9110": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12396,
        12406
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "9113": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12396,
        12408
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9114": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12396,
        12408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9115": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9117": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9118": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9119": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9120": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12385
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "9122": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9124": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9125": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9127": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9128": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12393
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9129": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9130": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9137": {
      "op": "SHL"
    },
    "9138": {
      "op": "SUB"
    },
    "9139": {
      "op": "NOT"
    },
    "9140": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "AND",
      "path": "12"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9147": {
      "op": "SHL"
    },
    "9148": {
      "op": "SUB"
    },
    "9149": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9150": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9151": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9152": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "AND",
      "path": "12"
    },
    "9153": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9154": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9155": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9156": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "OR",
      "path": "12"
    },
    "9157": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9158": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12374,
        12408
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9159": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12506
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 66,
      "value": "0xA"
    },
    "9161": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12506
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9162": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12513
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23D4"
    },
    "9165": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12513
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9168": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12510
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "9171": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12494,
        12513
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9172": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12494,
        12513
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9173": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12479,
        12491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9175": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12479,
        12513
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9176": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12584,
        12596
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 67,
      "value": "0xF"
    },
    "9178": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12584,
        12596
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9179": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9181": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9182": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9183": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9184": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12583
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "9186": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9188": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9189": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9190": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9191": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9193": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9194": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9195": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12597
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9196": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "DUP13",
      "path": "12"
    },
    "9197": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9198": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9199": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9200": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9201": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9202": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9203": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9204": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12606
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9205": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12613
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23FF"
    },
    "9208": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12613
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9209": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12611,
        12612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9211": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "9214": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12566,
        12613
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9215": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12566,
        12613
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9216": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12541,
        12553
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "9218": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12541,
        12553
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9219": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9221": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9222": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9223": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9224": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12540
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "9226": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9228": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9229": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9230": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9231": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9233": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9234": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9235": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12554
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9236": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "DUP14",
      "path": "12"
    },
    "9237": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9238": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9239": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9240": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9241": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9242": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9243": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12563
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9244": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12613
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9245": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12613
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9246": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12613
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9247": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12523,
        12613
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9248": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2435"
    },
    "9251": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12723,
        12725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "9253": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x242F"
    },
    "9256": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12684
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9257": {
      "offset": [
        1768,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9259": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12688
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FBE"
    },
    "9262": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12675,
        12718
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9263": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9264": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12722
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9265": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4017"
    },
    "9268": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12675,
        12726
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9269": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12675,
        12726
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9270": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12736,
        12753
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9272": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP12",
      "path": "12"
    },
    "9273": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9274": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9275": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12768
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9277": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9279": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9280": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9282": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9283": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9284": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9285": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9286": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9287": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9288": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12654,
        12726
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9289": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12654,
        12726
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9290": {
      "op": "POP"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9297": {
      "op": "SHL"
    },
    "9298": {
      "op": "SUB"
    },
    "9299": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "AND",
      "path": "12"
    },
    "9300": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9301": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9302": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9303": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12654,
        12726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9304": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12654,
        12726
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9305": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12736,
        12753
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9306": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9307": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12736,
        12753
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9308": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9309": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12654,
        12726
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9310": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12756,
        12777
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9311": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "GAS",
      "path": "12"
    },
    "9312": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "CALL",
      "path": "12"
    },
    "9313": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9314": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9315": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9316": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9317": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9318": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9319": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9321": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9322": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "EQ",
      "path": "12"
    },
    "9323": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2490"
    },
    "9326": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9327": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9329": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9330": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9331": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9332": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "9334": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "NOT",
      "path": "12"
    },
    "9335": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "9337": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9338": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "ADD",
      "path": "12"
    },
    "9339": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "AND",
      "path": "12"
    },
    "9340": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9341": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "ADD",
      "path": "12"
    },
    "9342": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9344": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9345": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9346": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9347": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9348": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "9349": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9351": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9353": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9354": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "ADD",
      "path": "12"
    },
    "9355": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "9356": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2495"
    },
    "9359": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9360": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9361": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "9363": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9364": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9365": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9366": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12806,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9367": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12787,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9368": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12787,
        12845
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9369": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12787,
        12845
      ],
      "op": "POP",
      "path": "12"
    },
    "9370": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12863,
        12870
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 68
    },
    "9371": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24DC"
    },
    "9374": {
      "branch": 232,
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9375": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9377": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9378": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9385": {
      "op": "SHL"
    },
    "9386": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9387": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9388": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9390": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9392": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9393": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "ADD",
      "path": "12"
    },
    "9394": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9395": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "9397": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "9399": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9400": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "ADD",
      "path": "12"
    },
    "9401": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9402": {
      "op": "PUSH14",
      "value": "0x14185E5B595B9D0819985A5B1959"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "9419": {
      "op": "SHL"
    },
    "9420": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "9422": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9423": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "ADD",
      "path": "12"
    },
    "9424": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9425": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9426": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9427": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9428": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9429": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9430": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "SUB",
      "path": "12"
    },
    "9431": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "9433": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "ADD",
      "path": "12"
    },
    "9434": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9435": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9436": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12855,
        12889
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9437": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12989,
        13013
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 69,
      "value": "0x24E5"
    },
    "9440": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13003,
        13012
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9441": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12989,
        13002
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x372C"
    },
    "9444": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        12989,
        13013
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9445": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        12989,
        13013
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9446": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 70,
      "value": "0xF34A510082F5A02E39555458564800FC1FE73BFD8D3AA07CBF063FE662E7657E"
    },
    "9479": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13040,
        13046
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9480": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13048,
        13060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x250F"
    },
    "9483": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13048,
        13058
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3620"
    },
    "9486": {
      "fn": "CryptoChampions.mintHero",
      "jump": "i",
      "offset": [
        13048,
        13060
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9487": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13048,
        13060
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9488": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9490": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9491": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9492": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9493": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9494": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9501": {
      "op": "SHL"
    },
    "9502": {
      "op": "SUB"
    },
    "9503": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9504": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9505": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "AND",
      "path": "12"
    },
    "9506": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9508": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9509": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "ADD",
      "path": "12"
    },
    "9510": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9511": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9512": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9513": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9514": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9515": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9516": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SUB",
      "path": "12"
    },
    "9517": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "ADD",
      "path": "12"
    },
    "9518": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9519": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13029,
        13061
      ],
      "op": "LOG1",
      "path": "12"
    },
    "9520": {
      "op": "POP"
    },
    "9521": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13079,
        13085
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 71
    },
    "9522": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        13079,
        13085
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "9523": {
      "fn": "CryptoChampions.mintHero",
      "offset": [
        10765,
        13092
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "9524": {
      "op": "POP"
    },
    "9525": {
      "op": "POP"
    },
    "9526": {
      "op": "POP"
    },
    "9527": {
      "op": "POP"
    },
    "9528": {
      "op": "POP"
    },
    "9529": {
      "op": "POP"
    },
    "9530": {
      "op": "POP"
    },
    "9531": {
      "op": "POP"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "op": "POP"
    },
    "9534": {
      "fn": "CryptoChampions.mintHero",
      "jump": "o",
      "offset": [
        10765,
        13092
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9535": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9536": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25838,
        25845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9538": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25872,
        25879
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9539": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25907,
        25914
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9541": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25940,
        25947
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9542": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        25800,
        25806
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9543": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "9545": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9546": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "9547": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2553"
    },
    "9550": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9551": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9553": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9554": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9555": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9556": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9558": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9559": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9560": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9561": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "9563": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9565": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9566": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9568": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9569": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9570": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9571": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9573": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "9574": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x256E"
    },
    "9577": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9578": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9580": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9581": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9582": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9583": {
      "op": "POP"
    },
    "9584": {
      "op": "POP"
    },
    "9585": {
      "op": "POP"
    },
    "9586": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 72,
      "value": "0x0"
    },
    "9588": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9589": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9590": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9591": {
      "op": "POP"
    },
    "9592": {
      "op": "POP"
    },
    "9593": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26011
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "9595": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9597": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9598": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9600": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9601": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26019
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9602": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "9604": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9605": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "ADD",
      "path": "12"
    },
    "9606": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9607": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "9609": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9610": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "ADD",
      "path": "12"
    },
    "9611": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9612": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26083,
        26107
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "9614": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26083,
        26107
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9615": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26083,
        26107
      ],
      "op": "ADD",
      "path": "12"
    },
    "9616": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26083,
        26107
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9617": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "9619": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9620": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9621": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "ADD",
      "path": "12"
    },
    "9622": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9623": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9624": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26004,
        26029
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9625": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9626": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26043,
        26069
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9627": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26083,
        26107
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9628": {
      "fn": "CryptoChampions.getHeroLore",
      "offset": [
        26121,
        26144
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9629": {
      "fn": "CryptoChampions.getHeroLore",
      "jump": "o",
      "offset": [
        25696,
        26161
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9630": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9631": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27978,
        27990
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 73,
      "value": "0x7"
    },
    "9633": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27978,
        27990
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9634": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9635": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "offset": [
        27890,
        27997
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9636": {
      "fn": "CryptoChampions.getNumEldersInGame",
      "jump": "o",
      "offset": [
        27890,
        27997
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9637": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9638": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3534,
        3550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9640": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3596
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 74
    },
    "9641": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3593,
        3603
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9642": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3582
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9643": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9644": {
      "branch": 260,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3574,
        3603
      ],
      "op": "EQ",
      "path": "5"
    },
    "9645": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25E7"
    },
    "9648": {
      "branch": 260,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9649": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9651": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9658": {
      "op": "SHL"
    },
    "9659": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9660": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9661": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9663": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "9664": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9665": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9666": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9668": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "9669": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9670": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9671": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "9672": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9673": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9674": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "9676": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9677": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9678": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9680": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "9681": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9682": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CAC"
    },
    "9685": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "9687": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9688": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "9689": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9691": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "ADD",
      "path": "5"
    },
    "9692": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9693": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "9694": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "POP",
      "path": "5"
    },
    "9695": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9697": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9698": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9699": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9700": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SUB",
      "path": "5"
    },
    "9701": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9702": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "REVERT",
      "path": "5"
    },
    "9703": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3566,
        3649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9704": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9706": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9707": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3707,
        3722
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9708": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9717": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9718": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "GT",
      "path": "5"
    },
    "9719": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9720": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9721": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2601"
    },
    "9724": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9725": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9727": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9728": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "REVERT",
      "path": "5"
    },
    "9729": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9730": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "9731": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9733": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9734": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9735": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9736": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9737": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9738": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9739": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9741": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "9742": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9744": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "9745": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9746": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "9747": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9749": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9750": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9751": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9752": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x262B"
    },
    "9755": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9756": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9757": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9759": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "9760": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9762": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9763": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "MUL",
      "path": "5"
    },
    "9764": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9765": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "9766": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9767": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "9768": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "ADD",
      "path": "5"
    },
    "9769": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9770": {
      "op": "POP"
    },
    "9771": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9772": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3693,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "9773": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9774": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3660,
        3723
      ],
      "op": "POP",
      "path": "5"
    },
    "9775": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3739,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9777": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9778": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3766
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9779": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3758,
        3773
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9780": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3755
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9781": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3754,
        3773
      ],
      "op": "LT",
      "path": "5"
    },
    "9782": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9783": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2689"
    },
    "9786": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9787": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 75,
      "value": "0x266A"
    },
    "9790": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3831
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9791": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3832,
        3833
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9792": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9793": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9794": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9795": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "LT",
      "path": "5"
    },
    "9796": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2649"
    },
    "9799": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9800": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "INVALID",
      "path": "5"
    },
    "9801": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9802": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9804": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MUL",
      "path": "5"
    },
    "9805": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9807": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "9808": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "ADD",
      "path": "5"
    },
    "9809": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3823,
        3834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9810": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3839
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9811": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3840,
        3841
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9812": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9813": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9814": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9815": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "LT",
      "path": "5"
    },
    "9816": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x265D"
    },
    "9819": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9820": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "INVALID",
      "path": "5"
    },
    "9821": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9822": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9824": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MUL",
      "path": "5"
    },
    "9825": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9827": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "9828": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "ADD",
      "path": "5"
    },
    "9829": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3836,
        3842
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9830": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12B6"
    },
    "9833": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9834": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3813,
        3843
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9835": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3807
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9836": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3808,
        3809
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9837": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9838": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9839": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9840": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "LT",
      "path": "5"
    },
    "9841": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2676"
    },
    "9844": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9845": {
      "dev": "Index out of range",
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "INVALID",
      "path": "5"
    },
    "9846": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9847": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9849": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9850": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9851": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "MUL",
      "path": "5"
    },
    "9852": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9853": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9854": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9855": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "9856": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3810
      ],
      "op": "ADD",
      "path": "5"
    },
    "9857": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3794,
        3843
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9858": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 76,
      "value": "0x1"
    },
    "9860": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3775,
        3778
      ],
      "op": "ADD",
      "path": "5"
    },
    "9861": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2631"
    },
    "9864": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9865": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3734,
        3854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9866": {
      "op": "POP"
    },
    "9867": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3871,
        3884
      ],
      "op": "SWAP4",
      "path": "5",
      "statement": 77
    },
    "9868": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3361,
        3891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9869": {
      "op": "POP"
    },
    "9870": {
      "op": "POP"
    },
    "9871": {
      "op": "POP"
    },
    "9872": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        3361,
        3891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9873": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9874": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17719,
        17726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9876": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17702,
        17708
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9877": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "9879": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9880": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "9881": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A1"
    },
    "9884": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9885": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9887": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9888": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9889": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9890": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9892": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9893": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9894": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9895": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "9897": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9899": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9900": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9902": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9903": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9904": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9905": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "9907": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "9908": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26BC"
    },
    "9911": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9912": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9914": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9915": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9916": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9917": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17777,
        17778
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 78,
      "value": "0x0"
    },
    "9919": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9920": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9921": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9922": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17757
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "9924": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9926": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9927": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9929": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9930": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9931": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9938": {
      "op": "SHL"
    },
    "9939": {
      "op": "SUB"
    },
    "9940": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17746,
        17765
      ],
      "op": "AND",
      "path": "12"
    },
    "9941": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26DD"
    },
    "9944": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9945": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9947": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9948": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9949": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17738,
        17780
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9950": {
      "op": "POP"
    },
    "9951": {
      "op": "POP"
    },
    "9952": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 79,
      "value": "0x0"
    },
    "9954": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9955": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9956": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9957": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17852
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "9959": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9961": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9962": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9964": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9965": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9966": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9973": {
      "op": "SHL"
    },
    "9974": {
      "op": "SUB"
    },
    "9975": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "AND",
      "path": "12"
    },
    "9976": {
      "fn": "CryptoChampions.getHeroOwner",
      "offset": [
        17841,
        17860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9977": {
      "fn": "CryptoChampions.getHeroOwner",
      "jump": "o",
      "offset": [
        17631,
        17867
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9978": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9979": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22587,
        22594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9981": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22561,
        22568
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9982": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9984": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9985": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "9986": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9987": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9988": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x270E"
    },
    "9991": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9992": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "9993": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "9995": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9996": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "9997": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9998": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9999": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2717"
    },
    "10002": {
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10003": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10005": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10006": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10007": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10008": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22627,
        22639
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 80,
      "value": "0xF"
    },
    "10010": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22627,
        22639
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10011": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22618,
        22623
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10012": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22618,
        22639
      ],
      "op": "GT",
      "path": "12"
    },
    "10013": {
      "branch": 233,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22618,
        22639
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10014": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2726"
    },
    "10017": {
      "branch": 233,
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10018": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10020": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10021": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10022": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22610,
        22640
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10023": {
      "op": "POP"
    },
    "10024": {
      "op": "POP"
    },
    "10025": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 81,
      "value": "0x0"
    },
    "10027": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10028": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10029": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10030": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22697
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "10032": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10034": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10035": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10036": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10037": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10039": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10040": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10041": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22704
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10042": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10043": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10044": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10045": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10046": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10047": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10048": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10049": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10050": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10051": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        22680,
        22713
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10052": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        22425,
        22720
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10053": {
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10054": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "10056": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10057": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10058": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10059": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10060": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "LT",
      "path": "12"
    },
    "10061": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2752"
    },
    "10064": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10065": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "INVALID",
      "path": "12"
    },
    "10066": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10067": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10069": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10070": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10071": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10072": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10074": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10075": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10076": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10077": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10078": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10079": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10080": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10081": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10083": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10084": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10085": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10087": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10091": {
      "op": "NOT"
    },
    "10092": {
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10095": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10097": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP8",
      "path": "12"
    },
    "10098": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "AND",
      "path": "12"
    },
    "10099": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10100": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MUL",
      "path": "12"
    },
    "10101": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10102": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10103": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10104": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "AND",
      "path": "12"
    },
    "10105": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10106": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10107": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10108": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DIV",
      "path": "12"
    },
    "10109": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10110": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10111": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10112": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10113": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10114": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DIV",
      "path": "12"
    },
    "10115": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10116": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MUL",
      "path": "12"
    },
    "10117": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10118": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10119": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10120": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10121": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10122": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10123": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10124": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10125": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10126": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10127": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10128": {
      "op": "POP"
    },
    "10129": {
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10130": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10131": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10132": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10133": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10134": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10135": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10136": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10137": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E3"
    },
    "10140": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10141": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10142": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10144": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "LT",
      "path": "12"
    },
    "10145": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27B8"
    },
    "10148": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10149": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10152": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10153": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10154": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10155": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DIV",
      "path": "12"
    },
    "10156": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MUL",
      "path": "12"
    },
    "10157": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10158": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10159": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10160": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10162": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10163": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10164": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E3"
    },
    "10167": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10168": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10169": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10170": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10171": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10172": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10173": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10175": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10176": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10178": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10180": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10181": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10182": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10183": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10184": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10185": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10186": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10187": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10188": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10190": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10191": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10192": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10194": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10195": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10196": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10197": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "GT",
      "path": "12"
    },
    "10198": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C6"
    },
    "10201": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10202": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10203": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10204": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SUB",
      "path": "12"
    },
    "10205": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10207": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "AND",
      "path": "12"
    },
    "10208": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10209": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "10210": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10211": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10212": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "10213": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "10214": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "10215": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "10216": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "POP",
      "path": "12"
    },
    "10217": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "offset": [
        3591,
        3631
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10218": {
      "fn": "CryptoChampions.getElderSpawnsAmount",
      "jump": "o",
      "offset": [
        3591,
        3631
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10219": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10220": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10452,
        10459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10222": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10434,
        10441
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10223": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10225": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10226": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "10227": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10228": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10229": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27FF"
    },
    "10232": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10233": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "10234": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10236": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10237": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "10238": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10239": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10240": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2808"
    },
    "10243": {
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10244": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10246": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10247": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10248": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10249": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10512,
        10513
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 82,
      "value": "0x0"
    },
    "10251": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10252": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10253": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10254": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10256": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10258": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10259": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10261": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10262": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10263": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10270": {
      "op": "SHL"
    },
    "10271": {
      "op": "SUB"
    },
    "10272": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10479,
        10500
      ],
      "op": "AND",
      "path": "12"
    },
    "10273": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2829"
    },
    "10276": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10277": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10279": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10280": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10281": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10471,
        10515
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "op": "POP"
    },
    "10284": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 83,
      "value": "0x0"
    },
    "10286": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10287": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10288": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10289": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10291": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10293": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10294": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10296": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10297": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10298": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10305": {
      "op": "SHL"
    },
    "10306": {
      "op": "SUB"
    },
    "10307": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "AND",
      "path": "12"
    },
    "10308": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        10577,
        10598
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10309": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        10352,
        10605
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10310": {
      "offset": [
        2914,
        2943
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10311": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "10313": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10314": {
      "fn": "CryptoChampions.getElderOwner",
      "offset": [
        2914,
        2943
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10315": {
      "fn": "CryptoChampions.getElderOwner",
      "jump": "o",
      "offset": [
        2914,
        2943
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10316": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10317": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26958,
        26965
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10319": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26991,
        26998
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10320": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27025,
        27032
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10322": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27062,
        27069
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10323": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27099,
        27106
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10325": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27130,
        27137
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10326": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        26920,
        26926
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10327": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10329": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10330": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "10331": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2863"
    },
    "10334": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10335": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10337": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10338": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10339": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10340": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10342": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10343": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10344": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10345": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "10347": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10349": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10350": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10352": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10353": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10354": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10355": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10357": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "10358": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x287E"
    },
    "10361": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10362": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10364": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10365": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10366": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10367": {
      "op": "POP"
    },
    "10368": {
      "op": "POP"
    },
    "10369": {
      "op": "POP"
    },
    "10370": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 84,
      "value": "0x0"
    },
    "10372": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10373": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10374": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10375": {
      "op": "POP"
    },
    "10376": {
      "op": "POP"
    },
    "10377": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27202
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "10379": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10381": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10382": {
      "op": "POP"
    },
    "10383": {
      "op": "POP"
    },
    "10384": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10386": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10387": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27210
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10388": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "10390": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10391": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "ADD",
      "path": "12"
    },
    "10392": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10393": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "10395": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10396": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "ADD",
      "path": "12"
    },
    "10397": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10398": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "10400": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10401": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "ADD",
      "path": "12"
    },
    "10402": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10403": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "10405": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10406": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "ADD",
      "path": "12"
    },
    "10407": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10408": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27356,
        27378
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "10410": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27356,
        27378
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10411": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27356,
        27378
      ],
      "op": "ADD",
      "path": "12"
    },
    "10412": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27356,
        27378
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10413": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "10415": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10416": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "10417": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "ADD",
      "path": "12"
    },
    "10418": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27392,
        27416
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10419": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10420": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27195,
        27219
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "10421": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10422": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27233,
        27258
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10423": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10424": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27272,
        27300
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10425": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10426": {
      "fn": "CryptoChampions.getHeroStats",
      "offset": [
        27314,
        27342
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10427": {
      "fn": "CryptoChampions.getHeroStats",
      "jump": "o",
      "offset": [
        26815,
        27433
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10428": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10429": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25313,
        25320
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10431": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25345,
        25352
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10432": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25377,
        25384
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10434": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25409,
        25416
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10435": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25275,
        25281
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10436": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10438": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10439": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "10440": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28D0"
    },
    "10443": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10444": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10446": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10447": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10448": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10449": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10451": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10452": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10453": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10454": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "10456": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10458": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10459": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10461": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10462": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10463": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10464": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10466": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "10467": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28EB"
    },
    "10470": {
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10471": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10473": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10474": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10475": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10476": {
      "op": "POP"
    },
    "10477": {
      "op": "POP"
    },
    "10478": {
      "op": "POP"
    },
    "10479": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 85,
      "value": "0x0"
    },
    "10481": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10482": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10483": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10484": {
      "op": "POP"
    },
    "10485": {
      "op": "POP"
    },
    "10486": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "10488": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10490": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10491": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10492": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10493": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10495": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10496": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10497": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25475
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10498": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "10500": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10501": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "ADD",
      "path": "12"
    },
    "10502": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10503": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25484,
        25506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10505": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25484,
        25506
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10506": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25484,
        25506
      ],
      "op": "ADD",
      "path": "12"
    },
    "10507": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25484,
        25506
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10508": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25508,
        25530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "10510": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25508,
        25530
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10511": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25508,
        25530
      ],
      "op": "ADD",
      "path": "12"
    },
    "10512": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25508,
        25530
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10513": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25532,
        25554
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10514": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25532,
        25554
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10515": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25532,
        25554
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10516": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25532,
        25554
      ],
      "op": "ADD",
      "path": "12"
    },
    "10517": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25532,
        25554
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10518": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10519": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        25460,
        25482
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10520": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        25163,
        25562
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10521": {
      "offset": [
        2981,
        3008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10522": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "10524": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10525": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "offset": [
        2981,
        3008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10526": {
      "fn": "CryptoChampions.getHeroTraitsSkills",
      "jump": "o",
      "offset": [
        2981,
        3008
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10527": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10528": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4038,
        4045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10530": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 86
    },
    "10531": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10532": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10533": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10535": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10536": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10537": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10538": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10540": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10541": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10542": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2937"
    },
    "10545": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10546": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4088,
        4093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10547": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407E"
    },
    "10550": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10551": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4064,
        4094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10552": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4057,
        4094
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10553": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3965,
        4101
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10554": {
      "op": "POP"
    },
    "10555": {
      "op": "POP"
    },
    "10556": {
      "op": "POP"
    },
    "10557": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3965,
        4101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10558": {
      "offset": [
        1933,
        1981
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10559": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10561": {
      "offset": [
        1933,
        1981
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10562": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        1933,
        1981
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10563": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2950,
        3087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10564": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3019,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10566": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 87
    },
    "10567": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10568": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10569": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10571": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10572": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10573": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10574": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10576": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10577": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3054
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10578": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2937"
    },
    "10581": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10582": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3072,
        3079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10583": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3042,
        3071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B1"
    },
    "10586": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3042,
        3080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10587": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9496,
        9713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10588": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9602
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 88
    },
    "10589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10595": {
      "op": "SHL"
    },
    "10596": {
      "op": "SUB"
    },
    "10597": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9606,
        9620
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "10630": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "AND",
      "path": "15"
    },
    "10631": {
      "branch": 281,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9592,
        9620
      ],
      "op": "EQ",
      "path": "15"
    },
    "10632": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29D8"
    },
    "10635": {
      "branch": 281,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10636": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10638": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10639": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10646": {
      "op": "SHL"
    },
    "10647": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10648": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10649": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10651": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10653": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10654": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "10655": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10656": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10658": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "10660": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10661": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "10662": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10663": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "10696": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "10698": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10699": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "10700": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10701": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10702": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10703": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10704": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10705": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10706": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SUB",
      "path": "15"
    },
    "10707": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "10709": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "10710": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10711": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10712": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9584,
        9656
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10713": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9706
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 89,
      "value": "0x1DB0"
    },
    "10716": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9684,
        9693
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10717": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9695,
        9705
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10718": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9666,
        9683
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408A"
    },
    "10721": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9666,
        9706
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10722": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10723": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29F9"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10728": {
      "op": "DUP1"
    },
    "10729": {
      "op": "MLOAD"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10732": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "10735": {
      "op": "DUP4"
    },
    "10736": {
      "op": "CODECOPY"
    },
    "10737": {
      "op": "DUP2"
    },
    "10738": {
      "op": "MLOAD"
    },
    "10739": {
      "op": "SWAP2"
    },
    "10740": {
      "op": "MSTORE"
    },
    "10741": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "10744": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10745": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10746": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7730,
        7741
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 90
    },
    "10747": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "10749": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7715,
        7726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10750": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7715,
        7726
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10751": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10753": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10754": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10755": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10756": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10757": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10758": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10759": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10760": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10761": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10762": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10763": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10764": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "ADD",
      "path": "12"
    },
    "10765": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10766": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10767": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10768": {
      "op": "POP"
    },
    "10769": {
      "op": "POP"
    },
    "10770": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10772": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10773": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10774": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10775": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10776": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SUB",
      "path": "12"
    },
    "10777": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10779": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "ADD",
      "path": "12"
    },
    "10780": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10781": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10782": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10783": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10784": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10791": {
      "op": "SHL"
    },
    "10792": {
      "op": "SUB"
    },
    "10793": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10794": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10795": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10796": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "AND",
      "path": "12"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10803": {
      "op": "SHL"
    },
    "10804": {
      "op": "SUB"
    },
    "10805": {
      "op": "NOT"
    },
    "10806": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10807": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10808": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "AND",
      "path": "12"
    },
    "10809": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10810": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10811": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10812": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "OR",
      "path": "12"
    },
    "10813": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10814": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10815": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10816": {
      "op": "POP"
    },
    "10817": {
      "op": "POP"
    },
    "10818": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7761
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 91,
      "value": "0x11"
    },
    "10820": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10821": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10822": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7741
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10824": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10825": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "ADD",
      "path": "12"
    },
    "10826": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10827": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10828": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7703,
        7727
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10830": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10831": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10832": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10833": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10834": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7E"
    },
    "10837": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10838": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "10871": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "ADD",
      "path": "12"
    },
    "10872": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7767,
        7778
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10873": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7767,
        7778
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10874": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x491A"
    },
    "10877": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "i",
      "offset": [
        7751,
        7779
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10878": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10879": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7751,
        7779
      ],
      "op": "POP",
      "path": "12"
    },
    "10880": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "POP",
      "path": "12"
    },
    "10881": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "POP",
      "path": "12"
    },
    "10882": {
      "fn": "CryptoChampions.createAffinity",
      "offset": [
        7591,
        7786
      ],
      "op": "POP",
      "path": "12"
    },
    "10883": {
      "fn": "CryptoChampions.createAffinity",
      "jump": "o",
      "offset": [
        7591,
        7786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10884": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10885": {
      "offset": [
        5988,
        6013
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AAD"
    },
    "10888": {
      "offset": [
        1484,
        1512
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "10921": {
      "offset": [
        5988,
        5996
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "10924": {
      "jump": "i",
      "offset": [
        5988,
        6013
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10925": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        5988,
        6013
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10926": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28310
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 92,
      "value": "0x16"
    },
    "10928": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10929": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10930": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10932": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10933": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "ADD",
      "path": "12"
    },
    "10934": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10935": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10938": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10939": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10940": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10941": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10942": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AEA"
    },
    "10945": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10946": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
    },
    "10979": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "ADD",
      "path": "12"
    },
    "10980": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28316,
        28331
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10981": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28316,
        28331
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10982": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x491A"
    },
    "10985": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "i",
      "offset": [
        28286,
        28332
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10986": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10987": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28286,
        28332
      ],
      "op": "POP",
      "path": "12"
    },
    "10988": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "POP",
      "path": "12"
    },
    "10989": {
      "fn": "CryptoChampions.declareRoundWinner",
      "offset": [
        28183,
        28339
      ],
      "op": "POP",
      "path": "12"
    },
    "10990": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "o",
      "offset": [
        28183,
        28339
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10991": {
      "offset": [
        1727,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10992": {
      "offset": [
        1772,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10994": {
      "offset": [
        1727,
        1776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10995": {
      "fn": "CryptoChampions.declareRoundWinner",
      "jump": "o",
      "offset": [
        1727,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10996": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10997": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4077,
        4085
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 93
    },
    "10998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11004": {
      "op": "SHL"
    },
    "11005": {
      "op": "SUB"
    },
    "11006": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11007": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B06"
    },
    "11010": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4071
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "11013": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11014": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11021": {
      "op": "SHL"
    },
    "11022": {
      "op": "SUB"
    },
    "11023": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "AND",
      "path": "5"
    },
    "11024": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "EQ",
      "path": "5"
    },
    "11025": {
      "branch": 261,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4061,
        4085
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11026": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B4C"
    },
    "11029": {
      "branch": 261,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "11030": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11032": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11039": {
      "op": "SHL"
    },
    "11040": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11041": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11042": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11044": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11045": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11046": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11047": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11049": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11050": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11051": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11052": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11053": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11054": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11055": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11057": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11058": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11059": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11061": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11062": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11063": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C83"
    },
    "11066": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "11068": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11069": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "11070": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11072": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "ADD",
      "path": "5"
    },
    "11073": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11074": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11075": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "POP",
      "path": "5"
    },
    "11076": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11078": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11079": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11080": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11081": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SUB",
      "path": "5"
    },
    "11082": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11083": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "REVERT",
      "path": "5"
    },
    "11084": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4053,
        4131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11085": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4187,
        4195
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 94
    },
    "11086": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4160
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11088": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "11090": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B59"
    },
    "11093": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "11096": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11097": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4161,
        4173
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11104": {
      "op": "SHL"
    },
    "11105": {
      "op": "SUB"
    },
    "11106": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11107": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11108": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "AND",
      "path": "5"
    },
    "11109": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11110": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11111": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11113": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11114": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11115": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11116": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11117": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11118": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11119": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11120": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11122": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11123": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11124": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "ADD",
      "path": "5"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11127": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11128": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11129": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4174
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11130": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11131": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11132": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "AND",
      "path": "5"
    },
    "11133": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11134": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11135": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11136": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11137": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11138": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11139": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11140": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11141": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4184
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11142": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11143": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11146": {
      "op": "NOT"
    },
    "11147": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "AND",
      "path": "5"
    },
    "11148": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11149": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11150": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11151": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11152": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11153": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "11154": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "OR",
      "path": "5"
    },
    "11155": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11156": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11157": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4142,
        4195
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11158": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 95,
      "value": "0x2B9D"
    },
    "11161": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "11164": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11165": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4225,
        4237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "11166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11172": {
      "op": "SHL"
    },
    "11173": {
      "op": "SUB"
    },
    "11174": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "AND",
      "path": "5"
    },
    "11175": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11208": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4249,
        4257
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11209": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11211": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11212": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11213": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11214": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11215": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "11216": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11217": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11218": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "11220": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "ADD",
      "path": "5"
    },
    "11221": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11222": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11223": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "POP",
      "path": "5"
    },
    "11224": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11227": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11228": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11229": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SUB",
      "path": "5"
    },
    "11230": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11231": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        4210,
        4258
      ],
      "op": "LOG3",
      "path": "5"
    },
    "11232": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11233": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3959,
        4265
      ],
      "op": "POP",
      "path": "5"
    },
    "11234": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3959,
        4265
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11235": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11236": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BFA"
    },
    "11239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11241": {
      "op": "DUP1"
    },
    "11242": {
      "op": "MLOAD"
    },
    "11243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11245": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "11248": {
      "op": "DUP4"
    },
    "11249": {
      "op": "CODECOPY"
    },
    "11250": {
      "op": "DUP2"
    },
    "11251": {
      "op": "MLOAD"
    },
    "11252": {
      "op": "SWAP2"
    },
    "11253": {
      "op": "MSTORE"
    },
    "11254": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "11257": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11258": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11259": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18313,
        18314
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 96,
      "value": "0x0"
    },
    "11261": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18298,
        18310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11263": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18298,
        18310
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11264": {
      "branch": 234,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18298,
        18314
      ],
      "op": "GT",
      "path": "12"
    },
    "11265": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C09"
    },
    "11268": {
      "branch": 234,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11269": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11271": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11272": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11273": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18290,
        18315
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11274": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18378,
        18379
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11276": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11277": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11279": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18381,
        18382
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11280": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18381,
        18406
      ],
      "op": "GT",
      "path": "12"
    },
    "11281": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C3C"
    },
    "11284": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11285": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11287": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11288": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11289": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11290": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18444
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11292": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11294": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11295": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11297": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11298": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18447
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11299": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18453
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11300": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18453
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11302": {
      "branch": 235,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18431,
        18453
      ],
      "op": "AND",
      "path": "12"
    },
    "11303": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18427,
        18501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "11304": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18427,
        18501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C34"
    },
    "11307": {
      "branch": 235,
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18427,
        18501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11308": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18473,
        18486
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 97,
      "value": "0x2C34"
    },
    "11311": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18484,
        18485
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11312": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18473,
        18483
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x409C"
    },
    "11315": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18473,
        18486
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11316": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18473,
        18486
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11317": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18408,
        18411
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 98,
      "value": "0x1"
    },
    "11319": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18408,
        18411
      ],
      "op": "ADD",
      "path": "12"
    },
    "11320": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C0C"
    },
    "11323": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11324": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18361,
        18511
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11325": {
      "op": "POP"
    },
    "11326": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18579
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 99,
      "value": "0xF"
    },
    "11328": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18579
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11329": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C4B"
    },
    "11332": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18586
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11333": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18584,
        18585
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11335": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18583
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "11338": {
      "fn": "CryptoChampions.burnElders",
      "jump": "i",
      "offset": [
        18567,
        18586
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11339": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18567,
        18586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11340": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18552,
        18564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "11342": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18552,
        18586
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11343": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 100,
      "value": "0x40"
    },
    "11345": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11346": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x143B2C36FAC98F86168603D28D499BDE9CE0367D41E111CEF9F2ECBC9EEABFC"
    },
    "11379": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11380": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11382": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11383": {
      "fn": "CryptoChampions.burnElders",
      "offset": [
        18602,
        18622
      ],
      "op": "LOG1",
      "path": "12"
    },
    "11384": {
      "fn": "CryptoChampions.burnElders",
      "jump": "o",
      "offset": [
        18230,
        18629
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11385": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11386": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14270,
        14276
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11387": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11389": {
      "offset": [
        5759,
        5765
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11390": {
      "offset": [
        5759,
        5788
      ],
      "op": "GT",
      "path": "12"
    },
    "11391": {
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C87"
    },
    "11394": {
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11395": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5751,
        5789
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11397": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5751,
        5789
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11398": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5751,
        5789
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11399": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5751,
        5789
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11400": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11402": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11403": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11404": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11405": {
      "offset": [
        5838,
        5845
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11407": {
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11409": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11410": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11412": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11413": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11414": {
      "offset": [
        5838,
        5859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11415": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "11417": {
      "branch": 236,
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5838,
        5859
      ],
      "op": "AND",
      "path": "12"
    },
    "11418": {
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CA2"
    },
    "11421": {
      "branch": 236,
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11422": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5830,
        5860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11424": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5830,
        5860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11425": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5830,
        5860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11426": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        5830,
        5860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11427": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14288,
        14309
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11429": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11430": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11431": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11432": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14330
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "11434": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11436": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11437": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11439": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11440": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11441": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14312,
        14338
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11442": {
      "branch": 237,
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14356,
        14374
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 101
    },
    "11443": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CBB"
    },
    "11446": {
      "branch": 237,
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11447": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11449": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11450": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11451": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14348,
        14375
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11452": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14443,
        14463
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11454": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11455": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11456": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11457": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14483
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "11459": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11461": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11462": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11464": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11465": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11466": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14466,
        14498
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11467": {
      "branch": 238,
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14516,
        14533
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 102
    },
    "11468": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CD4"
    },
    "11471": {
      "branch": 238,
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11472": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11474": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11475": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "REVERT",
      "path": "12"
    },
    "11476": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14508,
        14534
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11477": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14588,
        14611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11479": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 103
    },
    "11480": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11481": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11482": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14629
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11484": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11486": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11487": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11489": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11490": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14637
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11491": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14646,
        14647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11493": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "11495": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11496": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14643
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11497": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14643
      ],
      "op": "ADD",
      "path": "12"
    },
    "11498": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14622,
        14647
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11499": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14721,
        14747
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 104,
      "value": "0x2CF5"
    },
    "11502": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14731,
        14732
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "11504": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14734,
        14746
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11505": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14721,
        14730
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11508": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        14721,
        14747
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11509": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14721,
        14747
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11510": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11512": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11513": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11514": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11515": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14681
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11517": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11519": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11520": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11522": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11523": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14689
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11524": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14700
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "11526": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14674,
        14700
      ],
      "op": "ADD",
      "path": "12"
    },
    "11527": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11528": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11529": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11530": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11531": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11532": {
      "op": "POP"
    },
    "11533": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14816,
        14845
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 105,
      "value": "0x2D17"
    },
    "11536": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14826,
        14827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11538": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14673,
        14747
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11539": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14816,
        14825
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11542": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        14816,
        14845
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11543": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14816,
        14845
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11544": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11546": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11547": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11548": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11549": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14780
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11551": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11553": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11554": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11556": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11557": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14788
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11558": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11560": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14773,
        14795
      ],
      "op": "ADD",
      "path": "12"
    },
    "11561": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11562": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11563": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11564": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11565": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14913,
        14942
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 106,
      "value": "0x2D39"
    },
    "11570": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14923,
        14924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11572": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14772,
        14845
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11573": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14913,
        14922
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11576": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        14913,
        14942
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11577": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14913,
        14942
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11578": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11580": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11581": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11582": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11583": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14877
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11585": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11587": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11588": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11590": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11591": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14885
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11592": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "11594": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "12"
    },
    "11595": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11596": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11597": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11598": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11599": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11600": {
      "op": "POP"
    },
    "11601": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15010,
        15039
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 107,
      "value": "0x2D5B"
    },
    "11604": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15020,
        15021
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11606": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14869,
        14942
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11607": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15010,
        15019
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11610": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15010,
        15039
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11611": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15010,
        15039
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11612": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11614": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11615": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11616": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11617": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11619": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11621": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11622": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11624": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11625": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14982
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11626": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14989
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "11628": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14967,
        14989
      ],
      "op": "ADD",
      "path": "12"
    },
    "11629": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11630": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11631": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11632": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11633": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11634": {
      "op": "POP"
    },
    "11635": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15107,
        15136
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 108,
      "value": "0x2D7D"
    },
    "11638": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15117,
        15118
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11640": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        14966,
        15039
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11641": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15107,
        15116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11644": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15107,
        15136
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11645": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15107,
        15136
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11646": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11648": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11649": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11650": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11651": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15071
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11653": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11655": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11656": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11657": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11658": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11660": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11661": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11662": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15079
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11663": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15064,
        15086
      ],
      "op": "ADD",
      "path": "12"
    },
    "11664": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11665": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11666": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11667": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11668": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11669": {
      "op": "POP"
    },
    "11670": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15208,
        15237
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 109,
      "value": "0x2DA0"
    },
    "11673": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15218,
        15219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11675": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15063,
        15136
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11676": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15208,
        15217
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11679": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15208,
        15237
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11680": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15208,
        15237
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11681": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11683": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11684": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11685": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11686": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15169
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11688": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11690": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11691": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11693": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11694": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15177
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11695": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15187
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "11697": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15162,
        15187
      ],
      "op": "ADD",
      "path": "12"
    },
    "11698": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11699": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11700": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11701": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11702": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11703": {
      "op": "POP"
    },
    "11704": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15309,
        15339
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 110,
      "value": "0x2DC2"
    },
    "11707": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15319,
        15321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1E"
    },
    "11709": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15161,
        15237
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11710": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15309,
        15318
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11713": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15309,
        15339
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11714": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15309,
        15339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11715": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11717": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11718": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11719": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11720": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15269
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11722": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11724": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11725": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11727": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11728": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15277
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11729": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "11731": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15262,
        15288
      ],
      "op": "ADD",
      "path": "12"
    },
    "11732": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11733": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11734": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11735": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11736": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11737": {
      "op": "POP"
    },
    "11738": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15410,
        15440
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 111,
      "value": "0x2DE4"
    },
    "11741": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15420,
        15422
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "11743": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15261,
        15339
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11744": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15410,
        15419
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11747": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15410,
        15440
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11748": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15410,
        15440
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11749": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11751": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11752": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11753": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11754": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15372
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11756": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11758": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11759": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11761": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11762": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15380
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11763": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15389
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "11765": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15365,
        15389
      ],
      "op": "ADD",
      "path": "12"
    },
    "11766": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11767": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11768": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11769": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11770": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11771": {
      "op": "POP"
    },
    "11772": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15510,
        15539
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 112,
      "value": "0x2E06"
    },
    "11775": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15520,
        15521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "11777": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15364,
        15440
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11778": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15510,
        15519
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11781": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15510,
        15539
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11782": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15510,
        15539
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11783": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11785": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11786": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11787": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11788": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15473
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11790": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11792": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11793": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11795": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11796": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15481
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11797": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15489
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "11799": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15466,
        15489
      ],
      "op": "ADD",
      "path": "12"
    },
    "11800": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11801": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11802": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11803": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11804": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11805": {
      "op": "POP"
    },
    "11806": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15604,
        15634
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 113,
      "value": "0x2E28"
    },
    "11809": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15614,
        15616
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "11811": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15465,
        15539
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11812": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15604,
        15613
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11815": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15604,
        15634
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11816": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15604,
        15634
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11817": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11819": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11820": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11821": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11822": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15572
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11824": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11826": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11827": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11829": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11830": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15580
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11831": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15583
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "11833": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15565,
        15583
      ],
      "op": "ADD",
      "path": "12"
    },
    "11834": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15564,
        15634
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11835": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15564,
        15634
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11836": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15564,
        15634
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11837": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15564,
        15634
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11838": {
      "op": "POP"
    },
    "11839": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15679,
        15704
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 114,
      "value": "0x2E49"
    },
    "11842": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15679,
        15704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11843": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15702,
        15703
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11845": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15679,
        15701
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "11848": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15679,
        15704
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11849": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15679,
        15704
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11850": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11852": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "DUP7",
      "path": "12"
    },
    "11853": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11854": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11855": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15665
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11857": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11859": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11860": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11862": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11863": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15673
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11864": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "11866": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15676
      ],
      "op": "ADD",
      "path": "12"
    },
    "11867": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15658,
        15704
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11868": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15756,
        15786
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 115,
      "value": "0x2E66"
    },
    "11871": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15766,
        15768
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "11873": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15770,
        15785
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11874": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15756,
        15765
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11877": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15756,
        15786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11878": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15756,
        15786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11879": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11881": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11882": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11883": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11884": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11886": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11888": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11889": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11891": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11892": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15730
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11893": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15735
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "11895": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15715,
        15735
      ],
      "op": "ADD",
      "path": "12"
    },
    "11896": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15714,
        15786
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11897": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15714,
        15786
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11898": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15714,
        15786
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11899": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15714,
        15786
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11900": {
      "op": "POP"
    },
    "11901": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15833,
        15860
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 116,
      "value": "0x2E87"
    },
    "11904": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15833,
        15860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11905": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15858,
        15859
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11907": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15833,
        15857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "11910": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15833,
        15860
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11911": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15833,
        15860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11912": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11914": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "DUP7",
      "path": "12"
    },
    "11915": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11916": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11917": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15817
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11919": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11921": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11922": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11924": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11925": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15825
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11926": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15830
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "11928": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15830
      ],
      "op": "ADD",
      "path": "12"
    },
    "11929": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15810,
        15860
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11930": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15915,
        15945
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 117,
      "value": "0x2EA4"
    },
    "11933": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15925,
        15927
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "11935": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15929,
        15944
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11936": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15915,
        15924
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "11939": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15915,
        15945
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11940": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15915,
        15945
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11941": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11943": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11944": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11945": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11946": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15878
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11948": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11950": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11951": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11953": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11954": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15886
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11955": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "11957": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15871,
        15894
      ],
      "op": "ADD",
      "path": "12"
    },
    "11958": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15870,
        15945
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11959": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15870,
        15945
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11960": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15870,
        15945
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11961": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15870,
        15945
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11962": {
      "op": "POP"
    },
    "11963": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15995,
        16025
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 118,
      "value": "0x2EC5"
    },
    "11966": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15995,
        16025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11967": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16023,
        16024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "11969": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15995,
        16022
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "11972": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        15995,
        16025
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11973": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15995,
        16025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11974": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11976": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "DUP7",
      "path": "12"
    },
    "11977": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11978": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11979": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15976
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "11981": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11983": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11984": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11986": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11987": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15984
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11988": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "11990": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        15992
      ],
      "op": "ADD",
      "path": "12"
    },
    "11991": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        15969,
        16025
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11992": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16082,
        16112
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 119,
      "value": "0x2EE2"
    },
    "11995": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16092,
        16094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "11997": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16096,
        16111
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11998": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16082,
        16091
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12001": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16082,
        16112
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12002": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16082,
        16112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12003": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12005": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12006": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12007": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12008": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12010": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12012": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12013": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12015": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12016": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16052
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12017": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "12019": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16037,
        16061
      ],
      "op": "ADD",
      "path": "12"
    },
    "12020": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16036,
        16112
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12021": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16036,
        16112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12022": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16036,
        16112
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12023": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16036,
        16112
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12024": {
      "op": "POP"
    },
    "12025": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16162,
        16193
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x2F03"
    },
    "12028": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16162,
        16193
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12029": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16191,
        16192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12031": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16162,
        16190
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12034": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16162,
        16193
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12035": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16162,
        16193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12036": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12038": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12039": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12040": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12041": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12043": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12045": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12046": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12048": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12049": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16150
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12050": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "12052": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16159
      ],
      "op": "ADD",
      "path": "12"
    },
    "12053": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16135,
        16193
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12054": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16250,
        16280
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x2F20"
    },
    "12057": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16260,
        16262
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12059": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16264,
        16279
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12060": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16250,
        16259
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12063": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16250,
        16280
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12064": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16250,
        16280
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12065": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12067": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12068": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12069": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12070": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12072": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12074": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12075": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12077": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12078": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16219
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12079": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16229
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "12081": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16204,
        16229
      ],
      "op": "ADD",
      "path": "12"
    },
    "12082": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16203,
        16280
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12083": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16203,
        16280
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12084": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16203,
        16280
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12085": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16203,
        16280
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12086": {
      "op": "POP"
    },
    "12087": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16331,
        16363
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x2F41"
    },
    "12090": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16331,
        16363
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12091": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16361,
        16362
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12093": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16331,
        16360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12096": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16331,
        16363
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12097": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16331,
        16363
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12098": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12100": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12101": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12102": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12103": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12105": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12107": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12108": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12110": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12111": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16318
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12112": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "12114": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16328
      ],
      "op": "ADD",
      "path": "12"
    },
    "12115": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16303,
        16363
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12116": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16423,
        16453
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 123,
      "value": "0x2F5E"
    },
    "12119": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16433,
        16435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12121": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16437,
        16452
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12122": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16423,
        16432
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12125": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16423,
        16453
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12126": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16423,
        16453
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12127": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12129": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12130": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12131": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12132": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12134": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12136": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12137": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12139": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12140": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16389
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12141": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "12143": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16374,
        16402
      ],
      "op": "ADD",
      "path": "12"
    },
    "12144": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16373,
        16453
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12145": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16373,
        16453
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12146": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16373,
        16453
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12147": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16373,
        16453
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12148": {
      "op": "POP"
    },
    "12149": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16507,
        16542
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 124,
      "value": "0x2F7F"
    },
    "12152": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16507,
        16542
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12153": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16540,
        16541
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12155": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16507,
        16539
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12158": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16507,
        16542
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12159": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16507,
        16542
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12160": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12162": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12163": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12164": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12165": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16483
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12167": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12169": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12170": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12172": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12173": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16491
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12174": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16504
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "12176": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16504
      ],
      "op": "ADD",
      "path": "12"
    },
    "12177": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16476,
        16542
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12178": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16602,
        16632
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 125,
      "value": "0x2F9C"
    },
    "12181": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16612,
        16614
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12183": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16616,
        16631
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12184": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16602,
        16611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12187": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16602,
        16632
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12188": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16602,
        16632
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12189": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12191": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12192": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12193": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12194": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16560
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12196": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12198": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12199": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12201": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12202": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16568
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12203": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16581
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "12205": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16553,
        16581
      ],
      "op": "ADD",
      "path": "12"
    },
    "12206": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16552,
        16632
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12207": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16552,
        16632
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12208": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16552,
        16632
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12209": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16552,
        16632
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12210": {
      "op": "POP"
    },
    "12211": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16686,
        16721
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 126,
      "value": "0x2FBD"
    },
    "12214": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16686,
        16721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12215": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16719,
        16720
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12217": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16686,
        16718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12220": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16686,
        16721
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12221": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16686,
        16721
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12222": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12224": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12225": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12226": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12227": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16662
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12229": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12231": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12232": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12234": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12235": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16670
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12236": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16683
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x18"
    },
    "12238": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16683
      ],
      "op": "ADD",
      "path": "12"
    },
    "12239": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16655,
        16721
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12240": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16775,
        16805
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 127,
      "value": "0x2FDA"
    },
    "12243": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16785,
        16787
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12245": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16789,
        16804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12246": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16775,
        16784
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12249": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16775,
        16805
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12250": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16775,
        16805
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12251": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12253": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12254": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12255": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12256": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12258": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12260": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12261": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12263": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12264": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16747
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12265": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16754
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "12267": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16732,
        16754
      ],
      "op": "ADD",
      "path": "12"
    },
    "12268": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16731,
        16805
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12269": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16731,
        16805
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12270": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16731,
        16805
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12271": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16731,
        16805
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12272": {
      "op": "POP"
    },
    "12273": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16853,
        16882
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 128,
      "value": "0x2FFB"
    },
    "12276": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16853,
        16882
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12277": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16880,
        16881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12279": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16853,
        16879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12282": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16853,
        16882
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12283": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16853,
        16882
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12284": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12286": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12287": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12288": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12289": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16835
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12291": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12293": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12294": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12296": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12297": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16843
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12298": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16850
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x19"
    },
    "12300": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16850
      ],
      "op": "ADD",
      "path": "12"
    },
    "12301": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16828,
        16882
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12302": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16938,
        16968
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 129,
      "value": "0x3018"
    },
    "12305": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16948,
        16950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12307": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16952,
        16967
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12308": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16938,
        16947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4138"
    },
    "12311": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        16938,
        16968
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12312": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16938,
        16968
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12313": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12315": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12316": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12317": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12318": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16900
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12320": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12322": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12323": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12325": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12326": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16908
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12327": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "12329": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16893,
        16917
      ],
      "op": "ADD",
      "path": "12"
    },
    "12330": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16892,
        16968
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12331": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16892,
        16968
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12332": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16892,
        16968
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12333": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16892,
        16968
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        17018,
        17049
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 130,
      "value": "0x3039"
    },
    "12338": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        17018,
        17049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12339": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        17047,
        17048
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12341": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        17018,
        17046
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "12344": {
      "fn": "CryptoChampions.trainHero",
      "jump": "i",
      "offset": [
        17018,
        17049
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12345": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        17018,
        17049
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12346": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12348": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "12349": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12350": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12351": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        16998
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "12353": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12355": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12356": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12358": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12359": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "12360": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17006
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12361": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17015
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1A"
    },
    "12363": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17015
      ],
      "op": "ADD",
      "path": "12"
    },
    "12364": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17049
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "12365": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12366": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17049
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "12367": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        16991,
        17049
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "POP"
    },
    "12370": {
      "op": "POP"
    },
    "12371": {
      "op": "POP"
    },
    "12372": {
      "fn": "CryptoChampions.trainHero",
      "jump": "o",
      "offset": [
        14205,
        17056
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12373": {
      "offset": [
        2086,
        2117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12374": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "12376": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12377": {
      "fn": "CryptoChampions.trainHero",
      "offset": [
        2086,
        2117
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12378": {
      "fn": "CryptoChampions.trainHero",
      "jump": "o",
      "offset": [
        2086,
        2117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12379": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12380": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3072"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12385": {
      "op": "DUP1"
    },
    "12386": {
      "op": "MLOAD"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12389": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "12392": {
      "op": "DUP4"
    },
    "12393": {
      "op": "CODECOPY"
    },
    "12394": {
      "op": "DUP2"
    },
    "12395": {
      "op": "MLOAD"
    },
    "12396": {
      "op": "SWAP2"
    },
    "12397": {
      "op": "MSTORE"
    },
    "12398": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "12401": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12402": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12403": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7042
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 131,
      "value": "0x6"
    },
    "12405": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12406": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12407": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7045,
        7050
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12408": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7045,
        7050
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12409": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7042
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12410": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12412": {
      "op": "NOT"
    },
    "12413": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "AND",
      "path": "12"
    },
    "12414": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12416": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7045,
        7050
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12417": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12418": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12419": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "GT",
      "path": "12"
    },
    "12420": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12421": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x308A"
    },
    "12424": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12425": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "INVALID",
      "path": "12"
    },
    "12426": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12427": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "MUL",
      "path": "12"
    },
    "12428": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "OR",
      "path": "12"
    },
    "12429": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12430": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12431": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        7030,
        7050
      ],
      "op": "POP",
      "path": "12"
    },
    "12432": {
      "fn": "CryptoChampions.setPhase",
      "offset": [
        6970,
        7057
      ],
      "op": "POP",
      "path": "12"
    },
    "12433": {
      "fn": "CryptoChampions.setPhase",
      "jump": "o",
      "offset": [
        6970,
        7057
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12434": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3255,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12435": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3318,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12437": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 132
    },
    "12438": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12439": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12440": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12442": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12443": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12444": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12445": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12447": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12448": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12449": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1322"
    },
    "12452": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12453": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3344,
        3371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x415E"
    },
    "12456": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3344,
        3373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12457": {
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12458": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "12460": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12461": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12462": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "o",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12463": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5101,
        5327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12464": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 133,
      "value": "0x0"
    },
    "12466": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12467": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12468": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12469": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12471": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12472": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12473": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12474": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12476": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12477": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5205
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "12478": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "12480": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "ADD",
      "path": "0"
    },
    "12481": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5193,
        5215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12482": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30CD"
    },
    "12485": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12486": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD2"
    },
    "12489": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5217,
        5227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "12492": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5217,
        5229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12493": {
      "branch": 252,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5185,
        5230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12494": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E73"
    },
    "12497": {
      "branch": 252,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12498": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12500": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12507": {
      "op": "SHL"
    },
    "12508": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12509": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12510": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12512": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12513": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12514": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12515": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12517": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12518": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12519": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12520": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12521": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12522": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12523": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12525": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12526": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12527": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12529": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12530": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12531": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B6E"
    },
    "12534": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x30"
    },
    "12536": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12537": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "12538": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12540": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "ADD",
      "path": "0"
    },
    "12541": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12542": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12543": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "POP",
      "path": "0"
    },
    "12544": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12546": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12547": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12548": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12549": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SUB",
      "path": "0"
    },
    "12550": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12551": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5177,
        5283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12552": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12553": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x311F"
    },
    "12556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12558": {
      "op": "DUP1"
    },
    "12559": {
      "op": "MLOAD"
    },
    "12560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "12565": {
      "op": "DUP4"
    },
    "12566": {
      "op": "CODECOPY"
    },
    "12567": {
      "op": "DUP2"
    },
    "12568": {
      "op": "MLOAD"
    },
    "12569": {
      "op": "SWAP2"
    },
    "12570": {
      "op": "MSTORE"
    },
    "12571": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "12574": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12575": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12576": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8012,
        8026
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 134,
      "value": "0xE"
    },
    "12578": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        8012,
        8034
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12579": {
      "fn": "CryptoChampions.setElderMintPrice",
      "jump": "o",
      "offset": [
        7932,
        8041
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12580": {
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12581": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "12583": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12584": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12585": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12586": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12587": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "LT",
      "path": "12"
    },
    "12588": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2752"
    },
    "12591": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12592": {
      "fn": "CryptoChampions.setElderMintPrice",
      "offset": [
        3175,
        3201
      ],
      "op": "INVALID",
      "path": "12"
    },
    "12593": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12600": {
      "op": "SHL"
    },
    "12601": {
      "op": "SUB"
    },
    "12602": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 135
    },
    "12603": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12604": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "AND",
      "path": "5"
    },
    "12605": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4431,
        4435
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12607": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12608": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12609": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12610": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4472
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12612": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12614": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12615": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12616": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12617": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12619": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12620": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12621": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4481
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12622": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12623": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12624": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12625": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12626": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12627": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12628": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12629": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12630": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12631": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12632": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12633": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12634": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "12636": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "AND",
      "path": "5"
    },
    "12637": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        4454,
        4491
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12638": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "o",
      "offset": [
        4332,
        4498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12639": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4565,
        5462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12646": {
      "op": "SHL"
    },
    "12647": {
      "op": "SUB"
    },
    "12648": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 136
    },
    "12649": {
      "branch": 262,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4780,
        4796
      ],
      "op": "AND",
      "path": "5"
    },
    "12650": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31A4"
    },
    "12653": {
      "branch": 262,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12654": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12656": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12663": {
      "op": "SHL"
    },
    "12664": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12665": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12666": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12668": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12669": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12670": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12671": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12673": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12675": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12676": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12677": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12678": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12679": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12681": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12682": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12685": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12686": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12687": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B9E"
    },
    "12690": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "12692": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12694": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12696": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "ADD",
      "path": "5"
    },
    "12697": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12698": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12699": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "POP",
      "path": "5"
    },
    "12700": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12702": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12704": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SUB",
      "path": "5"
    },
    "12706": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12707": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12708": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4772,
        4838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 137,
      "value": "0x31AC"
    },
    "12712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4887
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "12715": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12716": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4877,
        4889
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12723": {
      "op": "SHL"
    },
    "12724": {
      "op": "SUB"
    },
    "12725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12726": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4873
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12733": {
      "op": "SHL"
    },
    "12734": {
      "op": "SUB"
    },
    "12735": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "12736": {
      "branch": 263,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4889
      ],
      "op": "EQ",
      "path": "5"
    },
    "12737": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D2"
    },
    "12741": {
      "branch": 263,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12742": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4869,
        4929
      ],
      "op": "POP",
      "path": "5"
    },
    "12743": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D2"
    },
    "12746": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4910,
        4914
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12747": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A47"
    },
    "12750": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4916,
        4926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "12753": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4916,
        4928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12754": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4893,
        4929
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x320D"
    },
    "12758": {
      "branch": 264,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12759": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12761": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12768": {
      "op": "SHL"
    },
    "12769": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12770": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12771": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12773": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12774": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12775": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12776": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12778": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12779": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12780": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12781": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12782": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12783": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12784": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12786": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12787": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12788": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12790": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12791": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12792": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B45"
    },
    "12795": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x29"
    },
    "12797": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12798": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12799": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12801": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "ADD",
      "path": "5"
    },
    "12802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12804": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "12805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12807": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12808": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12809": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12810": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SUB",
      "path": "5"
    },
    "12811": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12812": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12813": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4848,
        4996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12814": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12816": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3217"
    },
    "12819": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "12822": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12823": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5026,
        5038
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12824": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12825": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5007,
        5038
      ],
      "op": "POP",
      "path": "5"
    },
    "12826": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 138,
      "value": "0x3237"
    },
    "12829": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5070,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12830": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5080,
        5084
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12831": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5086,
        5088
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12832": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3228"
    },
    "12835": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5108,
        5110
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12836": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4169"
    },
    "12839": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12840": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5090,
        5111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12841": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3231"
    },
    "12844": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5131,
        5137
      ],
      "op": "DUP9",
      "path": "5"
    },
    "12845": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5130
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4169"
    },
    "12848": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12849": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5113,
        5138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12850": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5140,
        5144
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12851": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5069
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392D"
    },
    "12854": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12855": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5049,
        5145
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12856": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 139,
      "value": "0x327E"
    },
    "12859": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5202,
        5208
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12860": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12862": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12863": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12864": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12866": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12867": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12869": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12870": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12871": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12873": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12874": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12875": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12877": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "ADD",
      "path": "5"
    },
    "12878": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C38"
    },
    "12881": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "12883": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12884": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "12885": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12887": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12888": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12889": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12890": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12892": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12894": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12895": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12896": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12897": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12899": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12900": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12901": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5191
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12908": {
      "op": "SHL"
    },
    "12909": {
      "op": "SUB"
    },
    "12910": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP14",
      "path": "5"
    },
    "12911": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "AND",
      "path": "5"
    },
    "12912": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12913": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12914": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12915": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12916": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12917": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12918": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12919": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12920": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12921": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12922": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A3F"
    },
    "12925": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12926": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5178,
        5255
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12927": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12929": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12930": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12931": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12932": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5165
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12934": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12936": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12937": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12938": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12939": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12941": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12942": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12943": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5169
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12950": {
      "op": "SHL"
    },
    "12951": {
      "op": "SUB"
    },
    "12952": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP12",
      "path": "5"
    },
    "12953": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12954": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "AND",
      "path": "5"
    },
    "12955": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12956": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12957": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12958": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12959": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12960": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12961": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5175
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12962": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12963": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12964": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12965": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5156,
        5255
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12966": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP8",
      "path": "5",
      "statement": 140
    },
    "12967": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "AND",
      "path": "5"
    },
    "12968": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12969": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12970": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12971": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5302
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12972": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32B5"
    },
    "12975": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12976": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5307,
        5313
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12977": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C6"
    },
    "12980": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12981": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5285,
        5314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12982": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12984": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12985": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12986": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12987": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12989": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12991": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12992": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12993": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12994": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12996": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12997": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12998": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5278
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13005": {
      "op": "SHL"
    },
    "13006": {
      "op": "SUB"
    },
    "13007": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13008": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP12",
      "path": "5"
    },
    "13009": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "AND",
      "path": "5"
    },
    "13010": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13011": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13012": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13013": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13014": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13015": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13016": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13017": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13018": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13019": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5282
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13020": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13021": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13022": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "13023": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5265,
        5314
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "13024": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 141
    },
    "13025": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13026": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13027": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13028": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13029": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13030": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13031": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "13032": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13033": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13034": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13035": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13036": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13037": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP11",
      "path": "5"
    },
    "13038": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13039": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "13040": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "13041": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP7",
      "path": "5"
    },
    "13042": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "AND",
      "path": "5"
    },
    "13043": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13044": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "13077": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "13078": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13079": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13080": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13081": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SUB",
      "path": "5"
    },
    "13082": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "ADD",
      "path": "5"
    },
    "13083": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13084": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5330,
        5376
      ],
      "op": "LOG4",
      "path": "5"
    },
    "13085": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 142,
      "value": "0x1C8F"
    },
    "13088": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5418,
        5426
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13089": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5428,
        5432
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13090": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5434,
        5436
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13091": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5438,
        5440
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13092": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5442,
        5448
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13093": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5450,
        5454
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13094": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        5387,
        5417
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41AD"
    },
    "13097": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        5387,
        5455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13098": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13099": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20666,
        20673
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13101": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20640,
        20647
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13102": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13104": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13105": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "13106": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13107": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13108": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x333E"
    },
    "13111": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13112": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "13113": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "13115": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13116": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "13117": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13118": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13119": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3347"
    },
    "13122": {
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13123": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13125": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13126": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13127": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13128": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20706,
        20718
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 143,
      "value": "0xF"
    },
    "13130": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20706,
        20718
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13131": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20697,
        20702
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13132": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20697,
        20718
      ],
      "op": "GT",
      "path": "12"
    },
    "13133": {
      "branch": 239,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20697,
        20718
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13134": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3356"
    },
    "13137": {
      "branch": 239,
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13138": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13140": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13141": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13142": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20689,
        20719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13143": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20777,
        20795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13145": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13146": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13147": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13148": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "13150": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13152": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13153": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13154": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13155": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13157": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13158": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13159": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20822
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "13160": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13161": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13162": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13163": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13164": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13165": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13166": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13167": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "13168": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20831
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13169": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20838
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x337B"
    },
    "13172": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20838
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13173": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20836,
        20837
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13175": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20835
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "13178": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        20798,
        20838
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13179": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20798,
        20838
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13180": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20777,
        20838
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13181": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20777,
        20838
      ],
      "op": "POP",
      "path": "12"
    },
    "13182": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20856,
        20881
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 144,
      "value": "0x3386"
    },
    "13185": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20870,
        20880
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13186": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20856,
        20869
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x431E"
    },
    "13189": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "i",
      "offset": [
        20856,
        20881
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13190": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20856,
        20881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13191": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20849,
        20881
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "13192": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "offset": [
        20508,
        20888
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "13193": {
      "op": "POP"
    },
    "13194": {
      "op": "POP"
    },
    "13195": {
      "op": "POP"
    },
    "13196": {
      "op": "POP"
    },
    "13197": {
      "op": "POP"
    },
    "13198": {
      "fn": "CryptoChampions.getHeroMintPrice",
      "jump": "o",
      "offset": [
        20508,
        20888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13199": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13200": {
      "offset": [
        6097,
        6117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33A6"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13205": {
      "op": "DUP1"
    },
    "13206": {
      "op": "MLOAD"
    },
    "13207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13209": {
      "op": "PUSH2",
      "value": "0x4BF5"
    },
    "13212": {
      "op": "DUP4"
    },
    "13213": {
      "op": "CODECOPY"
    },
    "13214": {
      "op": "DUP2"
    },
    "13215": {
      "op": "MLOAD"
    },
    "13216": {
      "op": "SWAP2"
    },
    "13217": {
      "op": "MSTORE"
    },
    "13218": {
      "offset": [
        6097,
        6105
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4C"
    },
    "13221": {
      "jump": "i",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13222": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6097,
        6117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13223": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28576
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "13225": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28576
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13226": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13228": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13229": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13230": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13231": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13232": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "ADD",
      "path": "12"
    },
    "13233": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13234": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13235": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "13237": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13238": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13239": {
      "op": "PUSH10",
      "value": "0x50524943455F57415253"
    },
    "13250": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "13252": {
      "op": "SHL"
    },
    "13253": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13255": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13256": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13257": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "ADD",
      "path": "12"
    },
    "13258": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13259": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13260": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13261": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13262": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13263": {
      "op": "PUSH4",
      "value": "0x6CADCD79"
    },
    "13268": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13270": {
      "op": "SHL"
    },
    "13271": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13272": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13273": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "13275": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13276": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13277": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "13278": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13279": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13280": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13281": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13282": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "13284": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13285": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13286": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13287": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13288": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13289": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28518,
        28549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13291": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28518,
        28549
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "13292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13298": {
      "op": "SHL"
    },
    "13299": {
      "op": "SUB"
    },
    "13300": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28576
      ],
      "op": "AND",
      "path": "12"
    },
    "13301": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28576
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "13302": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28587
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD95B9AF2"
    },
    "13307": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28587
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "13308": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "13309": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13310": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13311": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13312": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13313": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "13315": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13316": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13317": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13318": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13319": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13320": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13321": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13322": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28588,
        28601
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13323": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28518,
        28549
      ],
      "op": "DUP12",
      "path": "12"
    },
    "13324": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13325": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13326": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13327": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "LT",
      "path": "12"
    },
    "13328": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13329": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3424"
    },
    "13332": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13333": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13334": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13335": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13336": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13337": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13338": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13339": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13340": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13341": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13343": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13344": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x340C"
    },
    "13347": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13348": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13349": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13350": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13351": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13352": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13353": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13354": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13355": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13356": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13357": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13358": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13359": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13361": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "AND",
      "path": "12"
    },
    "13362": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13363": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13364": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3451"
    },
    "13367": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13368": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13369": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13370": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SUB",
      "path": "12"
    },
    "13371": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13372": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13373": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13375": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13376": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13378": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SUB",
      "path": "12"
    },
    "13379": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "13382": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "EXP",
      "path": "12"
    },
    "13383": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SUB",
      "path": "12"
    },
    "13384": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "NOT",
      "path": "12"
    },
    "13385": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "AND",
      "path": "12"
    },
    "13386": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13387": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13388": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13390": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ADD",
      "path": "12"
    },
    "13391": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13392": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13393": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13394": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13395": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13396": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13397": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13398": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13399": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13401": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13403": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13404": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13405": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13406": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SUB",
      "path": "12"
    },
    "13407": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13408": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13410": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13411": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13412": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "13413": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13414": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13415": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13416": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3470"
    },
    "13419": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13420": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13422": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13423": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13424": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13425": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13426": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "GAS",
      "path": "12"
    },
    "13427": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "CALL",
      "path": "12"
    },
    "13428": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13429": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13430": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13431": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3484"
    },
    "13434": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13435": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13436": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13438": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13439": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "13440": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13441": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13443": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13444": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13445": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13446": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13447": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13448": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "POP",
      "path": "12"
    },
    "13449": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13451": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13452": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13453": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13455": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13456": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "LT",
      "path": "12"
    },
    "13457": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13458": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x349A"
    },
    "13461": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13462": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13464": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13465": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13466": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13467": {
      "op": "POP"
    },
    "13468": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13469": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13471": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13472": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13473": {
      "op": "PUSH4",
      "value": "0x72D7F665"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13480": {
      "op": "SHL"
    },
    "13481": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13482": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13483": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28760,
        28764
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "13484": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "13486": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13487": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ADD",
      "path": "12"
    },
    "13488": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13489": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13490": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13491": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13492": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13493": {
      "op": "POP"
    },
    "13494": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13495": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13496": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28612,
        28645
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13498": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28612,
        28645
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13505": {
      "op": "SHL"
    },
    "13506": {
      "op": "SUB"
    },
    "13507": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13508": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "AND",
      "path": "12"
    },
    "13509": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13510": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE5AFECCA"
    },
    "13515": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13516": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "13518": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13519": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13520": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ADD",
      "path": "12"
    },
    "13521": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13522": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13524": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28552,
        28602
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13525": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13526": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13527": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13528": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13529": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13530": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SUB",
      "path": "12"
    },
    "13531": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ADD",
      "path": "12"
    },
    "13532": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13533": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28612,
        28645
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13534": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28751
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13535": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13536": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "13537": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13538": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13539": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13540": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34EC"
    },
    "13543": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13544": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13546": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13547": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13548": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13549": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "POP",
      "path": "12"
    },
    "13550": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "GAS",
      "path": "12"
    },
    "13551": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "CALL",
      "path": "12"
    },
    "13552": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13553": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13554": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13555": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3500"
    },
    "13558": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13559": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13560": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13562": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13563": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "13564": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13565": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13567": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13568": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13569": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "POP",
      "path": "12"
    },
    "13570": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "POP",
      "path": "12"
    },
    "13571": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "POP",
      "path": "12"
    },
    "13572": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "POP",
      "path": "12"
    },
    "13573": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13575": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13576": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13577": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13579": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13580": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "LT",
      "path": "12"
    },
    "13581": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13582": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3516"
    },
    "13585": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13586": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13588": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13589": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13590": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13591": {
      "op": "POP"
    },
    "13592": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13593": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13594": {
      "op": "POP"
    },
    "13595": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28776,
        28821
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 145,
      "value": "0x3544"
    },
    "13598": {
      "offset": [
        1484,
        1512
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAE0C232B87105E0A8134F8B92146DCD1D99373D32394BE9D70F700F90B3A3DB3"
    },
    "13631": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28720,
        28766
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13632": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28776,
        28785
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DB4"
    },
    "13635": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "i",
      "offset": [
        28776,
        28821
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13636": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28776,
        28821
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13637": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28839
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 146
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13644": {
      "op": "SHL"
    },
    "13645": {
      "op": "SUB"
    },
    "13646": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28849
      ],
      "op": "AND",
      "path": "12"
    },
    "13647": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28849
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD65AB5F2"
    },
    "13652": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13654": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13655": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13656": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "13661": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "AND",
      "path": "12"
    },
    "13662": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "13664": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "SHL",
      "path": "12"
    },
    "13665": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13666": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13667": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "13669": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "ADD",
      "path": "12"
    },
    "13670": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13672": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13674": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13675": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13676": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13677": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "SUB",
      "path": "12"
    },
    "13678": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13679": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13681": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13682": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13683": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "13684": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13685": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13686": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13687": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x357F"
    },
    "13690": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13691": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13693": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13694": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13695": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13696": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "POP",
      "path": "12"
    },
    "13697": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "GAS",
      "path": "12"
    },
    "13698": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "CALL",
      "path": "12"
    },
    "13699": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13700": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13701": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13702": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3593"
    },
    "13705": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13706": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13707": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13709": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13710": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "13711": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13712": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13714": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13715": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13716": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "POP",
      "path": "12"
    },
    "13717": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "POP",
      "path": "12"
    },
    "13718": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "POP",
      "path": "12"
    },
    "13719": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        28831,
        28851
      ],
      "op": "POP",
      "path": "12"
    },
    "13720": {
      "offset": [
        6127,
        6128
      ],
      "op": "POP",
      "path": "12"
    },
    "13721": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6127,
        6128
      ],
      "op": "POP",
      "path": "12"
    },
    "13722": {
      "fn": "CryptoChampions.startNewPriceGame",
      "offset": [
        6127,
        6128
      ],
      "op": "POP",
      "path": "12"
    },
    "13723": {
      "fn": "CryptoChampions.startNewPriceGame",
      "jump": "o",
      "offset": [
        28451,
        28858
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13724": {
      "fn": "EnumerableSet.add",
      "offset": [
        6429,
        6579
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13725": {
      "fn": "EnumerableSet.add",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "13727": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6572
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 147,
      "value": "0x2937"
    },
    "13730": {
      "fn": "EnumerableSet.add",
      "offset": [
        6527,
        6530
      ],
      "op": "DUP4",
      "path": "11"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13737": {
      "op": "SHL"
    },
    "13738": {
      "op": "SUB"
    },
    "13739": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "DUP5",
      "path": "11"
    },
    "13740": {
      "fn": "EnumerableSet.add",
      "offset": [
        6547,
        6570
      ],
      "op": "AND",
      "path": "11"
    },
    "13741": {
      "fn": "EnumerableSet.add",
      "offset": [
        6522,
        6526
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4370"
    },
    "13744": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6522,
        6572
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13745": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6984,
        7149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13746": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "13748": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7142
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 148,
      "value": "0x2937"
    },
    "13751": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7097,
        7100
      ],
      "op": "DUP4",
      "path": "11"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13758": {
      "op": "SHL"
    },
    "13759": {
      "op": "SUB"
    },
    "13760": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "DUP5",
      "path": "11"
    },
    "13761": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7117,
        7140
      ],
      "op": "AND",
      "path": "11"
    },
    "13762": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43BA"
    },
    "13765": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7087,
        7142
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13766": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "13767": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13769": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13770": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13771": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "3"
    },
    "13772": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 149
    },
    "13773": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13774": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "3"
    },
    "13775": {
      "branch": 274,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "13776": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2937"
    },
    "13779": {
      "branch": 274,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13780": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "13782": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "3"
    },
    "13783": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13790": {
      "op": "SHL"
    },
    "13791": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13792": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13793": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "13795": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "13797": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13798": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13799": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13800": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "13802": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "13804": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13805": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13806": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13807": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "13840": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "13842": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "3"
    },
    "13843": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13844": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "13845": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13846": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "13847": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13848": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "3"
    },
    "13849": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13850": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "3"
    },
    "13851": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "13853": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "3"
    },
    "13854": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "13855": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "3"
    },
    "13856": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "13857": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 150
    },
    "13858": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13859": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "13860": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13867": {
      "op": "SHL"
    },
    "13868": {
      "op": "SUB"
    },
    "13869": {
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 151
    },
    "13870": {
      "branch": 265,
      "fn": "ERC1155._mint",
      "offset": [
        8129,
        8150
      ],
      "op": "AND",
      "path": "5"
    },
    "13871": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3669"
    },
    "13874": {
      "branch": 265,
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13875": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13877": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13884": {
      "op": "SHL"
    },
    "13885": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13886": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13887": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13889": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13890": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13891": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13892": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13894": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13895": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13896": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13897": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13898": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "13899": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13900": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13902": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13903": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13904": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13906": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13907": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13908": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CFD"
    },
    "13911": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "13913": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13914": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "13915": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13917": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "ADD",
      "path": "5"
    },
    "13918": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13919": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13920": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "POP",
      "path": "5"
    },
    "13921": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13923": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "13924": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13925": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13926": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SUB",
      "path": "5"
    },
    "13927": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13928": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "REVERT",
      "path": "5"
    },
    "13929": {
      "fn": "ERC1155._mint",
      "offset": [
        8121,
        8188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13930": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13932": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3673"
    },
    "13935": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "13938": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13939": {
      "fn": "ERC1155._mint",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13940": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13941": {
      "fn": "ERC1155._mint",
      "offset": [
        8199,
        8230
      ],
      "op": "POP",
      "path": "5"
    },
    "13942": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 152,
      "value": "0x3685"
    },
    "13945": {
      "fn": "ERC1155._mint",
      "offset": [
        8262,
        8270
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13946": {
      "fn": "ERC1155._mint",
      "offset": [
        8280,
        8281
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "13948": {
      "fn": "ERC1155._mint",
      "offset": [
        8284,
        8291
      ],
      "op": "DUP8",
      "path": "5"
    },
    "13949": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3228"
    },
    "13952": {
      "fn": "ERC1155._mint",
      "offset": [
        8311,
        8313
      ],
      "op": "DUP9",
      "path": "5"
    },
    "13953": {
      "fn": "ERC1155._mint",
      "offset": [
        8293,
        8310
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4169"
    },
    "13956": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8293,
        8314
      ],
      "op": "JUMP",
      "path": "5"
    },
    "13957": {
      "fn": "ERC1155._mint",
      "offset": [
        8241,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "13958": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 153,
      "value": "0x0"
    },
    "13960": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13961": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13962": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13963": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "13965": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "13967": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13968": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "13969": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13970": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "13972": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP1",
      "path": "5"
    },
    "13973": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "13974": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13981": {
      "op": "SHL"
    },
    "13982": {
      "op": "SUB"
    },
    "13983": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP10",
      "path": "5"
    },
    "13984": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "AND",
      "path": "5"
    },
    "13985": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13986": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13987": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13988": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "13989": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "13990": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13991": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "13992": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8406
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "13993": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36B2"
    },
    "13996": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "13997": {
      "fn": "ERC1155._mint",
      "offset": [
        8411,
        8417
      ],
      "op": "DUP5",
      "path": "5"
    },
    "13998": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C6"
    },
    "14001": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14002": {
      "fn": "ERC1155._mint",
      "offset": [
        8384,
        8418
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14003": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14005": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14006": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14007": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14008": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8368
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14010": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14012": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14013": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14014": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14015": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14017": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14018": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14019": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8372
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14026": {
      "op": "SHL"
    },
    "14027": {
      "op": "SUB"
    },
    "14028": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14029": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP12",
      "path": "5"
    },
    "14030": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "AND",
      "path": "5"
    },
    "14031": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14032": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14033": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14034": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14035": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14036": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14037": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14038": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14039": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14040": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14041": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14042": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14043": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8418
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "14044": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 154
    },
    "14045": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14046": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP10",
      "path": "5"
    },
    "14047": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14048": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14049": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14050": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14051": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "14052": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP9",
      "path": "5"
    },
    "14053": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14054": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14055": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14056": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14057": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14058": {
      "fn": "ERC1155._mint",
      "offset": [
        8359,
        8381
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14059": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14060": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "AND",
      "path": "5"
    },
    "14061": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14062": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "14095": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14096": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14097": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14098": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14099": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SUB",
      "path": "5"
    },
    "14100": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "ADD",
      "path": "5"
    },
    "14101": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14102": {
      "fn": "ERC1155._mint",
      "offset": [
        8433,
        8490
      ],
      "op": "LOG4",
      "path": "5"
    },
    "14103": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 155,
      "value": "0x3725"
    },
    "14106": {
      "fn": "ERC1155._mint",
      "offset": [
        8532,
        8540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14107": {
      "fn": "ERC1155._mint",
      "offset": [
        8550,
        8551
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14109": {
      "fn": "ERC1155._mint",
      "offset": [
        8554,
        8561
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14110": {
      "fn": "ERC1155._mint",
      "offset": [
        8563,
        8565
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14111": {
      "fn": "ERC1155._mint",
      "offset": [
        8567,
        8573
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14112": {
      "fn": "ERC1155._mint",
      "offset": [
        8575,
        8579
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14113": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41AD"
    },
    "14116": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14117": {
      "fn": "ERC1155._mint",
      "offset": [
        8501,
        8580
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14118": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "14119": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "14120": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "14121": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "14122": {
      "fn": "ERC1155._mint",
      "offset": [
        8015,
        8587
      ],
      "op": "POP",
      "path": "5"
    },
    "14123": {
      "fn": "ERC1155._mint",
      "jump": "o",
      "offset": [
        8015,
        8587
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14124": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22812,
        23049
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14125": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22894,
        22895
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14127": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22872,
        22891
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3738"
    },
    "14130": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22872,
        22881
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "14131": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22886,
        22890
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14132": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22872,
        22885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38D0"
    },
    "14135": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        22872,
        22891
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14136": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22872,
        22891
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14137": {
      "branch": 240,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22872,
        22895
      ],
      "op": "GT",
      "path": "12"
    },
    "14138": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22868,
        23043
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14139": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22868,
        23043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x379A"
    },
    "14142": {
      "branch": 240,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22868,
        23043
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14143": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22912,
        22924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14145": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22940
      ],
      "op": "CALLER",
      "path": "12"
    },
    "14146": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22954,
        22973
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x374B"
    },
    "14149": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22954,
        22963
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "14150": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22968,
        22972
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14151": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22954,
        22967
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38D0"
    },
    "14154": {
      "fn": "CryptoChampions._refundSender",
      "jump": "i",
      "offset": [
        22954,
        22973
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14155": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22954,
        22973
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14156": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "14158": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14159": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14161": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14162": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14163": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14164": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP6",
      "path": "12"
    },
    "14165": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP8",
      "path": "12"
    },
    "14166": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "GAS",
      "path": "12"
    },
    "14167": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "CALL",
      "path": "12"
    },
    "14168": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "14169": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14170": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14171": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14172": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "14173": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP1",
      "path": "12"
    },
    "14174": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14176": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14177": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "EQ",
      "path": "12"
    },
    "14178": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3787"
    },
    "14181": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14182": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "14184": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14185": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "14186": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14187": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "14189": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "NOT",
      "path": "12"
    },
    "14190": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "14192": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "14193": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "ADD",
      "path": "12"
    },
    "14194": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "AND",
      "path": "12"
    },
    "14195": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14196": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "ADD",
      "path": "12"
    },
    "14197": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "14199": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14200": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "14201": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14202": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14203": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "14204": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14206": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14208": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14209": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "ADD",
      "path": "12"
    },
    "14210": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "14211": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378C"
    },
    "14214": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14215": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14216": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "14218": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "14219": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14220": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14221": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22930,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14222": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22911,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14223": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22911,
        22979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14224": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22911,
        22979
      ],
      "op": "POP",
      "path": "12"
    },
    "14225": {
      "branch": 241,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        23001,
        23008
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 156
    },
    "14226": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22993,
        23009
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DB0"
    },
    "14229": {
      "branch": 241,
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22993,
        23009
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14230": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22993,
        23009
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14232": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22993,
        23009
      ],
      "op": "DUP1",
      "path": "12"
    },
    "14233": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22993,
        23009
      ],
      "op": "REVERT",
      "path": "12"
    },
    "14234": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22868,
        23043
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14235": {
      "fn": "CryptoChampions._refundSender",
      "offset": [
        22812,
        23049
      ],
      "op": "POP",
      "path": "12"
    },
    "14236": {
      "fn": "CryptoChampions._refundSender",
      "jump": "o",
      "offset": [
        22812,
        23049
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14237": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14244": {
      "op": "SHL"
    },
    "14245": {
      "op": "SUB"
    },
    "14246": {
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 157
    },
    "14247": {
      "branch": 266,
      "fn": "ERC1155._burn",
      "offset": [
        9976,
        9997
      ],
      "op": "AND",
      "path": "5"
    },
    "14248": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37E2"
    },
    "14251": {
      "branch": 266,
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14252": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14254": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14261": {
      "op": "SHL"
    },
    "14262": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14263": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14264": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14266": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14267": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14268": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14269": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14271": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14272": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14273": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14274": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "14275": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14276": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14277": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "14279": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14280": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14281": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14283": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14284": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14285": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C15"
    },
    "14288": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "14290": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14291": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14292": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14294": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "ADD",
      "path": "5"
    },
    "14295": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14296": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "14297": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "POP",
      "path": "5"
    },
    "14298": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14300": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14301": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14302": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14303": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SUB",
      "path": "5"
    },
    "14304": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14305": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14306": {
      "fn": "ERC1155._burn",
      "offset": [
        9968,
        10037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14307": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14309": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37EC"
    },
    "14312": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10077
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3620"
    },
    "14315": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14316": {
      "fn": "ERC1155._burn",
      "offset": [
        10067,
        10079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14317": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14318": {
      "fn": "ERC1155._burn",
      "offset": [
        10048,
        10079
      ],
      "op": "POP",
      "path": "5"
    },
    "14319": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 158,
      "value": "0x381C"
    },
    "14322": {
      "fn": "ERC1155._burn",
      "offset": [
        10111,
        10119
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14323": {
      "fn": "ERC1155._burn",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14324": {
      "fn": "ERC1155._burn",
      "offset": [
        10138,
        10139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14326": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37FE"
    },
    "14329": {
      "fn": "ERC1155._burn",
      "offset": [
        10160,
        10162
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14330": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10159
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4169"
    },
    "14333": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14334": {
      "fn": "ERC1155._burn",
      "offset": [
        10142,
        10163
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14335": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3807"
    },
    "14338": {
      "fn": "ERC1155._burn",
      "offset": [
        10183,
        10189
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14339": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10182
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4169"
    },
    "14342": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14343": {
      "fn": "ERC1155._burn",
      "offset": [
        10165,
        10190
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14344": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14346": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14347": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14348": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14350": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "ADD",
      "path": "5"
    },
    "14351": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14353": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14354": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14355": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14357": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14358": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14359": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "POP",
      "path": "5"
    },
    "14360": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10110
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392D"
    },
    "14363": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14364": {
      "fn": "ERC1155._burn",
      "offset": [
        10090,
        10195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14365": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 159,
      "value": "0x3863"
    },
    "14368": {
      "fn": "ERC1155._burn",
      "offset": [
        10271,
        10277
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14369": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14371": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14372": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14373": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14375": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14376": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14378": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14379": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14380": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14382": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14383": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14384": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14386": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "ADD",
      "path": "5"
    },
    "14387": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B21"
    },
    "14390": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14392": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14393": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14394": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14396": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14397": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14398": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14399": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14401": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14403": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14404": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14405": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14406": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14408": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14409": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14410": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10244
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14417": {
      "op": "SHL"
    },
    "14418": {
      "op": "SUB"
    },
    "14419": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP12",
      "path": "5"
    },
    "14420": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "AND",
      "path": "5"
    },
    "14421": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14422": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14423": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14424": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14425": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14426": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14427": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14428": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "14429": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14430": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14431": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A3F"
    },
    "14434": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14435": {
      "fn": "ERC1155._burn",
      "offset": [
        10231,
        10339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14436": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14438": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14439": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14440": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14441": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10215
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "14443": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14445": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14446": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14447": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14448": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14450": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14451": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14452": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14459": {
      "op": "SHL"
    },
    "14460": {
      "op": "SUB"
    },
    "14461": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14462": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP11",
      "path": "5"
    },
    "14463": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "AND",
      "path": "5"
    },
    "14464": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14465": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14466": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14467": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14468": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14469": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14470": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14471": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14472": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "14473": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14474": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14475": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "14476": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10339
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "14477": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 160
    },
    "14478": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14479": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP9",
      "path": "5"
    },
    "14480": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14481": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14482": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14483": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14484": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14485": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14486": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14487": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14488": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14489": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14490": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14491": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10219
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14492": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14493": {
      "fn": "ERC1155._burn",
      "offset": [
        10206,
        10228
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14494": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14495": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14496": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "AND",
      "path": "5"
    },
    "14497": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14498": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "14531": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14532": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14533": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14534": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14535": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SUB",
      "path": "5"
    },
    "14536": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "ADD",
      "path": "5"
    },
    "14537": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14538": {
      "fn": "ERC1155._burn",
      "offset": [
        10355,
        10412
      ],
      "op": "LOG4",
      "path": "5"
    },
    "14539": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14540": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14541": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14542": {
      "fn": "ERC1155._burn",
      "offset": [
        9881,
        10419
      ],
      "op": "POP",
      "path": "5"
    },
    "14543": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        9881,
        10419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14544": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14545": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14547": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 161
    },
    "14548": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14549": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "3"
    },
    "14550": {
      "branch": 275,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14551": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3927"
    },
    "14554": {
      "branch": 275,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14555": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14557": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14558": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14559": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14563": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14565": {
      "op": "SHL"
    },
    "14566": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14567": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14568": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14570": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14572": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14573": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14574": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14575": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "14577": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "14579": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14580": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14581": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14582": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "14615": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "14617": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14618": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14619": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14620": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14621": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14622": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14623": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14624": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14625": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "3"
    },
    "14626": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "14628": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "3"
    },
    "14629": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14630": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "14631": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14632": {
      "op": "POP"
    },
    "14633": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 162
    },
    "14634": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "3"
    },
    "14635": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14636": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14637": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21454,
        22158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14638": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21685,
        21751
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 163,
      "value": "0x393B"
    },
    "14641": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21712,
        21720
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14642": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21722,
        21726
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14643": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21728,
        21730
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14644": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21732,
        21735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14645": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21737,
        21744
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14646": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21746,
        21750
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14647": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21685,
        21711
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C8F"
    },
    "14650": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        21685,
        21751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14651": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21685,
        21751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14652": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21767,
        21776
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14654": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14655": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21786,
        21789
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14656": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21786,
        21796
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14657": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21782,
        21783
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14658": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21782,
        21796
      ],
      "op": "LT",
      "path": "12"
    },
    "14659": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14660": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3593"
    },
    "14663": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14664": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14666": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21909
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14667": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21910,
        21911
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14668": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14669": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14670": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14671": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "LT",
      "path": "12"
    },
    "14672": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3955"
    },
    "14675": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14676": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14677": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14678": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14680": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "MUL",
      "path": "12"
    },
    "14681": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14683": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "ADD",
      "path": "12"
    },
    "14684": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "ADD",
      "path": "12"
    },
    "14685": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21912
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14686": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21934
      ],
      "op": "GT",
      "path": "12"
    },
    "14687": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "DUP1",
      "path": "12"
    },
    "14688": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14689": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x397E"
    },
    "14692": {
      "branch": 242,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14693": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "POP",
      "path": "12"
    },
    "14694": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "14696": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21941
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14697": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21942,
        21943
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14698": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14699": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14700": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14701": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "LT",
      "path": "12"
    },
    "14702": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3973"
    },
    "14705": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14706": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14707": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14708": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14710": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "MUL",
      "path": "12"
    },
    "14711": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14713": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "ADD",
      "path": "12"
    },
    "14714": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "ADD",
      "path": "12"
    },
    "14715": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21944
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14716": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21968
      ],
      "op": "GT",
      "path": "12"
    },
    "14717": {
      "branch": 243,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21938,
        21968
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14718": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21906,
        21968
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14719": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21902,
        22037
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14720": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21902,
        22037
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39CF"
    },
    "14723": {
      "branch": 243,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21902,
        22037
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14724": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22019,
        22021
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 164
    },
    "14725": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "14727": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14729": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22004
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14730": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22005,
        22006
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14731": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14732": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14733": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14734": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "LT",
      "path": "12"
    },
    "14735": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "14738": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14739": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14740": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14741": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14743": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "MUL",
      "path": "12"
    },
    "14744": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14746": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "ADD",
      "path": "12"
    },
    "14747": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "ADD",
      "path": "12"
    },
    "14748": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22001,
        22007
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14749": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14750": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14751": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14753": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "ADD",
      "path": "12"
    },
    "14754": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14755": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14756": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14757": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14759": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "ADD",
      "path": "12"
    },
    "14760": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14762": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "14763": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14765": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "14768": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "EXP",
      "path": "12"
    },
    "14769": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14770": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "14771": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14778": {
      "op": "SHL"
    },
    "14779": {
      "op": "SUB"
    },
    "14780": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "MUL",
      "path": "12"
    },
    "14781": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "NOT",
      "path": "12"
    },
    "14782": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "AND",
      "path": "12"
    },
    "14783": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14784": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14791": {
      "op": "SHL"
    },
    "14792": {
      "op": "SUB"
    },
    "14793": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "AND",
      "path": "12"
    },
    "14794": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "MUL",
      "path": "12"
    },
    "14795": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "OR",
      "path": "12"
    },
    "14796": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14797": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "14798": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21988,
        22022
      ],
      "op": "POP",
      "path": "12"
    },
    "14799": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21902,
        22037
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14800": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "14802": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22057
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14803": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22058,
        22059
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14804": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14805": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14806": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14807": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "LT",
      "path": "12"
    },
    "14808": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39DD"
    },
    "14811": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14812": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14813": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14814": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14816": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "MUL",
      "path": "12"
    },
    "14817": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14819": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "ADD",
      "path": "12"
    },
    "14820": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "ADD",
      "path": "12"
    },
    "14821": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22060
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14822": {
      "branch": 244,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22054,
        22083
      ],
      "op": "GT",
      "path": "12"
    },
    "14823": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22050,
        22142
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "14824": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22050,
        22142
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A37"
    },
    "14827": {
      "branch": 244,
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22050,
        22142
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14828": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22125,
        22127
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 165
    },
    "14829": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "14831": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14833": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22118
      ],
      "op": "DUP7",
      "path": "12"
    },
    "14834": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22119,
        22120
      ],
      "op": "DUP5",
      "path": "12"
    },
    "14835": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14836": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14837": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14838": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "LT",
      "path": "12"
    },
    "14839": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39FC"
    },
    "14842": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "14843": {
      "dev": "Index out of range",
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "INVALID",
      "path": "12"
    },
    "14844": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14845": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14847": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "MUL",
      "path": "12"
    },
    "14848": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14850": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "ADD",
      "path": "12"
    },
    "14851": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "ADD",
      "path": "12"
    },
    "14852": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22115,
        22121
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14853": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14854": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14855": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14857": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "ADD",
      "path": "12"
    },
    "14858": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14859": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14860": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "14861": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "14863": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "ADD",
      "path": "12"
    },
    "14864": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14866": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "14867": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22122
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14869": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "14872": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "EXP",
      "path": "12"
    },
    "14873": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14874": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "14875": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14882": {
      "op": "SHL"
    },
    "14883": {
      "op": "SUB"
    },
    "14884": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "MUL",
      "path": "12"
    },
    "14885": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "NOT",
      "path": "12"
    },
    "14886": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "AND",
      "path": "12"
    },
    "14887": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14888": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14895": {
      "op": "SHL"
    },
    "14896": {
      "op": "SUB"
    },
    "14897": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "AND",
      "path": "12"
    },
    "14898": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "MUL",
      "path": "12"
    },
    "14899": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "OR",
      "path": "12"
    },
    "14900": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14901": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "14902": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22103,
        22127
      ],
      "op": "POP",
      "path": "12"
    },
    "14903": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        22050,
        22142
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14904": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21798,
        21801
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 166,
      "value": "0x1"
    },
    "14906": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21798,
        21801
      ],
      "op": "ADD",
      "path": "12"
    },
    "14907": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x393E"
    },
    "14910": {
      "fn": "CryptoChampions._beforeTokenTransfer",
      "offset": [
        21762,
        22152
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14911": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14912": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14914": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 167
    },
    "14915": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14916": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "3"
    },
    "14917": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "3"
    },
    "14918": {
      "branch": 276,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14919": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ACE"
    },
    "14922": {
      "branch": 276,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14923": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "14925": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14932": {
      "op": "SHL"
    },
    "14933": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14934": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14935": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "14937": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14938": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14939": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14940": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14942": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14943": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14944": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14945": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "14946": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14947": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14948": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14949": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14950": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14951": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14952": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14953": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14954": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14956": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14957": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "14958": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14959": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14960": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14961": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14962": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14964": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14965": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "14966": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14967": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14968": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14969": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14971": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14972": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14973": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14974": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "3"
    },
    "14975": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "14976": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A93"
    },
    "14979": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "14980": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14981": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "14982": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14983": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "14984": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "14985": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "14986": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14987": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "14988": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "14990": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "14991": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7B"
    },
    "14994": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "14995": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "14996": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14997": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14998": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "14999": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15000": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15001": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15002": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15003": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15004": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "15005": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15006": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "15008": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "15009": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15010": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "15011": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AC0"
    },
    "15014": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "15015": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15016": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "3"
    },
    "15017": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "15018": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15019": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15020": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "15022": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "3"
    },
    "15023": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15025": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "15026": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "15029": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "3"
    },
    "15030": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "15031": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "3"
    },
    "15032": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "3"
    },
    "15033": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "15034": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "15035": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "15037": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "3"
    },
    "15038": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15039": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15040": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15041": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15042": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "15043": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15044": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15045": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "3"
    },
    "15046": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "15048": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "15049": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15050": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "15051": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "3"
    },
    "15052": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15053": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "3"
    },
    "15054": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "15055": {
      "op": "POP"
    },
    "15056": {
      "op": "POP"
    },
    "15057": {
      "op": "POP"
    },
    "15058": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 168
    },
    "15059": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "3"
    },
    "15060": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "15061": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "3"
    },
    "15062": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13240,
        14018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15063": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AE8"
    },
    "15066": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13486
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15073": {
      "op": "SHL"
    },
    "15074": {
      "op": "SUB"
    },
    "15075": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "AND",
      "path": "5"
    },
    "15076": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43D2"
    },
    "15079": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15080": {
      "branch": 267,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13484,
        13499
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15081": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15082": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8F"
    },
    "15085": {
      "branch": 267,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13480,
        14012
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15086": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13536,
        13538
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15093": {
      "op": "SHL"
    },
    "15094": {
      "op": "SUB"
    },
    "15095": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "AND",
      "path": "5"
    },
    "15096": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13562
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBC197C81"
    },
    "15101": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13563,
        13571
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15102": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13573,
        13577
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15103": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13579,
        13582
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15104": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13584,
        13591
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15105": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13593,
        13597
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15106": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15108": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15109": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15110": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "15115": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15116": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "15118": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SHL",
      "path": "5"
    },
    "15119": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15120": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15121": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15123": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15124": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15125": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15132": {
      "op": "SHL"
    },
    "15133": {
      "op": "SUB"
    },
    "15134": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15135": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15136": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15137": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15139": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15140": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15147": {
      "op": "SHL"
    },
    "15148": {
      "op": "SUB"
    },
    "15149": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15150": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15151": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15152": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15154": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15155": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15156": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15158": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15159": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15160": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15162": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15163": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15164": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15166": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15167": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15168": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15169": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15170": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15171": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15172": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15173": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15174": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15175": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15176": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15177": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15178": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15180": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15181": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15182": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15183": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15184": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15185": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15186": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15188": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15189": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15190": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15192": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "15193": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15194": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15195": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15196": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15198": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15199": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15200": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15201": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15202": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15203": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B76"
    },
    "15206": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15207": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15208": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15209": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15210": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15211": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15212": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15213": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15214": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15215": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15217": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15218": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B5E"
    },
    "15221": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15222": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15223": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15224": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15225": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15226": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15227": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15228": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15229": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15230": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15231": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15232": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15233": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15234": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15235": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15236": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15237": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15238": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15239": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15240": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15241": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15243": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15244": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15245": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15246": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15247": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15248": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15249": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15251": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15252": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15253": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15255": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MUL",
      "path": "5"
    },
    "15256": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15257": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15258": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15259": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15261": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15262": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15263": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15264": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15265": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15266": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BB5"
    },
    "15269": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15270": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15271": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15272": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15273": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15274": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15275": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15276": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15277": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15278": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15280": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15281": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B9D"
    },
    "15284": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15285": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15286": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15287": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15288": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15289": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15290": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15291": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15292": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15293": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15294": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15295": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15296": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15297": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15298": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15299": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15300": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15301": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15302": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15303": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15304": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15306": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15307": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15308": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15309": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15310": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15311": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15312": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15314": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15315": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15316": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15317": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15318": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15319": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15321": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15322": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15323": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15324": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15325": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15326": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF1"
    },
    "15329": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15330": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15331": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15332": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15333": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15334": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15335": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15336": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15337": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15338": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15340": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15341": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD9"
    },
    "15344": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15345": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15346": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15348": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15349": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15350": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15351": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15352": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15353": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15354": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15355": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "15358": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15359": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15360": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15361": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1E"
    },
    "15364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15365": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15366": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15367": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15368": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15369": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15370": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15373": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "15379": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXP",
      "path": "5"
    },
    "15380": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "NOT",
      "path": "5"
    },
    "15382": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "AND",
      "path": "5"
    },
    "15383": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15384": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ADD",
      "path": "5"
    },
    "15388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15389": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15390": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15392": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "15393": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15394": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15396": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15397": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15398": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15399": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15402": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15404": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15409": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SUB",
      "path": "5"
    },
    "15410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP8",
      "path": "5"
    },
    "15414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15415": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "15416": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15417": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C43"
    },
    "15422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "GAS",
      "path": "5"
    },
    "15430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "CALL",
      "path": "5"
    },
    "15431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15434": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15437": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C68"
    },
    "15440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "POP",
      "path": "5"
    },
    "15442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15444": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "15446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "LT",
      "path": "5"
    },
    "15450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15451": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C63"
    },
    "15454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15460": {
      "op": "POP"
    },
    "15461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15462": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "15464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13519,
        13598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CFD"
    },
    "15468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C74"
    },
    "15472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49A3"
    },
    "15475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15476": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15477": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C7F"
    },
    "15481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "15483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CC6"
    },
    "15486": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15487": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 169,
      "value": "0x40"
    },
    "15490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15497": {
      "op": "SHL"
    },
    "15498": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15502": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15505": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15506": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15508": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15509": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "15513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15515": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15516": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15517": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "15520": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15524": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "15526": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15528": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15539": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A93"
    },
    "15542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15548": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15550": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15551": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "5"
    },
    "15554": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A7B"
    },
    "15557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 170,
      "value": "0x40"
    },
    "15561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15568": {
      "op": "SHL"
    },
    "15569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15570": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15571": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15573": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15574": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15575": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15576": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15579": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15580": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15581": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15583": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15584": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15586": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15587": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15590": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15591": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15592": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A49"
    },
    "15595": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x34"
    },
    "15597": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15598": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15599": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15601": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "5"
    },
    "15602": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15603": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15604": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "POP",
      "path": "5"
    },
    "15605": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15607": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15608": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15609": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15610": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SUB",
      "path": "5"
    },
    "15611": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15612": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15613": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13515,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15620": {
      "op": "SHL"
    },
    "15621": {
      "op": "SUB"
    },
    "15622": {
      "op": "NOT"
    },
    "15623": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15624": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "AND",
      "path": "5"
    },
    "15625": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15632": {
      "op": "SHL"
    },
    "15633": {
      "branch": 268,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13647,
        13711
      ],
      "op": "EQ",
      "path": "5"
    },
    "15634": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3593"
    },
    "15637": {
      "branch": 268,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13643,
        13804
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15638": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 171,
      "value": "0x40"
    },
    "15640": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15647": {
      "op": "SHL"
    },
    "15648": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15649": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15650": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15652": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15653": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15654": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15655": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15657": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15658": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15659": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15660": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15661": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15662": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15663": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15665": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15666": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15667": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15669": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15670": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15671": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A9F"
    },
    "15674": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "15676": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15677": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "15678": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15680": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15681": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15682": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15683": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "POP",
      "path": "5"
    },
    "15684": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15686": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15687": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15688": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15689": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SUB",
      "path": "5"
    },
    "15690": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15691": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15692": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7151,
        7271
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15693": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 172,
      "value": "0x3D56"
    },
    "15696": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7223,
        7227
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15697": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7229,
        7239
      ],
      "op": "CALLER",
      "path": "12"
    },
    "15698": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7215,
        7222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2943"
    },
    "15701": {
      "fn": "CryptoChampions._hasRole",
      "jump": "i",
      "offset": [
        7215,
        7240
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15702": {
      "branch": 245,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7215,
        7240
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15703": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7207,
        7241
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x379A"
    },
    "15706": {
      "branch": 245,
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7207,
        7241
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15707": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7207,
        7241
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15709": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7207,
        7241
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15710": {
      "fn": "CryptoChampions._hasRole",
      "offset": [
        7207,
        7241
      ],
      "op": "REVERT",
      "path": "12"
    },
    "15711": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15712": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15714": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15715": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15716": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15717": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15719": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15720": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15721": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15722": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15724": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15725": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15726": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D77"
    },
    "15729": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15730": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7123,
        7130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15731": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359C"
    },
    "15734": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15735": {
      "branch": 253,
      "fn": "AccessControl._grantRole",
      "offset": [
        7098,
        7131
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15736": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15737": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB0"
    },
    "15740": {
      "branch": 253,
      "fn": "AccessControl._grantRole",
      "offset": [
        7094,
        7203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15741": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 173,
      "value": "0x3D84"
    },
    "15744": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "15747": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15748": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7179,
        7191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15755": {
      "op": "SHL"
    },
    "15756": {
      "op": "SUB"
    },
    "15757": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15758": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7170,
        7177
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15765": {
      "op": "SHL"
    },
    "15766": {
      "op": "SUB"
    },
    "15767": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "AND",
      "path": "0"
    },
    "15768": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7164,
        7168
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15769": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "15802": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15804": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15805": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15807": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15808": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15809": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15810": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SUB",
      "path": "0"
    },
    "15811": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15812": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7152,
        7192
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15813": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15814": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7025,
        7209
      ],
      "op": "POP",
      "path": "0"
    },
    "15815": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7025,
        7209
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15816": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15817": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15819": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15820": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15821": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15822": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15824": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15825": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15826": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15827": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15829": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15830": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "15831": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DE0"
    },
    "15834": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15835": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7317,
        7324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15836": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43D8"
    },
    "15839": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15840": {
      "branch": 254,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7289,
        7325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15841": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15842": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB0"
    },
    "15845": {
      "branch": 254,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7285,
        7397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15846": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 174,
      "value": "0x3DED"
    },
    "15849": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "15852": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15853": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7373,
        7385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15860": {
      "op": "SHL"
    },
    "15861": {
      "op": "SUB"
    },
    "15862": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15863": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7364,
        7371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15870": {
      "op": "SHL"
    },
    "15871": {
      "op": "SUB"
    },
    "15872": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "15873": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7358,
        7362
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15874": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "15907": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15909": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15910": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15912": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15913": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15914": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15915": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SUB",
      "path": "0"
    },
    "15916": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15917": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7346,
        7386
      ],
      "op": "LOG4",
      "path": "0"
    },
    "15918": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15919": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7215,
        7403
      ],
      "op": "POP",
      "path": "0"
    },
    "15920": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7215,
        7403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15921": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13458,
        14124
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15922": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13592,
        13604
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "15924": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13592,
        13604
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15925": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13520,
        13524
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15927": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15928": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15929": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15930": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13591
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "15932": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15934": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15935": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15936": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15937": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15939": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15940": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15941": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13605
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15942": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15943": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15944": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15945": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15946": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15947": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15948": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15949": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15950": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13574,
        13614
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15951": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13617,
        13618
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "15953": {
      "op": "GT"
    },
    "15954": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13570,
        13656
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "15955": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13570,
        13656
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E5E"
    },
    "15958": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13570,
        13656
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "15959": {
      "op": "POP"
    },
    "15960": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13641,
        13645
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 175,
      "value": "0x1"
    },
    "15962": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13634,
        13645
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1346"
    },
    "15965": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13634,
        13645
      ],
      "op": "JUMP",
      "path": "12"
    },
    "15966": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13570,
        13656
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15967": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13779,
        13791
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "15969": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13779,
        13791
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15970": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13731,
        13758
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15972": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15973": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15974": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15975": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13778
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "15977": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "15979": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15980": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "DUP2",
      "path": "12"
    },
    "15981": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15982": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "15984": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15985": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "DUP4",
      "path": "12"
    },
    "15986": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13792
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15987": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "DUP6",
      "path": "12"
    },
    "15988": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "DUP5",
      "path": "12"
    },
    "15989": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15990": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15991": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "15992": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "15993": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "15994": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "15995": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13761,
        13801
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "15996": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13828,
        13829
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "15998": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "15999": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13836,
        13848
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "16001": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13836,
        13848
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16002": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13831,
        13832
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16003": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13831,
        13848
      ],
      "op": "GT",
      "path": "12"
    },
    "16004": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3ED3"
    },
    "16007": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16008": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13891,
        13903
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "16010": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13891,
        13903
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16011": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16013": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16014": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16015": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16016": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13890
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "16018": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16020": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16021": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16022": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16023": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16025": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16026": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16027": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13904
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16028": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16029": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16030": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16031": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16032": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16033": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16034": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16035": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16036": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13907
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16037": {
      "branch": 246,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13873,
        13929
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16038": {
      "op": "GT"
    },
    "16039": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13869,
        14020
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16040": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13869,
        14020
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3ECB"
    },
    "16043": {
      "branch": 246,
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13869,
        14020
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16044": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13989,
        14001
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 176,
      "value": "0xF"
    },
    "16046": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13989,
        14001
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16047": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16049": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16050": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16051": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16052": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        13988
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "16054": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16056": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16057": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16058": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16059": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16061": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16062": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16063": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14002
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16064": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16065": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16066": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16067": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16068": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16069": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16070": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16071": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16072": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16073": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13971,
        14005
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16074": {
      "op": "POP"
    },
    "16075": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13869,
        14020
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16076": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13850,
        13853
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 177,
      "value": "0x1"
    },
    "16078": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13850,
        13853
      ],
      "op": "ADD",
      "path": "12"
    },
    "16079": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E7E"
    },
    "16082": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16083": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13811,
        14030
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16084": {
      "op": "POP"
    },
    "16085": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14091,
        14117
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 178,
      "value": "0x3EDF"
    },
    "16088": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14091,
        14110
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16089": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14115,
        14116
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "16091": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14091,
        14114
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FBE"
    },
    "16094": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "i",
      "offset": [
        14091,
        14117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16095": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14091,
        14117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16096": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14065,
        14077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "16098": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14065,
        14077
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16099": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16101": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16102": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16103": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16104": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14064
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "16106": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16108": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16109": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16110": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16111": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16113": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16114": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16115": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14078
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16116": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "DUP8",
      "path": "12"
    },
    "16117": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16118": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16119": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16120": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16121": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16122": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16123": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16124": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14087
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16125": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14117
      ],
      "op": "GT",
      "path": "12"
    },
    "16126": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14117
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16127": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        14047,
        14117
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16128": {
      "op": "POP"
    },
    "16129": {
      "op": "POP"
    },
    "16130": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13458,
        14124
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16131": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13458,
        14124
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16132": {
      "fn": "CryptoChampions._canMintHero",
      "offset": [
        13458,
        14124
      ],
      "op": "POP",
      "path": "12"
    },
    "16133": {
      "fn": "CryptoChampions._canMintHero",
      "jump": "o",
      "offset": [
        13458,
        14124
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16134": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6298,
        6570
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16135": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6368,
        6385
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16137": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6438,
        6442
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 179,
      "value": "0x13"
    },
    "16139": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6438,
        6442
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16140": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6409
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "16173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16179": {
      "op": "SHL"
    },
    "16180": {
      "op": "SUB"
    },
    "16181": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6419
      ],
      "op": "AND",
      "path": "12"
    },
    "16182": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6419
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "16187": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6428,
        6432
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "16188": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16190": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16191": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16192": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "16197": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "AND",
      "path": "12"
    },
    "16198": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "16200": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "SHL",
      "path": "12"
    },
    "16201": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16202": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16203": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "16205": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ADD",
      "path": "12"
    },
    "16206": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16207": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16214": {
      "op": "SHL"
    },
    "16215": {
      "op": "SUB"
    },
    "16216": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "AND",
      "path": "12"
    },
    "16217": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16218": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16219": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16221": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ADD",
      "path": "12"
    },
    "16222": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16223": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16224": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16225": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16227": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16229": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16230": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16231": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16232": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "SUB",
      "path": "12"
    },
    "16233": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16234": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP7",
      "path": "12"
    },
    "16235": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16236": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "16237": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16238": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16239": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16240": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F78"
    },
    "16243": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16244": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16246": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16247": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16248": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16249": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16250": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "GAS",
      "path": "12"
    },
    "16251": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "16252": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16253": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16254": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16255": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F8C"
    },
    "16258": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16259": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "16260": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16262": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16263": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "16264": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "16265": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16267": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16268": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16269": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16270": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16271": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16272": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "POP",
      "path": "12"
    },
    "16273": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16275": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16276": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "16277": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16279": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16280": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "LT",
      "path": "12"
    },
    "16281": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16282": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FA2"
    },
    "16285": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16286": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16288": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16289": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16290": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16291": {
      "op": "POP"
    },
    "16292": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "16293": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6442
      ],
      "op": "LT",
      "path": "12"
    },
    "16294": {
      "branch": 247,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6405,
        6442
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16295": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FAF"
    },
    "16298": {
      "branch": 247,
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16299": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16301": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16302": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16303": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6397,
        6443
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16304": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6512,
        6563
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 180,
      "value": "0x1322"
    },
    "16307": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6530,
        6538
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "16309": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6530,
        6538
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16310": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6540,
        6544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x13"
    },
    "16312": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6540,
        6544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16313": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6546,
        6562
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16314": {
      "fn": "CryptoChampions._getRandomNumber",
      "offset": [
        6512,
        6529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43ED"
    },
    "16317": {
      "fn": "CryptoChampions._getRandomNumber",
      "jump": "i",
      "offset": [
        6512,
        6563
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16318": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16319": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16321": {
      "branch": 277,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16322": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FCD"
    },
    "16325": {
      "branch": 277,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16326": {
      "op": "POP"
    },
    "16327": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 181,
      "value": "0x0"
    },
    "16329": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1322"
    },
    "16332": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16333": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16334": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16335": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16336": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "3"
    },
    "16337": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16338": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "3"
    },
    "16339": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16340": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16341": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 182,
      "value": "0x3FDA"
    },
    "16344": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16345": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "3"
    },
    "16346": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16347": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "3"
    },
    "16348": {
      "branch": 278,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "3"
    },
    "16349": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2937"
    },
    "16352": {
      "branch": 278,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16353": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16355": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16362": {
      "op": "SHL"
    },
    "16363": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16364": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16365": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16367": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16368": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16369": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16370": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16372": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16373": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16374": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16375": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "16376": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16377": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16378": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "16380": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16381": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16382": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16384": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16385": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16386": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C62"
    },
    "16389": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "16391": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16392": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "16393": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16395": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "3"
    },
    "16396": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16397": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "16398": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "3"
    },
    "16399": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16401": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16402": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16403": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "16404": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "3"
    },
    "16405": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16406": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16407": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16408": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "16410": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 183
    },
    "16411": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16412": {
      "branch": 279,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "3"
    },
    "16413": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x406D"
    },
    "16416": {
      "branch": 279,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16417": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "16419": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "3"
    },
    "16420": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16427": {
      "op": "SHL"
    },
    "16428": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16429": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16430": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "16432": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "16434": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16435": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16436": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16437": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "16439": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "16441": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16442": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16443": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16444": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "16477": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "16479": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "16480": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16481": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "16482": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16483": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "16484": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16485": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16486": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16487": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "3"
    },
    "16488": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "16490": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "3"
    },
    "16491": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "16492": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16493": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16494": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 184
    },
    "16495": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "3"
    },
    "16496": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "16497": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4076"
    },
    "16500": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "16501": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "3"
    },
    "16502": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16503": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "3"
    },
    "16504": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "16505": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "16506": {
      "op": "POP"
    },
    "16507": {
      "op": "POP"
    },
    "16508": {
      "op": "POP"
    },
    "16509": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "16510": {
      "fn": "EnumerableSet.at",
      "offset": [
        7677,
        7833
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16511": {
      "fn": "EnumerableSet.at",
      "offset": [
        7751,
        7758
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16513": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7823
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 185,
      "value": "0x2937"
    },
    "16516": {
      "fn": "EnumerableSet.at",
      "offset": [
        7805,
        7808
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16517": {
      "fn": "EnumerableSet.at",
      "offset": [
        7817,
        7822
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16518": {
      "fn": "EnumerableSet.at",
      "offset": [
        7801,
        7804
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4597"
    },
    "16521": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7801,
        7823
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16522": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6719,
        6861
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16523": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 186,
      "value": "0x0"
    },
    "16525": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16526": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16527": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16528": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6830
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x15"
    },
    "16530": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16532": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16533": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16535": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16536": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16537": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6841
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16538": {
      "fn": "CryptoChampions.fulfillRandomness",
      "offset": [
        6813,
        6854
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16539": {
      "fn": "CryptoChampions.fulfillRandomness",
      "jump": "o",
      "offset": [
        6719,
        6861
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16540": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18775,
        19355
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16541": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18842,
        18849
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16542": {
      "offset": [
        1611,
        1612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16544": {
      "offset": [
        5584,
        5591
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16545": {
      "offset": [
        5584,
        5613
      ],
      "op": "GT",
      "path": "12"
    },
    "16546": {
      "offset": [
        5584,
        5648
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16547": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5584,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16548": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5584,
        5648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40AE"
    },
    "16551": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16552": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5584,
        5648
      ],
      "op": "POP",
      "path": "12"
    },
    "16553": {
      "offset": [
        1980,
        1981
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "16555": {
      "offset": [
        5617,
        5624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16556": {
      "offset": [
        5617,
        5648
      ],
      "op": "GT",
      "path": "12"
    },
    "16557": {
      "branch": 248,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5617,
        5648
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "16558": {
      "offset": [
        5584,
        5648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16559": {
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40B7"
    },
    "16562": {
      "branch": 248,
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16563": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5576,
        5649
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16565": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5576,
        5649
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16566": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5576,
        5649
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16567": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        5576,
        5649
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16568": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 187,
      "value": "0x0"
    },
    "16570": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16571": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16572": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16573": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18882
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "16575": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16577": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16578": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16580": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16581": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18891
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16582": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18897
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16583": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18897
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "16585": {
      "branch": 249,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18869,
        18897
      ],
      "op": "AND",
      "path": "12"
    },
    "16586": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40D2"
    },
    "16589": {
      "branch": 249,
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "16590": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16592": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16593": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16594": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        18861,
        18898
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16595": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 188,
      "value": "0x0"
    },
    "16597": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "DUP3",
      "path": "12"
    },
    "16598": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16599": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16600": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "16602": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16604": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16605": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16607": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16608": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16609": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16610": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19130,
        19170
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40F6"
    },
    "16613": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19130,
        19170
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16620": {
      "op": "SHL"
    },
    "16621": {
      "op": "SUB"
    },
    "16622": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "AND",
      "path": "12"
    },
    "16623": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19149,
        19156
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16624": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19136,
        19157
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16626": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19130,
        19135
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x379D"
    },
    "16629": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19130,
        19170
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16630": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19130,
        19170
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16631": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19251
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 189,
      "value": "0x7"
    },
    "16633": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19251
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16634": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19258
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4104"
    },
    "16637": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19258
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16638": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19256,
        19257
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16640": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19255
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38D0"
    },
    "16643": {
      "fn": "CryptoChampions._burnElder",
      "jump": "i",
      "offset": [
        19239,
        19258
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16644": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19239,
        19258
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16645": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19224,
        19236
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "16647": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19224,
        19258
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16648": {
      "op": "POP"
    },
    "16649": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19300,
        19301
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 190,
      "value": "0x0"
    },
    "16651": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16652": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16653": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16654": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19280
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "16656": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "16658": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16659": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "DUP2",
      "path": "12"
    },
    "16660": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16661": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "16663": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16664": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16665": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19289
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16666": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16667": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19302
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16674": {
      "op": "SHL"
    },
    "16675": {
      "op": "SUB"
    },
    "16676": {
      "op": "NOT"
    },
    "16677": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19302
      ],
      "op": "AND",
      "path": "12"
    },
    "16678": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19302
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16679": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19268,
        19302
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16680": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19325
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 191,
      "value": "0x9"
    },
    "16682": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16683": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19334
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16684": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19334
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "16685": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16686": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19334
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "16687": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16688": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19348
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "16689": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16691": {
      "op": "NOT"
    },
    "16692": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19348
      ],
      "op": "AND",
      "path": "12"
    },
    "16693": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16694": {
      "fn": "CryptoChampions._burnElder",
      "offset": [
        19312,
        19348
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "16695": {
      "fn": "CryptoChampions._burnElder",
      "jump": "o",
      "offset": [
        18775,
        19355
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16696": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16697": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17403,
        17410
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "16699": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17403,
        17410
      ],
      "op": "DUP1",
      "path": "12"
    },
    "16700": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17439,
        17466
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 192,
      "value": "0x4145"
    },
    "16703": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17439,
        17451
      ],
      "op": "DUP4",
      "path": "12"
    },
    "16704": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17456,
        17465
      ],
      "op": "DUP6",
      "path": "12"
    },
    "16705": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17439,
        17455
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45FB"
    },
    "16708": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17439,
        17466
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16709": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17439,
        17466
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16710": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17469,
        17470
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "16712": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17439,
        17470
      ],
      "op": "ADD",
      "path": "12"
    },
    "16713": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17472,
        17492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4153"
    },
    "16716": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17472,
        17484
      ],
      "op": "DUP5",
      "path": "12"
    },
    "16717": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17489,
        17491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "16719": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17472,
        17488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4017"
    },
    "16722": {
      "fn": "CryptoChampions._rollDice",
      "jump": "i",
      "offset": [
        17472,
        17492
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16723": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17472,
        17492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "16724": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17431,
        17493
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16725": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17431,
        17493
      ],
      "op": "POP",
      "path": "12"
    },
    "16726": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17431,
        17493
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "16727": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17431,
        17493
      ],
      "op": "POP",
      "path": "12"
    },
    "16728": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "16729": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "POP",
      "path": "12"
    },
    "16730": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "16731": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "16732": {
      "fn": "CryptoChampions._rollDice",
      "offset": [
        17320,
        17500
      ],
      "op": "POP",
      "path": "12"
    },
    "16733": {
      "fn": "CryptoChampions._rollDice",
      "jump": "o",
      "offset": [
        17320,
        17500
      ],
      "op": "JUMP",
      "path": "12"
    },
    "16734": {
      "fn": "EnumerableSet.length",
      "offset": [
        7230,
        7345
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16735": {
      "fn": "EnumerableSet.length",
      "offset": [
        7293,
        7300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16737": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7338
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 193,
      "value": "0x1322"
    },
    "16740": {
      "fn": "EnumerableSet.length",
      "offset": [
        7327,
        7330
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16741": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7326
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4662"
    },
    "16744": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7319,
        7338
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16745": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16748": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16750": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14157,
        14158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "16752": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16754": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16755": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16758": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16759": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "16760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16761": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "16763": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16765": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14090,
        14106
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16766": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16767": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16769": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16770": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16771": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16772": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16773": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16774": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "16775": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16776": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "16777": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "ADD",
      "path": "5"
    },
    "16778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16779": {
      "op": "POP"
    },
    "16780": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14143,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16782": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14118,
        14159
      ],
      "op": "POP",
      "path": "5"
    },
    "16783": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14180,
        14187
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 194
    },
    "16784": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14174
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16785": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14175,
        14176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16787": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16788": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16789": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16790": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "LT",
      "path": "5"
    },
    "16791": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x419C"
    },
    "16794": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16795": {
      "dev": "Index out of range",
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "INVALID",
      "path": "5"
    },
    "16796": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16797": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16799": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16800": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16801": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "MUL",
      "path": "5"
    },
    "16802": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16803": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16804": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16805": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16806": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14177
      ],
      "op": "ADD",
      "path": "5"
    },
    "16807": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14169,
        14187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16808": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14205,
        14210
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 195
    },
    "16809": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14024,
        14217
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16810": {
      "op": "POP"
    },
    "16811": {
      "op": "POP"
    },
    "16812": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14024,
        14217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16813": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12493,
        13234
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16814": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41BF"
    },
    "16817": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16824": {
      "op": "SHL"
    },
    "16825": {
      "op": "SUB"
    },
    "16826": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "AND",
      "path": "5"
    },
    "16827": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43D2"
    },
    "16830": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16831": {
      "branch": 269,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12712,
        12727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16832": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16833": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8F"
    },
    "16836": {
      "branch": 269,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12708,
        13228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16837": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12764,
        12766
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16844": {
      "op": "SHL"
    },
    "16845": {
      "op": "SUB"
    },
    "16846": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "AND",
      "path": "5"
    },
    "16847": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12785
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF23A6E61"
    },
    "16852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12786,
        12794
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12796,
        12800
      ],
      "op": "DUP8",
      "path": "5"
    },
    "16854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12802,
        12804
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16855": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12806,
        12812
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16856": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12814,
        12818
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16857": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "16859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16860": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16861": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "16866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16867": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "16869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SHL",
      "path": "5"
    },
    "16870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16872": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "16874": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16875": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16876": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP7",
      "path": "5"
    },
    "16877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16883": {
      "op": "SHL"
    },
    "16884": {
      "op": "SUB"
    },
    "16885": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16886": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16887": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16888": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16890": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16891": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "16892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16898": {
      "op": "SHL"
    },
    "16899": {
      "op": "SUB"
    },
    "16900": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16901": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16903": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "16907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16909": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16911": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16914": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16915": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16921": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16922": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16923": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16927": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16928": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16929": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16930": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16931": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16932": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16933": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16935": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16936": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "16937": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16938": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16939": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16940": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16941": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16945": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16946": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16947": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16948": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "16950": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16951": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16952": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16953": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "16954": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x424E"
    },
    "16958": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16959": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16960": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16961": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16962": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16963": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "16964": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16965": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "16967": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "16969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4236"
    },
    "16973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "16974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "16975": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16976": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16979": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16980": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "16981": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16982": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "16983": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "16984": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "16985": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "16987": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "16988": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16989": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "16990": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x427B"
    },
    "16993": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "16994": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16995": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "16996": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "16997": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "16998": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "16999": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "17001": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "17002": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17004": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "17005": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "17008": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXP",
      "path": "5"
    },
    "17009": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "17010": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "NOT",
      "path": "5"
    },
    "17011": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "AND",
      "path": "5"
    },
    "17012": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17013": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "17014": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17016": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ADD",
      "path": "5"
    },
    "17017": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "17018": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17019": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17020": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17021": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "17022": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17023": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17024": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17025": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17026": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17027": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17028": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17029": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17031": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "17033": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "17034": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17035": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "17036": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SUB",
      "path": "5"
    },
    "17037": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17038": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "17040": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP8",
      "path": "5"
    },
    "17041": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17042": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "17043": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "17044": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17045": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "17046": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x429E"
    },
    "17049": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "17050": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "17052": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17053": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "17054": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17055": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17056": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "GAS",
      "path": "5"
    },
    "17057": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "CALL",
      "path": "5"
    },
    "17058": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "17059": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17060": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17061": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17062": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17063": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "17064": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42C3"
    },
    "17067": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "17068": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "POP",
      "path": "5"
    },
    "17069": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "17071": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "17072": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "17073": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17075": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17076": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "LT",
      "path": "5"
    },
    "17077": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "17078": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42BE"
    },
    "17081": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "17082": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "17084": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17085": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "17086": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17087": {
      "op": "POP"
    },
    "17088": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "17089": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "17091": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12747,
        12819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17092": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42CF"
    },
    "17095": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "17096": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C74"
    },
    "17099": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49A3"
    },
    "17102": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMP",
      "path": "5"
    },
    "17103": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12743,
        13218
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17110": {
      "op": "SHL"
    },
    "17111": {
      "op": "SUB"
    },
    "17112": {
      "op": "NOT"
    },
    "17113": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17114": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "AND",
      "path": "5"
    },
    "17115": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "17120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17122": {
      "op": "SHL"
    },
    "17123": {
      "branch": 270,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12868,
        12927
      ],
      "op": "EQ",
      "path": "5"
    },
    "17124": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3593"
    },
    "17127": {
      "branch": 270,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12864,
        13020
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "17128": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 196,
      "value": "0x40"
    },
    "17130": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "17131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17137": {
      "op": "SHL"
    },
    "17138": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17139": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "17140": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "17142": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "17143": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17144": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17145": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17147": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "17148": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "17149": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17150": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "17151": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "17152": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "17153": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "17155": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "17156": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "17157": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "17159": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "17160": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17161": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A9F"
    },
    "17164": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "17166": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "17167": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "17168": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "17170": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "ADD",
      "path": "5"
    },
    "17171": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "17172": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "17173": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "POP",
      "path": "5"
    },
    "17174": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "17176": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "17177": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "17178": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "17179": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SUB",
      "path": "5"
    },
    "17180": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "17181": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        12951,
        13001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "17182": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21125,
        21386
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17183": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21190,
        21197
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17185": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21190,
        21197
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17186": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21247,
        21248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "17188": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21303
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 197,
      "value": "0x4345"
    },
    "17191": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21299,
        21302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "17193": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x242F"
    },
    "17196": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21292,
        21293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "17198": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21287
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x433F"
    },
    "17201": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21275
      ],
      "op": "DUP9",
      "path": "12"
    },
    "17202": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21280,
        21286
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xDE0B6B3A7640000"
    },
    "17211": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21279
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FBE"
    },
    "17214": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21266,
        21287
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17215": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21287
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17216": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21291
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17217": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21291
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FBE"
    },
    "17220": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21266,
        21294
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17221": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21266,
        21303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17222": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21258,
        21303
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17223": {
      "op": "POP"
    },
    "17224": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21321,
        21356
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 198,
      "value": "0x4368"
    },
    "17227": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21331,
        21355
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4361"
    },
    "17230": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21352,
        21354
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "17232": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21331,
        21347
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x242F"
    },
    "17235": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21331,
        21335
      ],
      "op": "DUP5",
      "path": "12"
    },
    "17236": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21340,
        21346
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xDE0B6B3A7640000"
    },
    "17245": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21331,
        21339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FBE"
    },
    "17248": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21331,
        21347
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17249": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21331,
        21355
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17250": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21321,
        21326
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17251": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21321,
        21326
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17252": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21321,
        21330
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35C6"
    },
    "17255": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "i",
      "offset": [
        21321,
        21356
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17256": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21321,
        21356
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17257": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21313,
        21356
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "17258": {
      "fn": "CryptoChampions._priceFormula",
      "offset": [
        21125,
        21386
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "17259": {
      "op": "POP"
    },
    "17260": {
      "op": "POP"
    },
    "17261": {
      "op": "POP"
    },
    "17262": {
      "op": "POP"
    },
    "17263": {
      "fn": "CryptoChampions._priceFormula",
      "jump": "o",
      "offset": [
        21125,
        21386
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17264": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17265": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17267": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x437C"
    },
    "17270": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17271": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17272": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43BA"
    },
    "17275": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17276": {
      "branch": 271,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17277": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43B2"
    },
    "17280": {
      "branch": 271,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17281": {
      "op": "POP"
    },
    "17282": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 199
    },
    "17283": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17284": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17286": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17287": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17288": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "11"
    },
    "17289": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17290": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "17291": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17293": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17294": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17295": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17296": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17298": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17299": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17300": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17301": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17302": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "17303": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "11"
    },
    "17304": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17305": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17306": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "17307": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 200
    },
    "17308": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17309": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17310": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17311": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17312": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17313": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "11"
    },
    "17314": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "11"
    },
    "17315": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17316": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "17317": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17318": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17320": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17321": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17322": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17323": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17324": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17325": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "17326": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 201,
      "value": "0x1322"
    },
    "17329": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17330": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17331": {
      "op": "POP"
    },
    "17332": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 202,
      "value": "0x0"
    },
    "17334": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1322"
    },
    "17337": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17338": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17339": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3878,
        3882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17341": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 203
    },
    "17342": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17343": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17344": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17346": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17347": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17348": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17349": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3913
      ],
      "op": "ADD",
      "path": "11"
    },
    "17350": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17352": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17353": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17355": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17356": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17357": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3920
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17358": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "17359": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "17360": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3901,
        3925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17361": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3805,
        3932
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17362": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17363": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "17364": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9",
      "statement": 204
    },
    "17365": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "17366": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "17367": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "17368": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6747,
        6903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17369": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6820,
        6824
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17371": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6896
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 205,
      "value": "0x2937"
    },
    "17374": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6851,
        6854
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17381": {
      "op": "SHL"
    },
    "17382": {
      "op": "SUB"
    },
    "17383": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17384": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6871,
        6894
      ],
      "op": "AND",
      "path": "11"
    },
    "17385": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4666"
    },
    "17388": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6843,
        6896
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7527,
        8617
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7649,
        7666
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17392": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7682
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 206,
      "value": "0x0"
    },
    "17425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17431": {
      "op": "SHL"
    },
    "17432": {
      "op": "SUB"
    },
    "17433": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "AND",
      "path": "15"
    },
    "17434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7698
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4000AEA0"
    },
    "17439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7699,
        7713
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "17472": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7715,
        7719
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17473": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        7740
      ],
      "op": "DUP8",
      "path": "15"
    },
    "17474": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7742,
        7747
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17475": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17477": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17478": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17480": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17481": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17482": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17483": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17484": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17485": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17487": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17488": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17489": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17490": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17491": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17493": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "ADD",
      "path": "15"
    },
    "17494": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "17495": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17496": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17497": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "POP",
      "path": "15"
    },
    "17498": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17500": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17501": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17503": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17505": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "15"
    },
    "17506": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SUB",
      "path": "15"
    },
    "17507": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17508": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17509": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17510": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17512": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7721,
        7748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17516": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17517": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "17522": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17523": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "17525": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SHL",
      "path": "15"
    },
    "17526": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17527": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17528": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "17530": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17531": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17532": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17539": {
      "op": "SHL"
    },
    "17540": {
      "op": "SUB"
    },
    "17541": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17542": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17543": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17544": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17546": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17547": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17548": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17549": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17550": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17552": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17553": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17554": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17556": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17557": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17558": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17559": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17560": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17561": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17562": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17563": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17564": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17565": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17566": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17567": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17568": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17570": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17571": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17572": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17573": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17574": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17575": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17576": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17578": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17579": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17580": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17581": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17582": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17583": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17585": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17586": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17587": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17588": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "15"
    },
    "17589": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17590": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44C9"
    },
    "17593": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17594": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17595": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17596": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17597": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17598": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17599": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17600": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17601": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17602": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17604": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17605": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44B1"
    },
    "17608": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17609": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17610": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17611": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17612": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17613": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17614": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17615": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17616": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17617": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17618": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17619": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17620": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "17622": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17623": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17624": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17625": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44F6"
    },
    "17628": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17629": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17630": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17632": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17633": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "17636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "17643": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXP",
      "path": "15"
    },
    "17644": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17645": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "NOT",
      "path": "15"
    },
    "17646": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "AND",
      "path": "15"
    },
    "17647": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17648": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17649": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17651": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ADD",
      "path": "15"
    },
    "17652": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17653": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17654": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17655": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17656": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "17657": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17658": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17659": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17660": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17661": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17662": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17664": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17666": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17667": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17668": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP4",
      "path": "15"
    },
    "17669": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "SUB",
      "path": "15"
    },
    "17670": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17671": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17673": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP8",
      "path": "15"
    },
    "17674": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17675": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "17676": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17677": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4517"
    },
    "17682": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17683": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17685": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17686": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17687": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17688": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17689": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "GAS",
      "path": "15"
    },
    "17690": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "CALL",
      "path": "15"
    },
    "17691": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17692": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17693": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17694": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x452B"
    },
    "17697": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17698": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17699": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17701": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17702": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "17703": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17704": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17706": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17707": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17708": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17709": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17710": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17711": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "POP",
      "path": "15"
    },
    "17712": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17714": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "17715": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "17716": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17718": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17719": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "LT",
      "path": "15"
    },
    "17720": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "17721": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4541"
    },
    "17724": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "17725": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17727": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "17728": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "REVERT",
      "path": "15"
    },
    "17729": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17730": {
      "op": "POP"
    },
    "17731": {
      "op": "POP"
    },
    "17732": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17734": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP5",
      "path": "15"
    },
    "17735": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17736": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17737": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17739": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7678,
        7749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17741": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17742": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17744": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17745": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17746": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8063,
        8079
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "17747": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4561"
    },
    "17750": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17751": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17752": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8031,
        8039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17753": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17754": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8041,
        8046
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17755": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "17756": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8056,
        8060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17757": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x472C"
    },
    "17760": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17761": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8014,
        8080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17762": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 207,
      "value": "0x0"
    },
    "17764": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17765": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17766": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17767": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8544
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17769": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17771": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17772": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17774": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17775": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17776": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8554
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "17777": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17778": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7996,
        8080
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "17779": {
      "op": "POP"
    },
    "17780": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x457E"
    },
    "17783": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17784": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8559,
        8560
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "17786": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35C6"
    },
    "17789": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17790": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8538,
        8561
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17791": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "17793": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP7",
      "path": "15"
    },
    "17794": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "DUP2",
      "path": "15"
    },
    "17795": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17796": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8525
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "17798": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "17800": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "17801": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "17803": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "17804": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8535
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "17805": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8519,
        8561
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "17806": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8610
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 208,
      "value": "0x3386"
    },
    "17809": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8526,
        8534
      ],
      "op": "DUP6",
      "path": "15"
    },
    "17810": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "17811": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8578,
        8591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4773"
    },
    "17814": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8578,
        8610
      ],
      "op": "JUMP",
      "path": "15"
    },
    "17815": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17816": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 209
    },
    "17817": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17818": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17820": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17821": {
      "branch": 272,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17822": {
      "op": "LT"
    },
    "17823": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45D9"
    },
    "17826": {
      "branch": 272,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17827": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17829": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17836": {
      "op": "SHL"
    },
    "17837": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17838": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17839": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "17841": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17842": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17843": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17844": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17846": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17847": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17848": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17849": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "11"
    },
    "17850": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17851": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17852": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17854": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17855": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17856": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17858": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17859": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17860": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A7D"
    },
    "17863": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17865": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17866": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "17867": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17869": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "11"
    },
    "17870": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17871": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "11"
    },
    "17872": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "11"
    },
    "17873": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17875": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17876": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17877": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17878": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "11"
    },
    "17879": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17880": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "REVERT",
      "path": "11"
    },
    "17881": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17882": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 210
    },
    "17883": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17885": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "11"
    },
    "17886": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17887": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17888": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17889": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17890": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "11"
    },
    "17891": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45E8"
    },
    "17894": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17895": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "11"
    },
    "17896": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17897": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17898": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17900": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17901": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17903": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17905": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17906": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "11"
    },
    "17907": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17908": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17909": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "11"
    },
    "17910": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17911": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17912": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "11"
    },
    "17913": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "11"
    },
    "17914": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17915": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17916": {
      "fn": "SafeMath.mod",
      "offset": [
        4878,
        4885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "17918": {
      "fn": "SafeMath.mod",
      "offset": [
        4909,
        4910
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 211
    },
    "17919": {
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17920": {
      "branch": 280,
      "fn": "SafeMath.mod",
      "offset": [
        4905,
        4910
      ],
      "op": "GT",
      "path": "3"
    },
    "17921": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4651"
    },
    "17924": {
      "branch": 280,
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "17925": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "17927": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "17928": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17935": {
      "op": "SHL"
    },
    "17936": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17937": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17938": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "17940": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "17942": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17943": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "17944": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17945": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "17947": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "17949": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17950": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "17951": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17952": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206D6F64756C6F206279207A65726F0000000000000000"
    },
    "17985": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "17987": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "17988": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "17989": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "17990": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17991": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "17992": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17993": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "17994": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "17995": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SUB",
      "path": "3"
    },
    "17996": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "17998": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "ADD",
      "path": "3"
    },
    "17999": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "18000": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "REVERT",
      "path": "3"
    },
    "18001": {
      "fn": "SafeMath.mod",
      "offset": [
        4897,
        4939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18002": {
      "fn": "SafeMath.mod",
      "offset": [
        4960,
        4961
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 212
    },
    "18003": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4957
      ],
      "op": "DUP4",
      "path": "3"
    },
    "18004": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "18005": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x465A"
    },
    "18008": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "18009": {
      "dev": "Modulus by zero",
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "INVALID",
      "path": "3"
    },
    "18010": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "18011": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "MOD",
      "path": "3"
    },
    "18012": {
      "fn": "SafeMath.mod",
      "offset": [
        4956,
        4961
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "18013": {
      "fn": "SafeMath.mod",
      "offset": [
        4820,
        4968
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "18014": {
      "op": "POP"
    },
    "18015": {
      "op": "POP"
    },
    "18016": {
      "op": "POP"
    },
    "18017": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        4820,
        4968
      ],
      "op": "JUMP",
      "path": "3"
    },
    "18018": {
      "fn": "EnumerableSet._length",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18019": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 213
    },
    "18020": {
      "fn": "EnumerableSet._length",
      "offset": [
        4095,
        4113
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18021": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        4013,
        4120
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18022": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18023": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18025": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18026": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18027": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18028": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18030": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18031": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "11"
    },
    "18032": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18034": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18035": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "18037": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18038": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18039": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18040": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18041": {
      "branch": 273,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "18042": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4722"
    },
    "18045": {
      "branch": 273,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "18046": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18047": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18050": {
      "op": "NOT"
    },
    "18051": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18052": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18053": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "11"
    },
    "18054": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18055": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18056": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18057": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "11"
    },
    "18058": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18059": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18061": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18062": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "11"
    },
    "18063": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18064": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18065": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18066": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18067": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "11"
    },
    "18068": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4699"
    },
    "18071": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "18072": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "11"
    },
    "18073": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18074": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18075": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18077": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18078": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18080": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18082": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18083": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "11"
    },
    "18084": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18085": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18086": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "11"
    },
    "18087": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 214
    },
    "18088": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "11"
    },
    "18089": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18091": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "11"
    },
    "18092": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "11"
    },
    "18093": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18094": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18095": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18096": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "11"
    },
    "18097": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x46B6"
    },
    "18100": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "18101": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "11"
    },
    "18102": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18103": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18105": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18106": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18107": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18108": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18110": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18111": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18112": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18113": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18114": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18115": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "11"
    },
    "18116": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "18117": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18118": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "18119": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "18120": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 215
    },
    "18121": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18122": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18123": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18125": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "11"
    },
    "18126": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18127": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "11"
    },
    "18128": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18129": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "18130": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18131": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "18133": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18134": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18135": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18136": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "11"
    },
    "18137": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "11"
    },
    "18138": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18139": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "18140": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 216
    },
    "18141": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18142": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "11"
    },
    "18143": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18144": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18145": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x46E6"
    },
    "18148": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "18149": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "11"
    },
    "18150": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18151": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18153": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18154": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "11"
    },
    "18155": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18157": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18158": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18160": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18165": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18166": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "11"
    },
    "18167": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18169": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18170": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "18171": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18172": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "18173": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 217
    },
    "18174": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18176": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "11"
    },
    "18177": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18179": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "11"
    },
    "18180": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18181": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18182": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "11"
    },
    "18185": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18186": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18188": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18190": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "11"
    },
    "18191": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18193": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18194": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18196": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "18198": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 218,
      "value": "0x1"
    },
    "18200": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "18201": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "18202": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "18203": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "18204": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "18205": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "11"
    },
    "18206": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1322"
    },
    "18209": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18210": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18211": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 219,
      "value": "0x0"
    },
    "18213": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18214": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "11"
    },
    "18215": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "11"
    },
    "18216": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1322"
    },
    "18219": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18220": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        826,
        1090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "18221": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 220,
      "value": "0x40"
    },
    "18223": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18224": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18225": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "18227": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18228": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "16"
    },
    "18229": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18230": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "18231": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18232": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "18233": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18234": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18235": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP3",
      "path": "16"
    },
    "18236": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18237": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "18238": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18239": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "18240": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18247": {
      "op": "SHL"
    },
    "18248": {
      "op": "SUB"
    },
    "18249": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18250": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18251": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18252": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "AND",
      "path": "16"
    },
    "18253": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "18255": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "18256": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18257": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18258": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "18260": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18261": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "18262": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18263": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "18264": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18265": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "18266": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18267": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "16"
    },
    "18268": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18269": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18270": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP5",
      "path": "16"
    },
    "18271": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SUB",
      "path": "16"
    },
    "18272": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18273": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "18274": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18275": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "DUP2",
      "path": "16"
    },
    "18276": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18277": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "18279": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18280": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18281": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "ADD",
      "path": "16"
    },
    "18282": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18283": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1030,
        1081
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18284": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18285": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18286": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "18287": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "ADD",
      "path": "16"
    },
    "18288": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "18289": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1020,
        1082
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18290": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "jump": "o",
      "offset": [
        826,
        1090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "18291": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "18292": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 221,
      "value": "0x40"
    },
    "18294": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18295": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18296": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "18298": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18299": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "18300": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "18301": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "18302": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18303": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "18304": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18305": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18306": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "18307": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "18308": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18309": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18310": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18311": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18312": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18313": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18314": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18315": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP4",
      "path": "16"
    },
    "18316": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SUB",
      "path": "16"
    },
    "18317": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "18318": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "18319": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "DUP2",
      "path": "16"
    },
    "18320": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18321": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "18323": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18324": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "18325": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "ADD",
      "path": "16"
    },
    "18326": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18327": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1613,
        1654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "18328": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "DUP1",
      "path": "16"
    },
    "18329": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "18330": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "18331": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "ADD",
      "path": "16"
    },
    "18332": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "18333": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1603,
        1655
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "18334": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "jump": "o",
      "offset": [
        1490,
        1662
      ],
      "op": "JUMP",
      "path": "16"
    },
    "18335": {
      "op": "JUMPDEST"
    },
    "18336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18338": {
      "op": "MLOAD"
    },
    "18339": {
      "op": "DUP1"
    },
    "18340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18342": {
      "op": "ADD"
    },
    "18343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18345": {
      "op": "MSTORE"
    },
    "18346": {
      "op": "DUP1"
    },
    "18347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18349": {
      "op": "ISZERO"
    },
    "18350": {
      "op": "ISZERO"
    },
    "18351": {
      "op": "DUP2"
    },
    "18352": {
      "op": "MSTORE"
    },
    "18353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18355": {
      "op": "ADD"
    },
    "18356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18358": {
      "op": "DUP2"
    },
    "18359": {
      "op": "MSTORE"
    },
    "18360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18362": {
      "op": "ADD"
    },
    "18363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18365": {
      "op": "DUP2"
    },
    "18366": {
      "op": "MSTORE"
    },
    "18367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18369": {
      "op": "ADD"
    },
    "18370": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18372": {
      "op": "DUP2"
    },
    "18373": {
      "op": "MSTORE"
    },
    "18374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18376": {
      "op": "ADD"
    },
    "18377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18379": {
      "op": "DUP2"
    },
    "18380": {
      "op": "MSTORE"
    },
    "18381": {
      "op": "POP"
    },
    "18382": {
      "op": "SWAP1"
    },
    "18383": {
      "op": "JUMP"
    },
    "18384": {
      "op": "JUMPDEST"
    },
    "18385": {
      "op": "DUP3"
    },
    "18386": {
      "op": "DUP1"
    },
    "18387": {
      "op": "SLOAD"
    },
    "18388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18390": {
      "op": "DUP2"
    },
    "18391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18393": {
      "op": "AND"
    },
    "18394": {
      "op": "ISZERO"
    },
    "18395": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "18398": {
      "op": "MUL"
    },
    "18399": {
      "op": "SUB"
    },
    "18400": {
      "op": "AND"
    },
    "18401": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18403": {
      "op": "SWAP1"
    },
    "18404": {
      "op": "DIV"
    },
    "18405": {
      "op": "SWAP1"
    },
    "18406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18408": {
      "op": "MSTORE"
    },
    "18409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18413": {
      "op": "KECCAK256"
    },
    "18414": {
      "op": "SWAP1"
    },
    "18415": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18417": {
      "op": "ADD"
    },
    "18418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18420": {
      "op": "SWAP1"
    },
    "18421": {
      "op": "DIV"
    },
    "18422": {
      "op": "DUP2"
    },
    "18423": {
      "op": "ADD"
    },
    "18424": {
      "op": "SWAP3"
    },
    "18425": {
      "op": "DUP3"
    },
    "18426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18428": {
      "op": "LT"
    },
    "18429": {
      "op": "PUSH2",
      "value": "0x4811"
    },
    "18432": {
      "op": "JUMPI"
    },
    "18433": {
      "op": "DUP1"
    },
    "18434": {
      "op": "MLOAD"
    },
    "18435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18437": {
      "op": "NOT"
    },
    "18438": {
      "op": "AND"
    },
    "18439": {
      "op": "DUP4"
    },
    "18440": {
      "op": "DUP1"
    },
    "18441": {
      "op": "ADD"
    },
    "18442": {
      "op": "OR"
    },
    "18443": {
      "op": "DUP6"
    },
    "18444": {
      "op": "SSTORE"
    },
    "18445": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18448": {
      "op": "JUMP"
    },
    "18449": {
      "op": "JUMPDEST"
    },
    "18450": {
      "op": "DUP3"
    },
    "18451": {
      "op": "DUP1"
    },
    "18452": {
      "op": "ADD"
    },
    "18453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18455": {
      "op": "ADD"
    },
    "18456": {
      "op": "DUP6"
    },
    "18457": {
      "op": "SSTORE"
    },
    "18458": {
      "op": "DUP3"
    },
    "18459": {
      "op": "ISZERO"
    },
    "18460": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18463": {
      "op": "JUMPI"
    },
    "18464": {
      "op": "SWAP2"
    },
    "18465": {
      "op": "DUP3"
    },
    "18466": {
      "op": "ADD"
    },
    "18467": {
      "op": "JUMPDEST"
    },
    "18468": {
      "op": "DUP3"
    },
    "18469": {
      "op": "DUP2"
    },
    "18470": {
      "op": "GT"
    },
    "18471": {
      "op": "ISZERO"
    },
    "18472": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18475": {
      "op": "JUMPI"
    },
    "18476": {
      "op": "DUP3"
    },
    "18477": {
      "op": "MLOAD"
    },
    "18478": {
      "op": "DUP3"
    },
    "18479": {
      "op": "SSTORE"
    },
    "18480": {
      "op": "SWAP2"
    },
    "18481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18483": {
      "op": "ADD"
    },
    "18484": {
      "op": "SWAP2"
    },
    "18485": {
      "op": "SWAP1"
    },
    "18486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18488": {
      "op": "ADD"
    },
    "18489": {
      "op": "SWAP1"
    },
    "18490": {
      "op": "PUSH2",
      "value": "0x4823"
    },
    "18493": {
      "op": "JUMP"
    },
    "18494": {
      "op": "JUMPDEST"
    },
    "18495": {
      "op": "POP"
    },
    "18496": {
      "op": "PUSH2",
      "value": "0x484A"
    },
    "18499": {
      "op": "SWAP3"
    },
    "18500": {
      "op": "SWAP2"
    },
    "18501": {
      "op": "POP"
    },
    "18502": {
      "op": "PUSH2",
      "value": "0x4988"
    },
    "18505": {
      "op": "JUMP"
    },
    "18506": {
      "op": "JUMPDEST"
    },
    "18507": {
      "op": "POP"
    },
    "18508": {
      "op": "SWAP1"
    },
    "18509": {
      "op": "JUMP"
    },
    "18510": {
      "op": "JUMPDEST"
    },
    "18511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18513": {
      "op": "MLOAD"
    },
    "18514": {
      "op": "DUP1"
    },
    "18515": {
      "op": "PUSH2",
      "value": "0x360"
    },
    "18518": {
      "op": "ADD"
    },
    "18519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18521": {
      "op": "MSTORE"
    },
    "18522": {
      "op": "DUP1"
    },
    "18523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18525": {
      "op": "ISZERO"
    },
    "18526": {
      "op": "ISZERO"
    },
    "18527": {
      "op": "DUP2"
    },
    "18528": {
      "op": "MSTORE"
    },
    "18529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18531": {
      "op": "ADD"
    },
    "18532": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18534": {
      "op": "DUP2"
    },
    "18535": {
      "op": "MSTORE"
    },
    "18536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18538": {
      "op": "ADD"
    },
    "18539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18541": {
      "op": "DUP2"
    },
    "18542": {
      "op": "MSTORE"
    },
    "18543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18545": {
      "op": "ADD"
    },
    "18546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18548": {
      "op": "DUP2"
    },
    "18549": {
      "op": "MSTORE"
    },
    "18550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18552": {
      "op": "ADD"
    },
    "18553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18555": {
      "op": "DUP2"
    },
    "18556": {
      "op": "MSTORE"
    },
    "18557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18559": {
      "op": "ADD"
    },
    "18560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18562": {
      "op": "DUP2"
    },
    "18563": {
      "op": "MSTORE"
    },
    "18564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18566": {
      "op": "ADD"
    },
    "18567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18569": {
      "op": "DUP2"
    },
    "18570": {
      "op": "MSTORE"
    },
    "18571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18573": {
      "op": "ADD"
    },
    "18574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18576": {
      "op": "DUP2"
    },
    "18577": {
      "op": "MSTORE"
    },
    "18578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18580": {
      "op": "ADD"
    },
    "18581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18583": {
      "op": "DUP2"
    },
    "18584": {
      "op": "MSTORE"
    },
    "18585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18587": {
      "op": "ADD"
    },
    "18588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18590": {
      "op": "DUP2"
    },
    "18591": {
      "op": "MSTORE"
    },
    "18592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18594": {
      "op": "ADD"
    },
    "18595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18597": {
      "op": "DUP2"
    },
    "18598": {
      "op": "MSTORE"
    },
    "18599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18601": {
      "op": "ADD"
    },
    "18602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18604": {
      "op": "DUP2"
    },
    "18605": {
      "op": "MSTORE"
    },
    "18606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18608": {
      "op": "ADD"
    },
    "18609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18611": {
      "op": "DUP2"
    },
    "18612": {
      "op": "MSTORE"
    },
    "18613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18615": {
      "op": "ADD"
    },
    "18616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18618": {
      "op": "DUP2"
    },
    "18619": {
      "op": "MSTORE"
    },
    "18620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18622": {
      "op": "ADD"
    },
    "18623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18625": {
      "op": "DUP2"
    },
    "18626": {
      "op": "MSTORE"
    },
    "18627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18629": {
      "op": "ADD"
    },
    "18630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18632": {
      "op": "DUP2"
    },
    "18633": {
      "op": "MSTORE"
    },
    "18634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18636": {
      "op": "ADD"
    },
    "18637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18639": {
      "op": "DUP2"
    },
    "18640": {
      "op": "MSTORE"
    },
    "18641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18643": {
      "op": "ADD"
    },
    "18644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18646": {
      "op": "DUP2"
    },
    "18647": {
      "op": "MSTORE"
    },
    "18648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18650": {
      "op": "ADD"
    },
    "18651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18653": {
      "op": "DUP2"
    },
    "18654": {
      "op": "MSTORE"
    },
    "18655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18657": {
      "op": "ADD"
    },
    "18658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18660": {
      "op": "DUP2"
    },
    "18661": {
      "op": "MSTORE"
    },
    "18662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18664": {
      "op": "ADD"
    },
    "18665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18667": {
      "op": "DUP2"
    },
    "18668": {
      "op": "MSTORE"
    },
    "18669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18671": {
      "op": "ADD"
    },
    "18672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18674": {
      "op": "DUP2"
    },
    "18675": {
      "op": "MSTORE"
    },
    "18676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18678": {
      "op": "ADD"
    },
    "18679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18681": {
      "op": "DUP2"
    },
    "18682": {
      "op": "MSTORE"
    },
    "18683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18685": {
      "op": "ADD"
    },
    "18686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18688": {
      "op": "DUP2"
    },
    "18689": {
      "op": "MSTORE"
    },
    "18690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18692": {
      "op": "ADD"
    },
    "18693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18695": {
      "op": "DUP2"
    },
    "18696": {
      "op": "MSTORE"
    },
    "18697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18699": {
      "op": "ADD"
    },
    "18700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18702": {
      "op": "DUP2"
    },
    "18703": {
      "op": "MSTORE"
    },
    "18704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18706": {
      "op": "ADD"
    },
    "18707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18709": {
      "op": "DUP2"
    },
    "18710": {
      "op": "MSTORE"
    },
    "18711": {
      "op": "POP"
    },
    "18712": {
      "op": "SWAP1"
    },
    "18713": {
      "op": "JUMP"
    },
    "18714": {
      "op": "JUMPDEST"
    },
    "18715": {
      "op": "DUP3"
    },
    "18716": {
      "op": "DUP1"
    },
    "18717": {
      "op": "SLOAD"
    },
    "18718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18720": {
      "op": "DUP2"
    },
    "18721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18723": {
      "op": "AND"
    },
    "18724": {
      "op": "ISZERO"
    },
    "18725": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "18728": {
      "op": "MUL"
    },
    "18729": {
      "op": "SUB"
    },
    "18730": {
      "op": "AND"
    },
    "18731": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18733": {
      "op": "SWAP1"
    },
    "18734": {
      "op": "DIV"
    },
    "18735": {
      "op": "SWAP1"
    },
    "18736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18738": {
      "op": "MSTORE"
    },
    "18739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18743": {
      "op": "KECCAK256"
    },
    "18744": {
      "op": "SWAP1"
    },
    "18745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18747": {
      "op": "ADD"
    },
    "18748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18750": {
      "op": "SWAP1"
    },
    "18751": {
      "op": "DIV"
    },
    "18752": {
      "op": "DUP2"
    },
    "18753": {
      "op": "ADD"
    },
    "18754": {
      "op": "SWAP3"
    },
    "18755": {
      "op": "DUP3"
    },
    "18756": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18758": {
      "op": "LT"
    },
    "18759": {
      "op": "PUSH2",
      "value": "0x495B"
    },
    "18762": {
      "op": "JUMPI"
    },
    "18763": {
      "op": "DUP3"
    },
    "18764": {
      "op": "DUP1"
    },
    "18765": {
      "op": "ADD"
    },
    "18766": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18768": {
      "op": "NOT"
    },
    "18769": {
      "op": "DUP3"
    },
    "18770": {
      "op": "CALLDATALOAD"
    },
    "18771": {
      "op": "AND"
    },
    "18772": {
      "op": "OR"
    },
    "18773": {
      "op": "DUP6"
    },
    "18774": {
      "op": "SSTORE"
    },
    "18775": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18778": {
      "op": "JUMP"
    },
    "18779": {
      "op": "JUMPDEST"
    },
    "18780": {
      "op": "DUP3"
    },
    "18781": {
      "op": "DUP1"
    },
    "18782": {
      "op": "ADD"
    },
    "18783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18785": {
      "op": "ADD"
    },
    "18786": {
      "op": "DUP6"
    },
    "18787": {
      "op": "SSTORE"
    },
    "18788": {
      "op": "DUP3"
    },
    "18789": {
      "op": "ISZERO"
    },
    "18790": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18793": {
      "op": "JUMPI"
    },
    "18794": {
      "op": "SWAP2"
    },
    "18795": {
      "op": "DUP3"
    },
    "18796": {
      "op": "ADD"
    },
    "18797": {
      "op": "JUMPDEST"
    },
    "18798": {
      "op": "DUP3"
    },
    "18799": {
      "op": "DUP2"
    },
    "18800": {
      "op": "GT"
    },
    "18801": {
      "op": "ISZERO"
    },
    "18802": {
      "op": "PUSH2",
      "value": "0x483E"
    },
    "18805": {
      "op": "JUMPI"
    },
    "18806": {
      "op": "DUP3"
    },
    "18807": {
      "op": "CALLDATALOAD"
    },
    "18808": {
      "op": "DUP3"
    },
    "18809": {
      "op": "SSTORE"
    },
    "18810": {
      "op": "SWAP2"
    },
    "18811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18813": {
      "op": "ADD"
    },
    "18814": {
      "op": "SWAP2"
    },
    "18815": {
      "op": "SWAP1"
    },
    "18816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18818": {
      "op": "ADD"
    },
    "18819": {
      "op": "SWAP1"
    },
    "18820": {
      "op": "PUSH2",
      "value": "0x496D"
    },
    "18823": {
      "op": "JUMP"
    },
    "18824": {
      "op": "JUMPDEST"
    },
    "18825": {
      "op": "JUMPDEST"
    },
    "18826": {
      "op": "DUP1"
    },
    "18827": {
      "op": "DUP3"
    },
    "18828": {
      "op": "GT"
    },
    "18829": {
      "op": "ISZERO"
    },
    "18830": {
      "op": "PUSH2",
      "value": "0x484A"
    },
    "18833": {
      "op": "JUMPI"
    },
    "18834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18836": {
      "op": "DUP2"
    },
    "18837": {
      "op": "SSTORE"
    },
    "18838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18840": {
      "op": "ADD"
    },
    "18841": {
      "op": "PUSH2",
      "value": "0x4989"
    },
    "18844": {
      "op": "JUMP"
    },
    "18845": {
      "op": "JUMPDEST"
    },
    "18846": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18848": {
      "op": "SHR"
    },
    "18849": {
      "op": "SWAP1"
    },
    "18850": {
      "op": "JUMP"
    },
    "18851": {
      "op": "JUMPDEST"
    },
    "18852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "18856": {
      "op": "RETURNDATASIZE"
    },
    "18857": {
      "op": "LT"
    },
    "18858": {
      "op": "ISZERO"
    },
    "18859": {
      "op": "PUSH2",
      "value": "0x49B3"
    },
    "18862": {
      "op": "JUMPI"
    },
    "18863": {
      "op": "PUSH2",
      "value": "0x25A2"
    },
    "18866": {
      "op": "JUMP"
    },
    "18867": {
      "op": "JUMPDEST"
    },
    "18868": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18870": {
      "op": "DUP2"
    },
    "18871": {
      "op": "DUP3"
    },
    "18872": {
      "op": "RETURNDATACOPY"
    },
    "18873": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "18878": {
      "op": "PUSH2",
      "value": "0x49C7"
    },
    "18881": {
      "op": "DUP3"
    },
    "18882": {
      "op": "MLOAD"
    },
    "18883": {
      "op": "PUSH2",
      "value": "0x499D"
    },
    "18886": {
      "op": "JUMP"
    },
    "18887": {
      "op": "JUMPDEST"
    },
    "18888": {
      "op": "EQ"
    },
    "18889": {
      "op": "PUSH2",
      "value": "0x49D1"
    },
    "18892": {
      "op": "JUMPI"
    },
    "18893": {
      "op": "PUSH2",
      "value": "0x25A2"
    },
    "18896": {
      "op": "JUMP"
    },
    "18897": {
      "op": "JUMPDEST"
    },
    "18898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18900": {
      "op": "MLOAD"
    },
    "18901": {
      "op": "RETURNDATASIZE"
    },
    "18902": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "18904": {
      "op": "NOT"
    },
    "18905": {
      "op": "ADD"
    },
    "18906": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18908": {
      "op": "DUP3"
    },
    "18909": {
      "op": "RETURNDATACOPY"
    },
    "18910": {
      "op": "DUP1"
    },
    "18911": {
      "op": "MLOAD"
    },
    "18912": {
      "op": "RETURNDATASIZE"
    },
    "18913": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "18922": {
      "op": "DUP2"
    },
    "18923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18925": {
      "op": "DUP5"
    },
    "18926": {
      "op": "ADD"
    },
    "18927": {
      "op": "GT"
    },
    "18928": {
      "op": "DUP2"
    },
    "18929": {
      "op": "DUP5"
    },
    "18930": {
      "op": "GT"
    },
    "18931": {
      "op": "OR"
    },
    "18932": {
      "op": "ISZERO"
    },
    "18933": {
      "op": "PUSH2",
      "value": "0x4A01"
    },
    "18936": {
      "op": "JUMPI"
    },
    "18937": {
      "op": "POP"
    },
    "18938": {
      "op": "POP"
    },
    "18939": {
      "op": "POP"
    },
    "18940": {
      "op": "POP"
    },
    "18941": {
      "op": "PUSH2",
      "value": "0x25A2"
    },
    "18944": {
      "op": "JUMP"
    },
    "18945": {
      "op": "JUMPDEST"
    },
    "18946": {
      "op": "DUP3"
    },
    "18947": {
      "op": "DUP5"
    },
    "18948": {
      "op": "ADD"
    },
    "18949": {
      "op": "SWAP3"
    },
    "18950": {
      "op": "POP"
    },
    "18951": {
      "op": "DUP3"
    },
    "18952": {
      "op": "MLOAD"
    },
    "18953": {
      "op": "SWAP2"
    },
    "18954": {
      "op": "POP"
    },
    "18955": {
      "op": "DUP1"
    },
    "18956": {
      "op": "DUP3"
    },
    "18957": {
      "op": "GT"
    },
    "18958": {
      "op": "ISZERO"
    },
    "18959": {
      "op": "PUSH2",
      "value": "0x4A1B"
    },
    "18962": {
      "op": "JUMPI"
    },
    "18963": {
      "op": "POP"
    },
    "18964": {
      "op": "POP"
    },
    "18965": {
      "op": "POP"
    },
    "18966": {
      "op": "POP"
    },
    "18967": {
      "op": "PUSH2",
      "value": "0x25A2"
    },
    "18970": {
      "op": "JUMP"
    },
    "18971": {
      "op": "JUMPDEST"
    },
    "18972": {
      "op": "POP"
    },
    "18973": {
      "op": "RETURNDATASIZE"
    },
    "18974": {
      "op": "DUP4"
    },
    "18975": {
      "op": "ADD"
    },
    "18976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18978": {
      "op": "DUP3"
    },
    "18979": {
      "op": "DUP5"
    },
    "18980": {
      "op": "ADD"
    },
    "18981": {
      "op": "ADD"
    },
    "18982": {
      "op": "GT"
    },
    "18983": {
      "op": "ISZERO"
    },
    "18984": {
      "op": "PUSH2",
      "value": "0x4A33"
    },
    "18987": {
      "op": "JUMPI"
    },
    "18988": {
      "op": "POP"
    },
    "18989": {
      "op": "POP"
    },
    "18990": {
      "op": "POP"
    },
    "18991": {
      "op": "PUSH2",
      "value": "0x25A2"
    },
    "18994": {
      "op": "JUMP"
    },
    "18995": {
      "op": "JUMPDEST"
    },
    "18996": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18998": {
      "op": "ADD"
    },
    "18999": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19001": {
      "op": "NOT"
    },
    "19002": {
      "op": "AND"
    },
    "19003": {
      "op": "DUP2"
    },
    "19004": {
      "op": "ADD"
    },
    "19005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19007": {
      "op": "ADD"
    },
    "19008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19010": {
      "op": "MSTORE"
    },
    "19011": {
      "op": "SWAP2"
    },
    "19012": {
      "op": "POP"
    },
    "19013": {
      "op": "POP"
    },
    "19014": {
      "op": "SWAP1"
    },
    "19015": {
      "op": "JUMP"
    }
  },
  "sha1": "e509e6d7320af9a55e244b559a6d49ad1e0fbd9e",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport \"../interfaces/ICryptoChampions.sol\";\nimport \"../interfaces/IMinigameFactoryRegistry.sol\";\nimport \"./chainlink_contracts/AggregatorV3Interface.sol\";\nimport \"./chainlink_contracts/VRFConsumerBase.sol\";\nimport \"./minigames/games/priceWars/PriceWarsFactory.sol\";\nimport \"./minigames/games/priceWars/PriceWars.sol\";\n\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/AccessControl.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC1155/ERC1155.sol\";\n\n/// @title Crypto Champions Interface\n/// @author Oozyx\n/// @notice This is the crypto champions class\ncontract CryptoChampions is ICryptoChampions, AccessControl, ERC1155, VRFConsumerBase {\n    using SafeMath for uint256;\n\n    // Possible phases the contract can be in.  Phase one is when users can mint elder spirits and two is when they can mint heros.\n    enum Phase { MINT_ELDER, MINT_HERO }\n\n    // The current phase the contract is in.\n    Phase public currentPhase;\n\n    // The owner role is used to globally govern the contract\n    bytes32 internal constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\n\n    // The admin role is used for administrator duties and reports to the owner\n    bytes32 internal constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\");\n\n    // The role to declare round winners\n    bytes32 internal constant ROLE_GAME_ADMIN = keccak256(\"ROLE_GAME_ADMIN\");\n\n    // Reserved id for the in game currency\n    uint256 internal constant IN_GAME_CURRENCY_ID = 0;\n\n    // Constants used to determine fee proportions.\n    // Usage: fee.mul(proportion).div(10)\n    uint8 internal constant HERO_MINT_ROYALTY_PROPORTION = 8;\n\n    // The identifier for the price wars game\n    string internal constant PRICE_WARS_ID = \"PRICE_WARS\";\n\n    // The max amount of elders that can be minted\n    uint256 public constant MAX_NUMBER_OF_ELDERS = 7;\n\n    // The amount of elders minted\n    // This amount cannot be greater than MAX_NUMBER_OF_ELDERS\n    uint256 public eldersInGame = 0;\n\n    // The mapping of elder id to elder owner, ids can only be in the range of [1, MAX_NUMBER OF ELDERS]\n    mapping(uint256 => address) internal _elderOwners;\n\n    // The mapping of elder id to the elder spirit\n    mapping(uint256 => ElderSpirit) internal _elderSpirits;\n\n    // The amount of heros minted\n    uint256 public heroesMinted = 0;\n\n    // The mapping of hero id to owner, ids can only be in the range of\n    // [1 + MAX_NUMBER_OF_ELDERS, ]\n    mapping(uint256 => address) internal _heroOwners;\n\n    // The mapping of hero id to the hero\n    mapping(uint256 => Hero) internal _heroes;\n\n    // The mapping of the round played to the elder spawns mapping\n    mapping(uint256 => mapping(uint256 => uint256)) internal _roundElderSpawns;\n\n    // The mint price for elders and heroes\n    uint256 public elderMintPrice;\n\n    // The current round index\n    uint256 public currentRound;\n\n    // The mapping of affinities (token ticker) to price feed address\n    mapping(string => address) internal _affinities;\n\n    // List of available affinities\n    string[] public affinities;\n\n    // The key hash used for VRF\n    bytes32 internal _keyHash;\n\n    // The fee in LINK for VRF\n    uint256 internal _fee;\n\n    // Mapping of request id to hero id\n    mapping(uint256 => bytes32) internal _heroRandomRequest;\n\n    // Mapping of request id to random result\n    mapping(bytes32 => uint256) internal _randomResultsVRF;\n\n    // The list of affinities that won in a round\n    string[] public winningAffinitiesByRound;\n\n    // The registry of minigame factories\n    IMinigameFactoryRegistry internal _minigameFactoryRegistry;\n\n    /// @notice Triggered when an elder spirit gets minted\n    /// @param elderId The elder id belonging to the minted elder\n    /// @param owner The address of the owner\n    event ElderSpiritMinted(uint256 elderId, address owner);\n\n    /// @notice Triggered when a hero gets minted\n    /// @param heroId The hero id belonging to the hero that was minted\n    /// @param owner The address of the owner\n    event HeroMinted(uint256 heroId, address owner);\n\n    /// @notice Triggered when the elder spirits have been burned\n    event ElderSpiritsBurned();\n\n    /// @notice Triggered when a hero has been burned\n    /// @param heroId The hero id of the hero that was burned\n    event HeroBurned(uint256 heroId);\n\n    // Initializes a new CryptoChampions contract\n    // TODO: need to provide the proper uri\n    constructor(\n        bytes32 keyhash,\n        address vrfCoordinator,\n        address linkToken,\n        address minigameFactoryRegistry\n    ) public ERC1155(\"uri\") VRFConsumerBase(vrfCoordinator, linkToken) {\n        // Set up administrative roles\n        _setRoleAdmin(ROLE_OWNER, ROLE_OWNER);\n        _setRoleAdmin(ROLE_ADMIN, ROLE_OWNER);\n        _setRoleAdmin(ROLE_GAME_ADMIN, ROLE_OWNER);\n\n        // Set up the deployer as the owner and give admin rights\n        _setupRole(ROLE_OWNER, msg.sender);\n        grantRole(ROLE_ADMIN, msg.sender);\n\n        // Set initial elder mint price\n        elderMintPrice = 0.271 ether;\n\n        // Set the initial round to 0\n        currentRound = 0;\n\n        // Set initial phase to phase one\n        currentPhase = Phase.MINT_ELDER;\n\n        // Set VRF fields\n        _keyHash = keyhash;\n        _fee = 0.1 * 10**18; // 0.1 LINK\n\n        _minigameFactoryRegistry = IMinigameFactoryRegistry(minigameFactoryRegistry);\n    }\n\n    modifier isValidElderSpiritId(uint256 elderId) {\n        require(elderId > IN_GAME_CURRENCY_ID && elderId <= MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        _;\n    }\n\n    modifier isValidHero(uint256 heroId) {\n        require(heroId > MAX_NUMBER_OF_ELDERS); // dev: Given id is not valid.\n        require(_heroes[heroId].valid); // dev: Hero is not valid.\n        _;\n    }\n\n    // Restrict to only price war addresses\n    modifier onlyGameAdmin {\n        _hasRole(ROLE_GAME_ADMIN);\n        _;\n    }\n\n    // Restrict to only admins\n    modifier onlyAdmin {\n        _hasRole(ROLE_ADMIN);\n        _;\n    }\n\n    /// @notice Makes a request for a random number\n    /// @param userProvidedSeed The seed for the random request\n    /// @return requestId The request id\n    function _getRandomNumber(uint256 userProvidedSeed) internal returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= _fee); // dev: Not enough LINK - fill contract with faucet\n        return requestRandomness(_keyHash, _fee, userProvidedSeed);\n    }\n\n    /// @notice Callback function used by the VRF coordinator\n    /// @param requestId The request id\n    /// @param randomness The randomness\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        _randomResultsVRF[requestId] = randomness;\n    }\n\n    /// @notice Sets the contract's phase\n    /// @param phase The phase the contract should be set to\n    function setPhase(Phase phase) external onlyAdmin {\n        currentPhase = phase;\n    }\n\n    /// @notice Check if msg.sender has the role\n    /// @param role The role to verify\n    function _hasRole(bytes32 role) internal view {\n        require(hasRole(role, msg.sender)); // dev: Access denied.\n    }\n\n    /// @notice Creates a new token affinity\n    /// @dev This will be called by a priviledged address. It will allow to create new affinities. May need to add a\n    /// remove affinity function as well.\n    /// @param tokenTicker The token ticker of the affinity\n    /// @param feedAddress The price feed address\n    function createAffinity(string calldata tokenTicker, address feedAddress) external override onlyAdmin {\n        _affinities[tokenTicker] = feedAddress;\n        affinities.push(tokenTicker);\n    }\n\n    /// @notice Sets the elder mint price\n    /// @dev Can only be called by an admin address\n    /// @param price The new elder mint price\n    function setElderMintPrice(uint256 price) external override onlyAdmin {\n        elderMintPrice = price;\n    }\n\n    /// @notice Mints an elder spirit\n    /// @dev For now only race, class, and token (affinity) are needed. This will change. The race and class ids will\n    /// probably be public constants defined in the crypto champions contract, this is subject to change.\n    /// @param raceId The race id\n    /// @param classId The class id\n    /// @param affinity The affinity of the minted hero\n    /// @return The elder spirit id\n    function mintElderSpirit(\n        uint256 raceId,\n        uint256 classId,\n        string calldata affinity\n    ) external payable override returns (uint256) {\n        require(currentPhase == Phase.MINT_ELDER); // dev: Can only mint elders in phase one\n        require(eldersInGame < MAX_NUMBER_OF_ELDERS); // dev: Max number of elders already minted.\n        require(msg.value >= elderMintPrice); // dev: Insufficient payment.\n        require(_affinities[affinity] != address(0)); // dev: Affinity does not exist.\n\n        // Generate the elderId and make sure it doesn't already exists\n        uint256 elderId = eldersInGame.add(1);\n        assert(_elderOwners[elderId] == address(0)); // dev: Elder with id already has owner.\n        assert(_elderSpirits[elderId].valid == false); // dev: Elder spirit with id has already been generated.\n\n        // Get the price data of affinity\n        int256 affinityPrice;\n        (, affinityPrice, , , ) = AggregatorV3Interface(_affinities[affinity]).latestRoundData();\n\n        // Create the elder spirit\n        ElderSpirit memory elder;\n        elder.valid = true;\n        elder.raceId = raceId;\n        elder.classId = classId;\n        elder.affinity = affinity;\n        elder.affinityPrice = affinityPrice;\n\n        // Mint the NFT\n        _mint(_msgSender(), elderId, 1, \"\"); // TODO: give the URI\n\n        // Assign the elder id with the owner and its spirit\n        _elderOwners[elderId] = _msgSender();\n        _elderSpirits[elderId] = elder;\n\n        // Increment elders minted\n        eldersInGame = eldersInGame.add(1);\n\n        // Refund if user sent too much\n        _refundSender(elderMintPrice);\n\n        emit ElderSpiritMinted(elderId, _msgSender());\n\n        return elderId;\n    }\n\n    /// @notice Gets the elder owner for the given elder id\n    /// @param elderId The elder id\n    /// @return The owner of the elder\n    function getElderOwner(uint256 elderId) public view override isValidElderSpiritId(elderId) returns (address) {\n        require(_elderOwners[elderId] != address(0)); // dev: Given elder id has not been minted.\n\n        return _elderOwners[elderId];\n    }\n\n    /// @notice Mints a hero based on an elder spirit\n    /// @param elderId The id of the elder spirit this hero is based on\n    /// @return The hero id\n    function mintHero(uint256 elderId, string calldata heroName)\n        external\n        payable\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(currentPhase == Phase.MINT_HERO); //dev: Can only mint hero in phase 2.\n        require(_elderSpirits[elderId].valid); // dev: Elder with id doesn't exists or not valid.\n\n        require(_canMintHero(elderId)); // dev: Can't mint hero. Too mnay heroes minted for elder.\n\n        uint256 mintPrice = getHeroMintPrice(currentRound, elderId);\n        require(msg.value >= mintPrice); // dev: Insufficient payment.\n\n        // Generate the hero id\n        uint256 heroId = heroesMinted.add(1) + MAX_NUMBER_OF_ELDERS;\n        assert(_heroOwners[heroId] == address(0)); // dev: Hero with id already has an owner.\n        assert(_heroes[heroId].valid == false); // dev: Hero with id has already been generated.\n\n        // Create the hero\n        Hero memory hero;\n        hero.valid = true;\n        hero.name = heroName;\n        hero.roundMinted = currentRound;\n        hero.elderId = elderId;\n        hero.raceId = _elderSpirits[elderId].raceId;\n        hero.classId = _elderSpirits[elderId].classId;\n        hero.affinity = _elderSpirits[elderId].affinity;\n        _heroes[heroId] = hero;\n\n        // Request the random number and set hero attributes\n        bytes32 requestId = _getRandomNumber(heroId);\n        _heroRandomRequest[heroId] = requestId;\n\n        // Mint the NFT\n        _mint(_msgSender(), heroId, 1, \"\"); // TODO: give the URI\n\n        // Assign the hero id with the owner and with the hero\n        _heroOwners[heroId] = _msgSender();\n\n        // Increment the heroes minted and the elder spawns\n        heroesMinted = heroesMinted.add(1);\n        _roundElderSpawns[currentRound][elderId] = _roundElderSpawns[currentRound][elderId].add(1);\n\n        // Disburse royalties\n        uint256 royaltyFee = mintPrice.mul(HERO_MINT_ROYALTY_PROPORTION).div(10);\n        address seedOwner = _elderOwners[elderId];\n        (bool success, ) = seedOwner.call{ value: royaltyFee }(\"\");\n        require(success, \"Payment failed\");\n        // Remaining 20% kept for contract/Treum\n\n        // Refund if user sent too much\n        _refundSender(mintPrice);\n\n        emit HeroMinted(heroId, _msgSender());\n\n        return heroId;\n    }\n\n    /// @notice Checks to see if a hero can be minted for a given elder\n    /// @dev (n < 4) || (n <= 2 * m)\n    ///     n is number of champions already minted for elder\n    ///     m is number of champions already minted for elder with least amount of champions\n    /// @param elderId The elder id\n    /// @return True if hero can be minted, false otherwise\n    function _canMintHero(uint256 elderId) internal view returns (bool) {\n        // Verify first condition\n        if (_roundElderSpawns[currentRound][elderId] < 4) {\n            return true;\n        }\n\n        // Find the elder with the least amount of heroes minted\n        uint256 smallestElderAmount = _roundElderSpawns[currentRound][elderId];\n        for (uint256 i = 1; i <= eldersInGame; ++i) {\n            if (_roundElderSpawns[currentRound][i] < smallestElderAmount) {\n                smallestElderAmount = _roundElderSpawns[currentRound][i];\n            }\n        }\n\n        return _roundElderSpawns[currentRound][elderId] <= smallestElderAmount.mul(2);\n    }\n\n    /// @notice Sets the hero attributes\n    /// @param heroId The hero id\n    function trainHero(uint256 heroId) external override isValidHero(heroId) {\n        bytes32 heroRequestId = _heroRandomRequest[heroId];\n        require(heroRequestId != 0); // dev: Random number was never requested for this hero.\n\n        uint256 randomNumber = _randomResultsVRF[heroRequestId];\n        require(randomNumber != 0); // dev: Random number has not arrived yet.\n\n        uint256 newRandomNumber;\n\n        _heroes[heroId].level = 1; // 1 by default\n        (_heroes[heroId].appearance, newRandomNumber) = _rollDice(2, randomNumber); // 1 out of 2\n\n        (_heroes[heroId].trait1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].trait2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill1, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n        (_heroes[heroId].skill2, newRandomNumber) = _rollDice(4, newRandomNumber); // 1 out of 4\n\n        (_heroes[heroId].alignment, newRandomNumber) = _rollDice(9, newRandomNumber); // 1 out of 9\n        (_heroes[heroId].background, newRandomNumber) = _rollDice(30, newRandomNumber); // 1 out of 30\n        (_heroes[heroId].hometown, newRandomNumber) = _rollDice(24, newRandomNumber); // 1 out of 24\n        (_heroes[heroId].weather, newRandomNumber) = _rollDice(5, newRandomNumber); // 1 ouf of 5\n\n        (_heroes[heroId].hp, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].hp = _heroes[heroId].hp.add(9);\n        (_heroes[heroId].mana, newRandomNumber) = _rollDice(21, newRandomNumber); // Roll 10-30\n        _heroes[heroId].mana = _heroes[heroId].mana.add(9);\n        (_heroes[heroId].stamina, newRandomNumber) = _rollDice(31, newRandomNumber); // Roll 10-40\n        _heroes[heroId].stamina = _heroes[heroId].stamina.add(9);\n\n        (_heroes[heroId].strength, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].strength = _heroes[heroId].strength.add(2);\n        (_heroes[heroId].dexterity, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].dexterity = _heroes[heroId].dexterity.add(2);\n        (_heroes[heroId].constitution, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].constitution = _heroes[heroId].constitution.add(2);\n        (_heroes[heroId].intelligence, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].intelligence = _heroes[heroId].intelligence.add(2);\n        (_heroes[heroId].wisdom, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].wisdom = _heroes[heroId].wisdom.add(2);\n        (_heroes[heroId].charisma, newRandomNumber) = _rollDice(16, newRandomNumber); // Roll 3-18\n        _heroes[heroId].charisma = _heroes[heroId].charisma.add(2);\n    }\n\n    /// @notice Simulates rolling dice\n    /// @param maxNumber The max number of the dice (e.g. regular die is 6)\n    /// @param randomNumber The random number\n    /// @return The result of the dice roll and a new random number to use for another dice roll\n    function _rollDice(uint256 maxNumber, uint256 randomNumber) internal pure returns (uint256, uint256) {\n        return (randomNumber.mod(maxNumber) + 1, randomNumber.div(10));\n    }\n\n    /// @notice Get the hero owner for the given hero id\n    /// @param heroId The hero id\n    /// @return The owner address\n    function getHeroOwner(uint256 heroId) public view override isValidHero(heroId) returns (address) {\n        require(_heroOwners[heroId] != address(0)); // dev: Given hero id has not been minted.\n\n        return _heroOwners[heroId];\n    }\n\n    /// @notice Disburses the rewards evenly among the heroes of the winning affinity\n    /// @dev This will be called from a priviledged address\n    /// @param winningAffinity The winning affinity token ticker\n    function disburseRewards(string calldata winningAffinity) external override onlyAdmin {}\n\n    /// @notice Burns all the elder spirits in game\n    function burnElders() external override onlyAdmin {\n        require(eldersInGame > 0); // dev: No elders have been minted.\n        for (uint256 i = 1; i <= MAX_NUMBER_OF_ELDERS; ++i) {\n            if (_elderSpirits[i].valid) {\n                _burnElder(i);\n            }\n        }\n\n        // Increment the round\n        currentRound = currentRound.add(1);\n\n        emit ElderSpiritsBurned();\n    }\n\n    /// @notice Burns the elder spirit\n    /// @dev This will only be able to be called by the contract\n    /// @param elderId The elder id\n    function _burnElder(uint256 elderId) internal isValidElderSpiritId(elderId) {\n        require(_elderSpirits[elderId].valid); // dev: Cannot burn elder that does not exist.\n\n        // TODO: need to make sure _elderOwners[elderId] can never be address(0).\n        //     Check recipient before every token send so that we never send to address(0).\n        _burn(_elderOwners[elderId], elderId, 1);\n\n        // Reset elder values for elder id\n        eldersInGame = eldersInGame.sub(1);\n        _elderOwners[elderId] = address(0);\n        _elderSpirits[elderId].valid = false;\n    }\n\n    /// @notice Burns the hero for a refund\n    /// @dev This will only be able to be called from the owner of the hero\n    /// @param heroId The hero id to burn\n    function burnHero(uint256 heroId) external override isValidHero(heroId) {\n        require(_heroes[heroId].valid); // dev: Cannot burn hero that does not exist.\n        require(_heroOwners[heroId] == _msgSender()); // dev: Cannot burn hero that is not yours.\n\n        _burn(_heroOwners[heroId], heroId, 1);\n\n        // Decrement the amount of spawns for the hero's elder\n        uint256 elderId = _heroes[heroId].elderId;\n        uint256 heroRound = _heroes[heroId].roundMinted;\n        _roundElderSpawns[heroRound][elderId] = _roundElderSpawns[heroRound][elderId].sub(1);\n\n        // Reset hero values for hero id\n        _heroOwners[heroId] = address(0);\n        _heroes[heroId].valid = false;\n\n        emit HeroBurned(heroId);\n    }\n\n    /// @notice Gets the minting price of a hero based on specified elder spirit\n    /// @param round The round of the hero to be minted\n    /// @param elderId The elder id for which the hero will be based on\n    /// @return The hero mint price\n    function getHeroMintPrice(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Cannot get price round has not started.\n        uint256 heroAmount = _roundElderSpawns[round][elderId].add(1);\n\n        return _priceFormula(heroAmount);\n    }\n\n    /// @notice The bounding curve function that calculates price for the new supply\n    /// @dev price = 0.02*(heroes minted) + 0.1\n    /// @param newSupply The new supply after a burn or mint\n    /// @return The calculated price\n    function _priceFormula(uint256 newSupply) internal pure returns (uint256) {\n        uint256 price;\n        uint256 base = 1;\n        price = newSupply.mul(10**18).mul(2).div(100);\n        price = price.add(base.mul(10**18).div(10));\n\n        return price;\n    }\n\n    /// @dev Hook function called before every token transfer\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            // If token is an elder spirit, update owners so can send them royalties\n            if (ids[i] > IN_GAME_CURRENCY_ID && ids[i] <= MAX_NUMBER_OF_ELDERS) {\n                _elderOwners[ids[i]] = payable(to);\n            }\n            if (ids[i] > MAX_NUMBER_OF_ELDERS) {\n                _heroOwners[ids[i]] = to;\n            }\n        }\n    }\n\n    /// @notice Gets the amount of heroes spawn from the elder with the specified id during the specified round\n    /// @param round The round the elder was created\n    /// @param elderId The elder id\n    /// @return The amount of heroes spawned from the elder\n    function getElderSpawnsAmount(uint256 round, uint256 elderId)\n        public\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (uint256)\n    {\n        require(round <= currentRound); // dev: Invalid round.\n        return _roundElderSpawns[round][elderId];\n    }\n\n    /// @notice Refunds the sender if they sent too much\n    /// @param cost The cost\n    function _refundSender(uint256 cost) internal {\n        if (msg.value.sub(cost) > 0) {\n            (bool success, ) = msg.sender.call{ value: msg.value.sub(cost) }(\"\");\n            require(success); // dev: Refund failed.\n        }\n    }\n\n    /// @notice Fetches the data of a single elder spirit\n    /// @param elderId The id of the elder being searched for\n    /// @return The elder's attributes in the following order (valid, raceId, classId, affinity)\n    function getElderSpirit(uint256 elderId)\n        external\n        view\n        override\n        isValidElderSpiritId(elderId)\n        returns (\n            bool,\n            uint256,\n            uint256,\n            string memory,\n            int256\n        )\n    {\n        ElderSpirit memory elderSpirit = _elderSpirits[elderId];\n        return (\n            elderSpirit.valid,\n            elderSpirit.raceId,\n            elderSpirit.classId,\n            elderSpirit.affinity,\n            elderSpirit.affinityPrice\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return valid, affinity, affinity price, round minted, elder id\n    function getHeroGameData(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            bool, // valid\n            string memory, // affinity\n            int256, // affinity price\n            uint256, // round minted\n            uint256 // elder id\n        )\n    {\n        return (\n            _heroes[heroId].valid,\n            _heroes[heroId].affinity,\n            _heroes[heroId].affinityPrice,\n            _heroes[heroId].roundMinted,\n            _heroes[heroId].elderId\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return name, race id, class id, appearance\n    function getHeroVisuals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            string memory, // name\n            uint256, // race id\n            uint256, // class id\n            uint256 // appearance\n        )\n    {\n        return (_heroes[heroId].name, _heroes[heroId].raceId, _heroes[heroId].classId, _heroes[heroId].appearance);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return trait 1, trait 2, skill 1, skill 2\n    function getHeroTraitsSkills(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint256, // trait 1\n            uint256, // trait 2\n            uint256, // skill 1\n            uint256 // skill 2\n        )\n    {\n        return (_heroes[heroId].trait1, _heroes[heroId].trait2, _heroes[heroId].skill1, _heroes[heroId].skill2);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return alignment, background, hometown, weather\n    function getHeroLore(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint256, // alignment\n            uint256, // background\n            uint256, // hometown\n            uint256 // weather\n        )\n    {\n        return (\n            _heroes[heroId].alignment,\n            _heroes[heroId].background,\n            _heroes[heroId].hometown,\n            _heroes[heroId].weather\n        );\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return level, hp, mana\n    function getHeroVitals(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint256, // level\n            uint256, // hp\n            uint256, // mana\n            uint256 // stamina\n        )\n    {\n        return (_heroes[heroId].level, _heroes[heroId].hp, _heroes[heroId].mana, _heroes[heroId].stamina);\n    }\n\n    /// @notice Hero getter function\n    /// @param heroId The hero id\n    /// @return stamina, strength, dexterity, constitution, intelligence, wisdom, charisma\n    function getHeroStats(uint256 heroId)\n        external\n        view\n        override\n        isValidHero(heroId)\n        returns (\n            uint256, // strength\n            uint256, // dexterity\n            uint256, // constitution\n            uint256, // intelligence\n            uint256, // wisdom\n            uint256 // charisma\n        )\n    {\n        return (\n            _heroes[heroId].strength,\n            _heroes[heroId].dexterity,\n            _heroes[heroId].constitution,\n            _heroes[heroId].intelligence,\n            _heroes[heroId].wisdom,\n            _heroes[heroId].charisma\n        );\n    }\n\n    /// @notice Fetches the feed address for a given affinity\n    /// @param affinity The affinity being searched for\n    /// @return The address of the affinity's feed address\n    function getAffinityFeedAddress(string calldata affinity) external view override returns (address) {\n        return _affinities[affinity];\n    }\n\n    /// @notice Fetches the number of elders currently in the game\n    /// @return The current number of elders in the game\n    function getNumEldersInGame() external view override returns (uint256) {\n        return eldersInGame;\n    }\n\n    /// @notice Declares a winning affinity for a round\n    /// @dev This can only be called by a game admin contract\n    /// @param winningAffinity The affinity that won the game\n    function declareRoundWinner(string calldata winningAffinity) external override onlyGameAdmin {\n        winningAffinitiesByRound.push(winningAffinity);\n    }\n\n    /// @notice Starts a new price game\n    /// @dev This can only be called by the admin of the contract\n    function startNewPriceGame() external override onlyAdmin {\n        address priceWarsFactoryAddress = _minigameFactoryRegistry.getFactory(PRICE_WARS_ID);\n        PriceWarsFactory priceWarsFactory = PriceWarsFactory(priceWarsFactoryAddress);\n        PriceWars priceWar = priceWarsFactory.createPriceWar(address(this));\n        grantRole(ROLE_GAME_ADMIN, address(priceWar));\n        priceWar.startGame();\n    }\n}\n",
  "sourceMap": "743:28117:12:-:0;;;2116:1;2086:31;;2461:1;2431:31;;4548:965;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4548:965:12;;;;;;;;;;;;;;;;;1976:354:5;;;;;;;;;;;-1:-1:-1;;;1976:354:5;;;;;;;4548:965:12;;;;;;;;;;;768:40:1;-1:-1:-1;;;768:18:1;:40::i;:::-;2026:13:5;2034:4;2026:7;:13::i;:::-;2128:41;-1:-1:-1;;;2128:18:5;:41::i;:::-;2269:54;-1:-1:-1;;;2269:18:5;:54::i;:::-;-1:-1:-1;;;;;;;9212:32:15;;;;;;;;9254;;;;;4805:37:12::2;-1:-1:-1::0;;;;;;;;;;;1220:23:12;4805:13:::2;:37::i;:::-;4852;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;4852:13:12::2;:37::i;:::-;4899:42;1484:28;-1:-1:-1::0;;;;;;;;;;;4899:13:12::2;:42::i;:::-;5018:34;-1:-1:-1::0;;;;;;;;;;;5041:10:12::2;5018;:34::i;:::-;5062:33;-1:-1:-1::0;;;;;;;;;;;5084:10:12::2;5062:9;:33::i;:::-;5163:11;5146:14;:28:::0;5238:1:::2;5223:12;:16:::0;5292:12:::2;:31:::0;;-1:-1:-1;;5292:31:12::2;::::0;;5360:8:::2;:18:::0;;;;-1:-1:-1;;5395:12:12::2;5388:4;:19:::0;5430:24:::2;:76:::0;;-1:-1:-1;;;;;;5430:76:12::2;-1:-1:-1::0;;;;;5430:76:12;;::::2;::::0;;;::::2;::::0;;743:28117;;1507:198:1;-1:-1:-1;;;;;;1590:25:1;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:1;;;;;1694:4;1658:33;;;;;;;;:40;;-1:-1:-1;;1658:40:1;;;;;;1507:198::o;7541:86:5:-;7607:13;;;;:4;;:13;;;;;:::i;:::-;;7541:86;:::o;6823:196:0:-;6934:6;:12;;;;;;;;;;;:22;;;6911:57;;6958:9;;6941:4;;6911:57;;6934:6;6911:57;6978:6;:12;;;;;;;;;;;:22;;:34;6823:196::o;6588:110::-;6666:25;6677:4;6683:7;6666:10;:25::i;4644:223::-;4735:6;:12;;;;;;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:184;7098:6;:12;;;;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:0;7170:7;-1:-1:-1;;;;;7152:40:0;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;598:104:10:-;685:10;598:104;:::o;2950:137:0:-;3019:4;3042:12;;;;;;;;;;:38;;3072:7;;3042:29;;;;;:38;;:::i;:::-;3035:45;;2950:137;;;;;:::o;6429:150:11:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:11;;6522:4;:50::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:11;;7087:9;:55::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:11;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;743:28117:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:28117:12;;;-1:-1:-1;743:28117:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CryptoChampions.sol",
  "type": "contract"
}